{
	"id": "9bee1b85343a239ee3f9346eb8f91f9e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\n// Constraints for wei and Ethers in fixed amount and royalties\n// Burn only owner // Open Bidding \npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155.sol\"; \nimport \"./ERC1155Burnable.sol\";\nimport \"./OnyxNft1155Royalties.sol\";\nimport \"./OnyxNft1155Auctions.sol\";\ncontract Dropsite is ERC1155, ERC1155Burnable, OnyxNftErc20 ,OnyxNft1155Auction { \n\n    //Check weather NFT Exists or not\n    mapping (uint => bool) nftExists;\n    mapping (uint=>string)TokenURI;\n    bytes  data =\"\";\n\n    uint NFTsMinted=0;\n    uint numOfCopies=1;\n    // To Check token Exixtance\n    modifier TokenNotExist( uint nftId){\n        require(nftExists[nftId]==false , \"Token Already Exists\");\n        _;\n    }\n    \n    // NFT ID to Price\n    mapping (address=>mapping(uint=>uint)) NFT_Price;\n\n    modifier contractIsNotPaused(){\n        require (IsPaused == false, \"Contract is Paused\" );\n        _;\n    }\n  modifier OnlyOwner {\n        require(_msgSender() == Owner, \"OnyxNft Owner can Access\");\n        _;\n    }\n\n      bool public IsPaused = true;\n    address payable public  Owner;\n    string private _name;\n    \n    constructor (string memory name){\n        _name = name;\n        Owner = payable(msg.sender);\n    }\n\n      /* Direct Minting on Blockchain \n    ** No Fee and Taxes on Minting\n    ** Want to mint his own Address direct BVlockchain\n    ** TokenURI is IPFS hash and will Get from Web3\n    */\n    function random() internal returns (uint) {\n    uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, NFTsMinted))) % 3;\n    \n    NFTsMinted++;\n    return randomnumber;\n}\n    function randomMint ()   public returns (uint) {\n     uint nftId = random();\n     \n     if(nftId==1)\n     data=\"Platinum\";\n     else if(nftId==2)\n     data=\"Gold\";\n     else\n     data = \"Silver\";\n\n\n    _mint(_msgSender(), nftId, numOfCopies, data);\n    return nftId;\n    }\n\n}"
			},
			"OnyxNft1155Auctions.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract OnyxNft1155Auction {  //is SpaceERC20 \n    event availableForBids(uint, string) ;\n    event removeFormSale (uint, string );\n    enum status {NotOnSale ,onAuction, onBidding, OnfixedPrice }\n    status public CurrentStatus;\n    struct NftDetails{\n        uint [] bidAmount;\n        uint [] numOfCopies;\n        address[] bidderAddress;\n        uint startingPrice;\n        uint startTime;\n        uint endTime;\n        bool Exists;\n        // Using minimumPrice == minimumBid  \n        uint minimumPrice;\n        uint index;\n        status salestatus;\n    }\n     // NftOwnerAddress to NftId to NftDetails (Struct) \n    mapping(address=>mapping(uint=>NftDetails)) Nft;\n    modifier NftExist (address _owner, uint NftId){\n        require(Nft[_owner][NftId].Exists == true , \"Not Owner of Nft or Does't Exist \");\n        _;\n    }\n    modifier notOnSale (address owner,uint nftId) {\n        require(Nft[owner][nftId].salestatus == status.NotOnSale, \"Error! Nft is Already on Sale\");\n        _;\n    }\n    modifier onBidding(address owner,uint nftId){\n        require(Nft[owner][nftId].salestatus == status.onBidding , \"Error! NFT is Not Available for Biding\");\n        _;\n    }\n    modifier onSale (address nftOwnerAddress ,uint nftId) {\n        require( Nft[nftOwnerAddress][nftId].salestatus != status.NotOnSale, \"Error! Nft is Not on Sale\");\n        _;\n    }\n\n    modifier onFixedPrice (address owner, uint nftId){\n        require( Nft[owner][nftId].salestatus == status.OnfixedPrice, \"NFT is Not Available for Fixed Price\");\n        _;\n    }\n//    \n\n\n//     //Place NFT to Accept Bids\n    function _placeNftForBids(address _owner, uint NftId ) notOnSale(_owner,NftId) NftExist(_owner , NftId) internal {\n        CurrentStatus = status(2);\n        // NftDetails storage NftDetailobj = Nft[NftId];   I think it will create Storage Obj automatically,  Nft[NftId].salestatus  \n        Nft[_owner][NftId].salestatus = CurrentStatus;\n        emit availableForBids (NftId, \"Accepting Bids\");\n    }\n\n\n\n//     // function putOnSale(uint NftId) internal {\n//     //     require(Nft[NftId].IsonSale == false, \"Not On Sale\");\n//     //     Nft[NftId].IsonSale = true;\n//     // }\n    function _pushBidingValues (address nftOwnerAddress,address bidderAddress, uint nftId, uint _bidAmount, uint _numOfCopies) onBidding(nftOwnerAddress,nftId) internal{\n        Nft[nftOwnerAddress][nftId].bidAmount.push(_bidAmount);\n        Nft[nftOwnerAddress][nftId].bidderAddress.push(bidderAddress);\n        Nft[nftOwnerAddress][nftId].numOfCopies.push(_numOfCopies);\n    }\n    function _placeNftForFixedPrice(address owner ,uint nftId, uint Fixedamount )notOnSale(owner, nftId) NftExist(owner , nftId) internal{ \n        CurrentStatus = status(3);\n        Nft[owner][nftId].salestatus = CurrentStatus;\n        Nft[owner][nftId].minimumPrice = Fixedamount;\n    }\n\n    function _removeFromSale(address ownerAddress, uint nftId) NftExist(ownerAddress,nftId) onSale(ownerAddress,nftId) internal {\n        // check Already on Sale \n        CurrentStatus = status(0);\n        Nft[ownerAddress][nftId].salestatus = CurrentStatus;\n        emit removeFormSale(nftId , \"Error! NFT is removed from Sale \");\n    }\n    function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){\n        return Nft[nftOwner][nftId].salestatus;\n    }\n\n}"
			},
			"OnyxNft1155Royalties.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract OnyxNftErc20 {\n\n    event RoyaltiesTransfer(uint, uint, uint);\n    struct royaltyInfo {\n        address payable recipient;\n        uint24 amount;\n    }\n    mapping (address => uint) deposits;\n    mapping(uint256 => royaltyInfo) _royalties;\n    mapping (address=>bool) OnyxNftWhiteList;\n    function _setTokenRoyalty(uint256 tokenId,address payable recipient,uint256 value) internal {\n        require(value <= 50, \"Error! Too high Royalties\");\n        _royalties[tokenId] = royaltyInfo(recipient, uint24(value));\n    }\n\n    function _royaltyAndOnyxNftFee (uint _NftPrice, uint percentage, address payable minterAddress, address payable NftSeller) internal  {\n        uint _TotalNftPrice = msg.value;   \n        //Check Here\n        // require(msg.value >= NftPrice[NftId], \"Error! Insufficent Balance\");\n        uint _OnyxNftFee = _deductOnyxNftFee(_NftPrice);\n        uint _minterFee = _SendMinterFee(_NftPrice , percentage,  minterAddress);\n        _TotalNftPrice = _TotalNftPrice - _OnyxNftFee - _minterFee;    //Remaining Price After Deduction  \n        _transferAmountToSeller( _TotalNftPrice, NftSeller);            // Send Amount to NFT Seller after Tax deduction\n        emit RoyaltiesTransfer(_OnyxNftFee,_minterFee, _TotalNftPrice);\n    }\n\n    function _deductOnyxNftFee(uint Price) public pure returns(uint) {\n        require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\");\n        return Price*25/1000;\n    }\n    \n    function _transferAmountToSeller(uint amount, address payable seller) internal {\n        seller.transfer(amount);\n    }\n\n    function _SendMinterFee(uint _NftPrice, uint Percentage, address payable recepient) internal returns(uint) {\n        uint AmountToSend = _NftPrice*Percentage/100;           //Calculate Minter percentage and Send to his Address from Struct\n        recepient.transfer(AmountToSend);                       // Send this Amount To Transfer Address from Contract balacne\n        return AmountToSend;\n    }\n    function depositBidAmmount(address payee,uint amountToDeposit) internal {\n        require(msg.value == amountToDeposit, \"Error while Deposit\");\n        deposits[payee] += amountToDeposit;\n    }\n    function deductAmount(address from, uint amount) internal {\n        require(deposits[from]>0 && amount <= deposits[from] , \"Error! Low Balance\");\n        deposits[from] -= amount;\n    }\n}"
			},
			"ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        \n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}"
			},
			"ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155 {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155  is IERC165{\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dropsite.sol": {
				"Dropsite": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "RoyaltiesTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "availableForBids",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "removeFormSale",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "CheckNftStatus",
							"outputs": [
								{
									"internalType": "enum OnyxNft1155Auction.status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CurrentStatus",
							"outputs": [
								{
									"internalType": "enum OnyxNft1155Auction.status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "Price",
									"type": "uint256"
								}
							],
							"name": "_deductOnyxNftFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "randomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dropsite.sol\":318:1919  contract Dropsite is ERC1155, ERC1155Burnable, OnyxNftErc20 ,OnyxNft1155Auction { ... */\n  mstore(0x40, 0x80)\n    /* \"Dropsite.sol\":518:533  bytes  data =\"\" */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  0x09\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Dropsite.sol\":556:557  0 */\n  0x00\n    /* \"Dropsite.sol\":540:557  uint NFTsMinted=0 */\n  0x0a\n  sstore\n    /* \"Dropsite.sol\":580:581  1 */\n  0x01\n    /* \"Dropsite.sol\":563:581  uint numOfCopies=1 */\n  0x0b\n  sstore\n    /* \"Dropsite.sol\":1074:1078  true */\n  0x01\n    /* \"Dropsite.sol\":1051:1078  bool public IsPaused = true */\n  0x0d\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1150:1248  constructor (string memory name){... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"Dropsite.sol\":1200:1204  name */\n  dup1\n    /* \"Dropsite.sol\":1192:1197  _name */\n  0x0e\n    /* \"Dropsite.sol\":1192:1204  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"Dropsite.sol\":1230:1240  msg.sender */\n  caller\n    /* \"Dropsite.sol\":1214:1219  Owner */\n  0x0d\n  0x01\n    /* \"Dropsite.sol\":1214:1241  Owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1150:1248  constructor (string memory name){... */\n  pop\n    /* \"Dropsite.sol\":318:1919  contract Dropsite is ERC1155, ERC1155Burnable, OnyxNftErc20 ,OnyxNft1155Auction { ... */\n  jump(tag_10)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_14\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  0x1f\n  lt\n  tag_15\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_15:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_16:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_16)\ntag_17:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n  swap1\n  jump\t// out\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_12\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_22\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_21)\ntag_22:\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_21)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_21\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\ntag_21:\n  pop\n  swap1\n  pop\n  tag_26\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_19:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_27)\ntag_28:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_30:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_32\n    /* \"#utility.yul\":137:186   */\n  tag_33\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":121:187   */\n  tag_35\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_37\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":262:374   */\ntag_36:\n    /* \"#utility.yul\":383:422   */\n  tag_39\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_41:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":531:653   */\ntag_43:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_46\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_5:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":906:1025   */\ntag_48:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_52\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1101:1218   */\ntag_51:\n    /* \"#utility.yul\":1242:1316   */\n  tag_54\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_41\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_35:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_56\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_58\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_57:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_34:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1693:1749   */\ntag_62:\n    /* \"#utility.yul\":1767:1796   */\n  tag_65\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_40:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_68:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_71:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_12:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_73:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_75\n  tag_76\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2412:2496   */\ntag_74:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_59:\n    /* \"#utility.yul\":2591:2618   */\n  tag_78\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_66\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_80\n  tag_64\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2664:2752   */\ntag_79:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_76:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_64:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_45:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_38:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_53:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_50:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_66:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Dropsite.sol\":318:1919  contract Dropsite is ERC1155, ERC1155Burnable, OnyxNftErc20 ,OnyxNft1155Auction { ... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dropsite.sol\":318:1919  contract Dropsite is ERC1155, ERC1155Burnable, OnyxNftErc20 ,OnyxNft1155Auction { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e1eaabf\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xd206b944\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd206b944\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe3306a6f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x7e1eaabf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1309a563\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x67c510c9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":1051:1078  bool public IsPaused = true */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155Burnable.sol\":716:1058  function burnBatch(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Dropsite.sol\":1644:1916  function randomMint ()   public returns (uint) {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Dropsite.sol\":1084:1113  address payable public  Owner */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Auctions.sol\":258:285  status public CurrentStatus */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155Burnable.sol\":392:710  function burn(... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_21:\n        /* \"ERC1155.sol\":1019:1026  uint256 */\n      0x00\n        /* \"ERC1155.sol\":1065:1066  0 */\n      dup1\n        /* \"ERC1155.sol\":1046:1067  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":1046:1053  account */\n      dup4\n        /* \"ERC1155.sol\":1046:1067  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":1038:1115  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"ERC1155.sol\":1132:1141  _balances */\n      0x00\n        /* \"ERC1155.sol\":1132:1145  _balances[id] */\n      dup1\n        /* \"ERC1155.sol\":1142:1144  id */\n      dup4\n        /* \"ERC1155.sol\":1132:1145  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":1132:1154  _balances[id][account] */\n      0x00\n        /* \"ERC1155.sol\":1146:1153  account */\n      dup5\n        /* \"ERC1155.sol\":1132:1154  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":1125:1154  return _balances[id][account] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"ERC165.sol\":914:918  bool */\n      0x00\n        /* \"ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1051:1078  bool public IsPaused = true */\n    tag_31:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_36:\n        /* \"ERC1155.sol\":1469:1485  uint256[] memory */\n      0x60\n        /* \"ERC1155.sol\":1528:1531  ids */\n      dup2\n        /* \"ERC1155.sol\":1528:1538  ids.length */\n      mload\n        /* \"ERC1155.sol\":1509:1517  accounts */\n      dup4\n        /* \"ERC1155.sol\":1509:1524  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1509:1538  accounts.length == ids.length */\n      eq\n        /* \"ERC1155.sol\":1501:1584  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"ERC1155.sol\":1595:1625  uint256[] memory batchBalances */\n      0x00\n        /* \"ERC1155.sol\":1642:1650  accounts */\n      dup4\n        /* \"ERC1155.sol\":1642:1657  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1628:1658  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_88:\n      pop\n        /* \"ERC1155.sol\":1595:1658  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":1674:1683  uint256 i */\n      0x00\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_89:\n        /* \"ERC1155.sol\":1693:1701  accounts */\n      dup5\n        /* \"ERC1155.sol\":1693:1708  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1689:1690  i */\n      dup2\n        /* \"ERC1155.sol\":1689:1708  i < accounts.length */\n      lt\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"ERC1155.sol\":1748:1778  balanceOf(accounts[i], ids[i]) */\n      tag_92\n        /* \"ERC1155.sol\":1758:1766  accounts */\n      dup6\n        /* \"ERC1155.sol\":1767:1768  i */\n      dup3\n        /* \"ERC1155.sol\":1758:1769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":1771:1774  ids */\n      dup6\n        /* \"ERC1155.sol\":1775:1776  i */\n      dup4\n        /* \"ERC1155.sol\":1771:1777  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_97\n      tag_95\n      jump\t// in\n    tag_97:\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":1748:1757  balanceOf */\n      tag_21\n        /* \"ERC1155.sol\":1748:1778  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_92:\n        /* \"ERC1155.sol\":1729:1742  batchBalances */\n      dup3\n        /* \"ERC1155.sol\":1743:1744  i */\n      dup3\n        /* \"ERC1155.sol\":1729:1745  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_99\n      tag_95\n      jump\t// in\n    tag_99:\n    tag_98:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155.sol\":1729:1778  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155.sol\":1710:1713  ++i */\n      dup1\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      swap1\n      pop\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_89)\n    tag_90:\n      pop\n        /* \"ERC1155.sol\":1806:1819  batchBalances */\n      dup1\n        /* \"ERC1155.sol\":1799:1819  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n    tag_41:\n        /* \"OnyxNft1155Auctions.sol\":3317:3323  status */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3341:3344  Nft */\n      0x06\n        /* \"OnyxNft1155Auctions.sol\":3341:3354  Nft[nftOwner] */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3345:3353  nftOwner */\n      dup5\n        /* \"OnyxNft1155Auctions.sol\":3341:3354  Nft[nftOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OnyxNft1155Auctions.sol\":3341:3361  Nft[nftOwner][nftId] */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3355:3360  nftId */\n      dup4\n        /* \"OnyxNft1155Auctions.sol\":3341:3361  Nft[nftOwner][nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OnyxNft1155Auctions.sol\":3341:3372  Nft[nftOwner][nftId].salestatus */\n      0x09\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"OnyxNft1155Auctions.sol\":3334:3372  return Nft[nftOwner][nftId].salestatus */\n      swap1\n      pop\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155Burnable.sol\":716:1058  function burnBatch(... */\n    tag_47:\n        /* \"ERC1155Burnable.sol\":886:898  _msgSender() */\n      tag_104\n        /* \"ERC1155Burnable.sol\":886:896  _msgSender */\n      tag_105\n        /* \"ERC1155Burnable.sol\":886:898  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"ERC1155Burnable.sol\":875:898  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155Burnable.sol\":875:882  account */\n      dup4\n        /* \"ERC1155Burnable.sol\":875:898  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC1155Burnable.sol\":875:941  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"ERC1155Burnable.sol\":902:941  isApprovedForAll(account, _msgSender()) */\n      tag_107\n        /* \"ERC1155Burnable.sol\":919:926  account */\n      dup4\n        /* \"ERC1155Burnable.sol\":928:940  _msgSender() */\n      tag_108\n        /* \"ERC1155Burnable.sol\":928:938  _msgSender */\n      tag_105\n        /* \"ERC1155Burnable.sol\":928:940  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"ERC1155Burnable.sol\":902:918  isApprovedForAll */\n      tag_70\n        /* \"ERC1155Burnable.sol\":902:941  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_107:\n        /* \"ERC1155Burnable.sol\":875:941  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n    tag_106:\n        /* \"ERC1155Burnable.sol\":854:1008  require(... */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"ERC1155Burnable.sol\":1019:1051  _burnBatch(account, ids, values) */\n      tag_112\n        /* \"ERC1155Burnable.sol\":1030:1037  account */\n      dup4\n        /* \"ERC1155Burnable.sol\":1039:1042  ids */\n      dup4\n        /* \"ERC1155Burnable.sol\":1044:1050  values */\n      dup4\n        /* \"ERC1155Burnable.sol\":1019:1029  _burnBatch */\n      tag_113\n        /* \"ERC1155Burnable.sol\":1019:1051  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_112:\n        /* \"ERC1155Burnable.sol\":716:1058  function burnBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1644:1916  function randomMint ()   public returns (uint) {... */\n    tag_49:\n        /* \"Dropsite.sol\":1685:1689  uint */\n      0x00\n        /* \"Dropsite.sol\":1698:1708  uint nftId */\n      dup1\n        /* \"Dropsite.sol\":1711:1719  random() */\n      tag_115\n        /* \"Dropsite.sol\":1711:1717  random */\n      tag_116\n        /* \"Dropsite.sol\":1711:1719  random() */\n      jump\t// in\n    tag_115:\n        /* \"Dropsite.sol\":1698:1719  uint nftId = random() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":1742:1743  1 */\n      0x01\n        /* \"Dropsite.sol\":1735:1740  nftId */\n      dup2\n        /* \"Dropsite.sol\":1735:1743  nftId==1 */\n      eq\n        /* \"Dropsite.sol\":1732:1838  if(nftId==1)... */\n      iszero\n      tag_117\n      jumpi\n        /* \"Dropsite.sol\":1750:1765  data=\"Platinum\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x506c6174696e756d000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Dropsite.sol\":1750:1754  data */\n      0x09\n        /* \"Dropsite.sol\":1750:1765  data=\"Platinum\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      pop\n        /* \"Dropsite.sol\":1732:1838  if(nftId==1)... */\n      jump(tag_120)\n    tag_117:\n        /* \"Dropsite.sol\":1787:1788  2 */\n      0x02\n        /* \"Dropsite.sol\":1780:1785  nftId */\n      dup2\n        /* \"Dropsite.sol\":1780:1788  nftId==2 */\n      eq\n        /* \"Dropsite.sol\":1777:1838  if(nftId==2)... */\n      iszero\n      tag_121\n      jumpi\n        /* \"Dropsite.sol\":1795:1806  data=\"Gold\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x476f6c6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Dropsite.sol\":1795:1799  data */\n      0x09\n        /* \"Dropsite.sol\":1795:1806  data=\"Gold\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_122:\n      pop\n        /* \"Dropsite.sol\":1777:1838  if(nftId==2)... */\n      jump(tag_123)\n    tag_121:\n        /* \"Dropsite.sol\":1823:1838  data = \"Silver\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x53696c7665720000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Dropsite.sol\":1823:1827  data */\n      0x09\n        /* \"Dropsite.sol\":1823:1838  data = \"Silver\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_124:\n      pop\n        /* \"Dropsite.sol\":1777:1838  if(nftId==2)... */\n    tag_123:\n        /* \"Dropsite.sol\":1732:1838  if(nftId==1)... */\n    tag_120:\n        /* \"Dropsite.sol\":1846:1891  _mint(_msgSender(), nftId, numOfCopies, data) */\n      tag_125\n        /* \"Dropsite.sol\":1852:1864  _msgSender() */\n      tag_126\n        /* \"Dropsite.sol\":1852:1862  _msgSender */\n      tag_105\n        /* \"Dropsite.sol\":1852:1864  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"Dropsite.sol\":1866:1871  nftId */\n      dup3\n        /* \"Dropsite.sol\":1873:1884  numOfCopies */\n      sload(0x0b)\n        /* \"Dropsite.sol\":1886:1890  data */\n      0x09\n        /* \"Dropsite.sol\":1846:1891  _mint(_msgSender(), nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_128\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":1846:1851  _mint */\n      tag_133\n        /* \"Dropsite.sol\":1846:1891  _mint(_msgSender(), nftId, numOfCopies, data) */\n      jump\t// in\n    tag_125:\n        /* \"Dropsite.sol\":1904:1909  nftId */\n      dup1\n        /* \"Dropsite.sol\":1897:1909  return nftId */\n      swap2\n      pop\n      pop\n        /* \"Dropsite.sol\":1644:1916  function randomMint ()   public returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_54:\n        /* \"ERC1155.sol\":1988:2040  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_135\n        /* \"ERC1155.sol\":2007:2019  _msgSender() */\n      tag_136\n        /* \"ERC1155.sol\":2007:2017  _msgSender */\n      tag_105\n        /* \"ERC1155.sol\":2007:2019  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"ERC1155.sol\":2021:2029  operator */\n      dup4\n        /* \"ERC1155.sol\":2031:2039  approved */\n      dup4\n        /* \"ERC1155.sol\":1988:2006  _setApprovalForAll */\n      tag_137\n        /* \"ERC1155.sol\":1988:2040  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_135:\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1084:1113  address payable public  Owner */\n    tag_56:\n      0x0d\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n    tag_62:\n        /* \"OnyxNft1155Royalties.sol\":1377:1381  uint */\n      0x00\n        /* \"OnyxNft1155Royalties.sol\":1424:1429  Price */\n      dup2\n        /* \"OnyxNft1155Royalties.sol\":1415:1420  10000 */\n      0x2710\n        /* \"OnyxNft1155Royalties.sol\":1408:1413  10000 */\n      dup1\n        /* \"OnyxNft1155Royalties.sol\":1402:1407  Price */\n      dup5\n        /* \"OnyxNft1155Royalties.sol\":1402:1413  Price/10000 */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"OnyxNft1155Royalties.sol\":1401:1420  (Price/10000)*10000 */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"OnyxNft1155Royalties.sol\":1401:1429  (Price/10000)*10000 == Price */\n      eq\n        /* \"OnyxNft1155Royalties.sol\":1393:1478  require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"OnyxNft1155Royalties.sol\":1504:1508  1000 */\n      0x03e8\n        /* \"OnyxNft1155Royalties.sol\":1501:1503  25 */\n      0x19\n        /* \"OnyxNft1155Royalties.sol\":1495:1500  Price */\n      dup4\n        /* \"OnyxNft1155Royalties.sol\":1495:1503  Price*25 */\n      tag_146\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_146:\n        /* \"OnyxNft1155Royalties.sol\":1495:1508  Price*25/1000 */\n      tag_147\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"OnyxNft1155Royalties.sol\":1488:1508  return Price*25/1000 */\n      swap1\n      pop\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"OnyxNft1155Auctions.sol\":258:285  status public CurrentStatus */\n    tag_65:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_70:\n        /* \"ERC1155.sol\":2213:2217  bool */\n      0x00\n        /* \"ERC1155.sol\":2236:2254  _operatorApprovals */\n      0x01\n        /* \"ERC1155.sol\":2236:2263  _operatorApprovals[account] */\n      0x00\n        /* \"ERC1155.sol\":2255:2262  account */\n      dup5\n        /* \"ERC1155.sol\":2236:2263  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":2236:2273  _operatorApprovals[account][operator] */\n      0x00\n        /* \"ERC1155.sol\":2264:2272  operator */\n      dup4\n        /* \"ERC1155.sol\":2236:2273  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1155.sol\":2229:2273  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155Burnable.sol\":392:710  function burn(... */\n    tag_75:\n        /* \"ERC1155Burnable.sol\":537:549  _msgSender() */\n      tag_150\n        /* \"ERC1155Burnable.sol\":537:547  _msgSender */\n      tag_105\n        /* \"ERC1155Burnable.sol\":537:549  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"ERC1155Burnable.sol\":526:549  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155Burnable.sol\":526:533  account */\n      dup4\n        /* \"ERC1155Burnable.sol\":526:549  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC1155Burnable.sol\":526:592  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_151\n      jumpi\n      pop\n        /* \"ERC1155Burnable.sol\":553:592  isApprovedForAll(account, _msgSender()) */\n      tag_152\n        /* \"ERC1155Burnable.sol\":570:577  account */\n      dup4\n        /* \"ERC1155Burnable.sol\":579:591  _msgSender() */\n      tag_153\n        /* \"ERC1155Burnable.sol\":579:589  _msgSender */\n      tag_105\n        /* \"ERC1155Burnable.sol\":579:591  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"ERC1155Burnable.sol\":553:569  isApprovedForAll */\n      tag_70\n        /* \"ERC1155Burnable.sol\":553:592  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_152:\n        /* \"ERC1155Burnable.sol\":526:592  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n    tag_151:\n        /* \"ERC1155Burnable.sol\":505:659  require(... */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_111\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"ERC1155Burnable.sol\":678:703  _burn(account, id, value) */\n      tag_156\n        /* \"ERC1155Burnable.sol\":684:691  account */\n      dup4\n        /* \"ERC1155Burnable.sol\":693:695  id */\n      dup4\n        /* \"ERC1155Burnable.sol\":697:702  value */\n      dup4\n        /* \"ERC1155Burnable.sol\":678:683  _burn */\n      tag_157\n        /* \"ERC1155Burnable.sol\":678:703  _burn(account, id, value) */\n      jump\t// in\n    tag_156:\n        /* \"ERC1155Burnable.sol\":392:710  function burn(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1155.sol\":6908:7775  function _burnBatch(... */\n    tag_113:\n        /* \"ERC1155.sol\":7071:7072  0 */\n      0x00\n        /* \"ERC1155.sol\":7055:7073  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":7055:7059  from */\n      dup4\n        /* \"ERC1155.sol\":7055:7073  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":7047:7113  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"ERC1155.sol\":7145:7152  amounts */\n      dup1\n        /* \"ERC1155.sol\":7145:7159  amounts.length */\n      mload\n        /* \"ERC1155.sol\":7131:7134  ids */\n      dup3\n        /* \"ERC1155.sol\":7131:7141  ids.length */\n      mload\n        /* \"ERC1155.sol\":7131:7159  ids.length == amounts.length */\n      eq\n        /* \"ERC1155.sol\":7123:7204  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"ERC1155.sol\":7215:7231  address operator */\n      0x00\n        /* \"ERC1155.sol\":7234:7246  _msgSender() */\n      tag_166\n        /* \"ERC1155.sol\":7234:7244  _msgSender */\n      tag_105\n        /* \"ERC1155.sol\":7234:7246  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"ERC1155.sol\":7215:7246  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7257:7323  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_167\n        /* \"ERC1155.sol\":7278:7286  operator */\n      dup2\n        /* \"ERC1155.sol\":7288:7292  from */\n      dup6\n        /* \"ERC1155.sol\":7302:7303  0 */\n      0x00\n        /* \"ERC1155.sol\":7306:7309  ids */\n      dup7\n        /* \"ERC1155.sol\":7311:7318  amounts */\n      dup7\n        /* \"ERC1155.sol\":7257:7323  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC1155.sol\":7257:7277  _beforeTokenTransfer */\n      tag_168\n        /* \"ERC1155.sol\":7257:7323  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_167:\n        /* \"ERC1155.sol\":7339:7348  uint256 i */\n      0x00\n        /* \"ERC1155.sol\":7334:7698  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_169:\n        /* \"ERC1155.sol\":7358:7361  ids */\n      dup4\n        /* \"ERC1155.sol\":7358:7368  ids.length */\n      mload\n        /* \"ERC1155.sol\":7354:7355  i */\n      dup2\n        /* \"ERC1155.sol\":7354:7368  i < ids.length */\n      lt\n        /* \"ERC1155.sol\":7334:7698  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"ERC1155.sol\":7389:7399  uint256 id */\n      0x00\n        /* \"ERC1155.sol\":7402:7405  ids */\n      dup5\n        /* \"ERC1155.sol\":7406:7407  i */\n      dup3\n        /* \"ERC1155.sol\":7402:7408  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_173\n      tag_95\n      jump\t// in\n    tag_173:\n    tag_172:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":7389:7408  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7422:7436  uint256 amount */\n      0x00\n        /* \"ERC1155.sol\":7439:7446  amounts */\n      dup5\n        /* \"ERC1155.sol\":7447:7448  i */\n      dup4\n        /* \"ERC1155.sol\":7439:7449  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_95\n      jump\t// in\n    tag_175:\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":7422:7449  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7464:7483  uint256 fromBalance */\n      0x00\n        /* \"ERC1155.sol\":7486:7495  _balances */\n      dup1\n        /* \"ERC1155.sol\":7486:7499  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":7496:7498  id */\n      dup5\n        /* \"ERC1155.sol\":7486:7499  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7486:7505  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":7500:7504  from */\n      dup10\n        /* \"ERC1155.sol\":7486:7505  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":7464:7505  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7542:7548  amount */\n      dup2\n        /* \"ERC1155.sol\":7527:7538  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":7527:7548  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155.sol\":7519:7589  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"ERC1155.sol\":7667:7673  amount */\n      dup2\n        /* \"ERC1155.sol\":7653:7664  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":7653:7673  fromBalance - amount */\n      sub\n        /* \"ERC1155.sol\":7631:7640  _balances */\n      0x00\n        /* \"ERC1155.sol\":7631:7644  _balances[id] */\n      dup1\n        /* \"ERC1155.sol\":7641:7643  id */\n      dup6\n        /* \"ERC1155.sol\":7631:7644  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7631:7650  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":7645:7649  from */\n      dup11\n        /* \"ERC1155.sol\":7631:7650  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7631:7673  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":7375:7698  {... */\n      pop\n      pop\n      pop\n        /* \"ERC1155.sol\":7370:7373  i++ */\n      dup1\n      dup1\n      tag_179\n      swap1\n      tag_101\n      jump\t// in\n    tag_179:\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":7334:7698  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_169)\n    tag_170:\n      pop\n        /* \"ERC1155.sol\":7751:7752  0 */\n      0x00\n        /* \"ERC1155.sol\":7713:7768  TransferBatch(operator, from, address(0), ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":7737:7741  from */\n      dup5\n        /* \"ERC1155.sol\":7713:7768  TransferBatch(operator, from, address(0), ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":7727:7735  operator */\n      dup3\n        /* \"ERC1155.sol\":7713:7768  TransferBatch(operator, from, address(0), ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"ERC1155.sol\":7755:7758  ids */\n      dup7\n        /* \"ERC1155.sol\":7760:7767  amounts */\n      dup7\n        /* \"ERC1155.sol\":7713:7768  TransferBatch(operator, from, address(0), ids, amounts) */\n      mload(0x40)\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":7037:7775  {... */\n      pop\n        /* \"ERC1155.sol\":6908:7775  function _burnBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1442:1639  function random() internal returns (uint) {... */\n    tag_116:\n        /* \"Dropsite.sol\":1478:1482  uint */\n      0x00\n        /* \"Dropsite.sol\":1490:1507  uint randomnumber */\n      dup1\n        /* \"Dropsite.sol\":1587:1588  3 */\n      0x03\n        /* \"Dropsite.sol\":1542:1557  block.timestamp */\n      timestamp\n        /* \"Dropsite.sol\":1559:1569  msg.sender */\n      caller\n        /* \"Dropsite.sol\":1571:1581  NFTsMinted */\n      sload(0x0a)\n        /* \"Dropsite.sol\":1525:1582  abi.encodePacked(block.timestamp, msg.sender, NFTsMinted) */\n      add(0x20, mload(0x40))\n      tag_183\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":1515:1583  keccak256(abi.encodePacked(block.timestamp, msg.sender, NFTsMinted)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Dropsite.sol\":1510:1584  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, NFTsMinted))) */\n      0x00\n      shr\n        /* \"Dropsite.sol\":1510:1588  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, NFTsMinted))) % 3 */\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"Dropsite.sol\":1490:1588  uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, NFTsMinted))) % 3 */\n      swap1\n      pop\n        /* \"Dropsite.sol\":1599:1609  NFTsMinted */\n      0x0a\n      0x00\n        /* \"Dropsite.sol\":1599:1611  NFTsMinted++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_187\n      swap1\n      tag_101\n      jump\t// in\n    tag_187:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":1624:1636  randomnumber */\n      dup1\n        /* \"Dropsite.sol\":1617:1636  return randomnumber */\n      swap2\n      pop\n      pop\n        /* \"Dropsite.sol\":1442:1639  function random() internal returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1155.sol\":5292:5843  function _mint(... */\n    tag_133:\n        /* \"ERC1155.sol\":5453:5454  0 */\n      0x00\n        /* \"ERC1155.sol\":5439:5455  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":5439:5441  to */\n      dup5\n        /* \"ERC1155.sol\":5439:5455  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":5431:5493  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"ERC1155.sol\":5504:5520  address operator */\n      0x00\n        /* \"ERC1155.sol\":5523:5535  _msgSender() */\n      tag_192\n        /* \"ERC1155.sol\":5523:5533  _msgSender */\n      tag_105\n        /* \"ERC1155.sol\":5523:5535  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"ERC1155.sol\":5504:5535  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":5546:5648  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_193\n        /* \"ERC1155.sol\":5567:5575  operator */\n      dup2\n        /* \"ERC1155.sol\":5585:5586  0 */\n      0x00\n        /* \"ERC1155.sol\":5589:5591  to */\n      dup8\n        /* \"ERC1155.sol\":5593:5614  _asSingletonArray(id) */\n      tag_194\n        /* \"ERC1155.sol\":5611:5613  id */\n      dup9\n        /* \"ERC1155.sol\":5593:5610  _asSingletonArray */\n      tag_195\n        /* \"ERC1155.sol\":5593:5614  _asSingletonArray(id) */\n      jump\t// in\n    tag_194:\n        /* \"ERC1155.sol\":5616:5641  _asSingletonArray(amount) */\n      tag_196\n        /* \"ERC1155.sol\":5634:5640  amount */\n      dup9\n        /* \"ERC1155.sol\":5616:5633  _asSingletonArray */\n      tag_195\n        /* \"ERC1155.sol\":5616:5641  _asSingletonArray(amount) */\n      jump\t// in\n    tag_196:\n        /* \"ERC1155.sol\":5643:5647  data */\n      dup8\n        /* \"ERC1155.sol\":5546:5566  _beforeTokenTransfer */\n      tag_168\n        /* \"ERC1155.sol\":5546:5648  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_193:\n        /* \"ERC1155.sol\":5679:5685  amount */\n      dup3\n        /* \"ERC1155.sol\":5658:5667  _balances */\n      0x00\n        /* \"ERC1155.sol\":5658:5671  _balances[id] */\n      dup1\n        /* \"ERC1155.sol\":5668:5670  id */\n      dup7\n        /* \"ERC1155.sol\":5658:5671  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":5658:5675  _balances[id][to] */\n      0x00\n        /* \"ERC1155.sol\":5672:5674  to */\n      dup8\n        /* \"ERC1155.sol\":5658:5675  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":5658:5685  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":5737:5739  to */\n      dup5\n        /* \"ERC1155.sol\":5700:5752  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":5733:5734  0 */\n      0x00\n        /* \"ERC1155.sol\":5700:5752  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":5715:5723  operator */\n      dup3\n        /* \"ERC1155.sol\":5700:5752  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155.sol\":5741:5743  id */\n      dup8\n        /* \"ERC1155.sol\":5745:5751  amount */\n      dup8\n        /* \"ERC1155.sol\":5700:5752  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":5762:5836  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_201\n        /* \"ERC1155.sol\":5793:5801  operator */\n      dup2\n        /* \"ERC1155.sol\":5811:5812  0 */\n      0x00\n        /* \"ERC1155.sol\":5815:5817  to */\n      dup8\n        /* \"ERC1155.sol\":5819:5821  id */\n      dup8\n        /* \"ERC1155.sol\":5823:5829  amount */\n      dup8\n        /* \"ERC1155.sol\":5831:5835  data */\n      dup8\n        /* \"ERC1155.sol\":5762:5792  _doSafeTransferAcceptanceCheck */\n      tag_202\n        /* \"ERC1155.sol\":5762:5836  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_201:\n        /* \"ERC1155.sol\":5421:5843  {... */\n      pop\n        /* \"ERC1155.sol\":5292:5843  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":7910:8233  function _setApprovalForAll(... */\n    tag_137:\n        /* \"ERC1155.sol\":8060:8068  operator */\n      dup2\n        /* \"ERC1155.sol\":8051:8068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":8051:8056  owner */\n      dup4\n        /* \"ERC1155.sol\":8051:8068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":8043:8114  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"ERC1155.sol\":8162:8170  approved */\n      dup1\n        /* \"ERC1155.sol\":8124:8142  _operatorApprovals */\n      0x01\n        /* \"ERC1155.sol\":8124:8149  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC1155.sol\":8143:8148  owner */\n      dup6\n        /* \"ERC1155.sol\":8124:8149  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":8124:8159  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC1155.sol\":8150:8158  operator */\n      dup5\n        /* \"ERC1155.sol\":8124:8159  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":8124:8170  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":8207:8215  operator */\n      dup2\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":8200:8205  owner */\n      dup4\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC1155.sol\":8217:8225  approved */\n      dup4\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1155.sol\":7910:8233  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":6084:6714  function _burn(... */\n    tag_157:\n        /* \"ERC1155.sol\":6222:6223  0 */\n      0x00\n        /* \"ERC1155.sol\":6206:6224  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":6206:6210  from */\n      dup4\n        /* \"ERC1155.sol\":6206:6224  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":6198:6264  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_162\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"ERC1155.sol\":6275:6291  address operator */\n      0x00\n        /* \"ERC1155.sol\":6294:6306  _msgSender() */\n      tag_211\n        /* \"ERC1155.sol\":6294:6304  _msgSender */\n      tag_105\n        /* \"ERC1155.sol\":6294:6306  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"ERC1155.sol\":6275:6306  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":6317:6419  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_212\n        /* \"ERC1155.sol\":6338:6346  operator */\n      dup2\n        /* \"ERC1155.sol\":6348:6352  from */\n      dup6\n        /* \"ERC1155.sol\":6362:6363  0 */\n      0x00\n        /* \"ERC1155.sol\":6366:6387  _asSingletonArray(id) */\n      tag_213\n        /* \"ERC1155.sol\":6384:6386  id */\n      dup8\n        /* \"ERC1155.sol\":6366:6383  _asSingletonArray */\n      tag_195\n        /* \"ERC1155.sol\":6366:6387  _asSingletonArray(id) */\n      jump\t// in\n    tag_213:\n        /* \"ERC1155.sol\":6389:6414  _asSingletonArray(amount) */\n      tag_214\n        /* \"ERC1155.sol\":6407:6413  amount */\n      dup8\n        /* \"ERC1155.sol\":6389:6406  _asSingletonArray */\n      tag_195\n        /* \"ERC1155.sol\":6389:6414  _asSingletonArray(amount) */\n      jump\t// in\n    tag_214:\n        /* \"ERC1155.sol\":6317:6419  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC1155.sol\":6317:6337  _beforeTokenTransfer */\n      tag_168\n        /* \"ERC1155.sol\":6317:6419  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      jump\t// in\n    tag_212:\n        /* \"ERC1155.sol\":6430:6449  uint256 fromBalance */\n      0x00\n        /* \"ERC1155.sol\":6452:6461  _balances */\n      dup1\n        /* \"ERC1155.sol\":6452:6465  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":6462:6464  id */\n      dup6\n        /* \"ERC1155.sol\":6452:6465  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6452:6471  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":6466:6470  from */\n      dup7\n        /* \"ERC1155.sol\":6452:6471  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":6430:6471  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":6504:6510  amount */\n      dup3\n        /* \"ERC1155.sol\":6489:6500  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":6489:6510  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155.sol\":6481:6551  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_178\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"ERC1155.sol\":6621:6627  amount */\n      dup3\n        /* \"ERC1155.sol\":6607:6618  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":6607:6627  fromBalance - amount */\n      sub\n        /* \"ERC1155.sol\":6585:6594  _balances */\n      0x00\n        /* \"ERC1155.sol\":6585:6598  _balances[id] */\n      dup1\n        /* \"ERC1155.sol\":6595:6597  id */\n      dup7\n        /* \"ERC1155.sol\":6585:6598  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6585:6604  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":6599:6603  from */\n      dup8\n        /* \"ERC1155.sol\":6585:6604  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6585:6627  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":6692:6693  0 */\n      0x00\n        /* \"ERC1155.sol\":6653:6707  TransferSingle(operator, from, address(0), id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":6678:6682  from */\n      dup6\n        /* \"ERC1155.sol\":6653:6707  TransferSingle(operator, from, address(0), id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":6668:6676  operator */\n      dup4\n        /* \"ERC1155.sol\":6653:6707  TransferSingle(operator, from, address(0), id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155.sol\":6696:6698  id */\n      dup8\n        /* \"ERC1155.sol\":6700:6706  amount */\n      dup8\n        /* \"ERC1155.sol\":6653:6707  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":6188:6714  {... */\n      pop\n      pop\n        /* \"ERC1155.sol\":6084:6714  function _burn(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":9167:9381  function _beforeTokenTransfer(... */\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":10917:11110  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_195:\n        /* \"ERC1155.sol\":10983:10999  uint256[] memory */\n      0x60\n        /* \"ERC1155.sol\":11011:11033  uint256[] memory array */\n      0x00\n        /* \"ERC1155.sol\":11050:11051  1 */\n      0x01\n        /* \"ERC1155.sol\":11036:11052  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_220\n      jumpi\n      tag_221\n      tag_87\n      jump\t// in\n    tag_221:\n    tag_220:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_222:\n      pop\n        /* \"ERC1155.sol\":11011:11052  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":11073:11080  element */\n      dup3\n        /* \"ERC1155.sol\":11062:11067  array */\n      dup2\n        /* \"ERC1155.sol\":11068:11069  0 */\n      0x00\n        /* \"ERC1155.sol\":11062:11070  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_224\n      tag_95\n      jump\t// in\n    tag_224:\n    tag_223:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155.sol\":11062:11080  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155.sol\":11098:11103  array */\n      dup1\n        /* \"ERC1155.sol\":11091:11103  return array */\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":10917:11110  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":9387:10112  function _doSafeTransferAcceptanceCheck(... */\n    tag_202:\n        /* \"ERC1155.sol\":9594:9609  to.isContract() */\n      tag_226\n        /* \"ERC1155.sol\":9594:9596  to */\n      dup5\n        /* \"ERC1155.sol\":9594:9607  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_227\n        /* \"ERC1155.sol\":9594:9609  to.isContract() */\n      jump\t// in\n    tag_226:\n        /* \"ERC1155.sol\":9590:10106  if (to.isContract()) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"ERC1155.sol\":9646:9648  to */\n      dup4\n        /* \"ERC1155.sol\":9629:9667  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"ERC1155.sol\":9668:9676  operator */\n      dup8\n        /* \"ERC1155.sol\":9678:9682  from */\n      dup8\n        /* \"ERC1155.sol\":9684:9686  id */\n      dup7\n        /* \"ERC1155.sol\":9688:9694  amount */\n      dup7\n        /* \"ERC1155.sol\":9696:9700  data */\n      dup7\n        /* \"ERC1155.sol\":9629:9701  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      0x01\n    tag_232:\n        /* \"ERC1155.sol\":9625:10096  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_235\n      jumpi\n      tag_239\n      tag_240\n      jump\t// in\n    tag_239:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_238\n      jumpi\n      pop\n      tag_241\n      tag_242\n      jump\t// in\n    tag_241:\n      dup1\n      tag_243\n      jumpi\n      pop\n      jump(tag_237)\n    tag_243:\n        /* \"ERC1155.sol\":9972:9978  reason */\n      dup1\n        /* \"ERC1155.sol\":9965:9979  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":9625:10096  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_238:\n      pop\n    tag_237:\n        /* \"ERC1155.sol\":10019:10081  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":9625:10096  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_235:\n        /* \"ERC1155.sol\":9762:9805  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"ERC1155.sol\":9750:9805  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155.sol\":9750:9758  response */\n      dup2\n        /* \"ERC1155.sol\":9750:9805  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155.sol\":9746:9898  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_249\n      jumpi\n        /* \"ERC1155.sol\":9829:9879  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":9746:9898  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_249:\n        /* \"ERC1155.sol\":9702:9912  returns (bytes4 response) {... */\n      pop\n        /* \"ERC1155.sol\":9590:10106  if (to.isContract()) {... */\n    tag_228:\n        /* \"ERC1155.sol\":9387:10112  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_227:\n        /* \"Address.sol\":831:835  bool */\n      0x00\n        /* \"Address.sol\":1034:1046  uint256 size */\n      dup1\n        /* \"Address.sol\":1099:1106  account */\n      dup3\n        /* \"Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"Address.sol\":1079:1107  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"Address.sol\":1140:1141  0 */\n      0x00\n        /* \"Address.sol\":1133:1137  size */\n      dup2\n        /* \"Address.sol\":1133:1141  size > 0 */\n      gt\n        /* \"Address.sol\":1126:1141  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_119:\n      dup3\n      dup1\n      sload\n      tag_253\n      swap1\n      tag_128\n      jump\t// in\n    tag_253:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_255\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_254)\n    tag_255:\n      dup3\n      0x1f\n      lt\n      tag_256\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_254)\n    tag_256:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_254\n      jumpi\n      swap2\n      dup3\n      add\n    tag_257:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_258\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_257)\n    tag_258:\n    tag_254:\n      pop\n      swap1\n      pop\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      pop\n      swap1\n      jump\t// out\n    tag_260:\n    tag_261:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_261)\n    tag_262:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_264:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_266\n        /* \"#utility.yul\":161:225   */\n      tag_267\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":145:226   */\n      tag_269\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":350:493   */\n    tag_270:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_273:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_276\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_273)\n    tag_275:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_278:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_280\n        /* \"#utility.yul\":906:970   */\n      tag_281\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":890:971   */\n      tag_269\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_284\n      tag_272\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1095:1238   */\n    tag_283:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_285:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_288\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_285)\n    tag_287:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1636   */\n    tag_277:\n        /* \"#utility.yul\":1543:1548   */\n      0x00\n        /* \"#utility.yul\":1581:1587   */\n      dup2\n        /* \"#utility.yul\":1568:1588   */\n      calldataload\n        /* \"#utility.yul\":1559:1588   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1630   */\n      tag_291\n        /* \"#utility.yul\":1624:1629   */\n      dup2\n        /* \"#utility.yul\":1597:1630   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1497:1636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:2029   */\n    tag_293:\n        /* \"#utility.yul\":1730:1735   */\n      0x00\n        /* \"#utility.yul\":1779:1782   */\n      dup3\n        /* \"#utility.yul\":1772:1776   */\n      0x1f\n        /* \"#utility.yul\":1764:1770   */\n      dup4\n        /* \"#utility.yul\":1760:1777   */\n      add\n        /* \"#utility.yul\":1756:1783   */\n      slt\n        /* \"#utility.yul\":1746:1868   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1787:1866   */\n      tag_296\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1746:1868   */\n    tag_295:\n        /* \"#utility.yul\":1904:1910   */\n      dup2\n        /* \"#utility.yul\":1891:1911   */\n      calldataload\n        /* \"#utility.yul\":1929:2023   */\n      tag_298\n        /* \"#utility.yul\":2019:2022   */\n      dup5\n        /* \"#utility.yul\":2011:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2008   */\n      0x20\n        /* \"#utility.yul\":1996:2002   */\n      dup7\n        /* \"#utility.yul\":1992:2009   */\n      add\n        /* \"#utility.yul\":1929:2023   */\n      tag_264\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1920:2023   */\n      swap2\n      pop\n        /* \"#utility.yul\":1736:2029   */\n      pop\n        /* \"#utility.yul\":1659:2029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2422   */\n    tag_299:\n        /* \"#utility.yul\":2123:2128   */\n      0x00\n        /* \"#utility.yul\":2172:2175   */\n      dup3\n        /* \"#utility.yul\":2165:2169   */\n      0x1f\n        /* \"#utility.yul\":2157:2163   */\n      dup4\n        /* \"#utility.yul\":2153:2170   */\n      add\n        /* \"#utility.yul\":2149:2176   */\n      slt\n        /* \"#utility.yul\":2139:2261   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":2180:2259   */\n      tag_302\n      tag_297\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2139:2261   */\n    tag_301:\n        /* \"#utility.yul\":2297:2303   */\n      dup2\n        /* \"#utility.yul\":2284:2304   */\n      calldataload\n        /* \"#utility.yul\":2322:2416   */\n      tag_303\n        /* \"#utility.yul\":2412:2415   */\n      dup5\n        /* \"#utility.yul\":2404:2410   */\n      dup3\n        /* \"#utility.yul\":2397:2401   */\n      0x20\n        /* \"#utility.yul\":2389:2395   */\n      dup7\n        /* \"#utility.yul\":2385:2402   */\n      add\n        /* \"#utility.yul\":2322:2416   */\n      tag_278\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2313:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2129:2422   */\n      pop\n        /* \"#utility.yul\":2052:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2561   */\n    tag_304:\n        /* \"#utility.yul\":2471:2476   */\n      0x00\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2496:2516   */\n      calldataload\n        /* \"#utility.yul\":2487:2516   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2555   */\n      tag_306\n        /* \"#utility.yul\":2549:2554   */\n      dup2\n        /* \"#utility.yul\":2525:2555   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2428:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2704   */\n    tag_308:\n        /* \"#utility.yul\":2612:2617   */\n      0x00\n        /* \"#utility.yul\":2650:2656   */\n      dup2\n        /* \"#utility.yul\":2637:2657   */\n      calldataload\n        /* \"#utility.yul\":2628:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2666:2698   */\n      tag_310\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2666:2698   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2567:2704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2851   */\n    tag_312:\n        /* \"#utility.yul\":2766:2771   */\n      0x00\n        /* \"#utility.yul\":2797:2803   */\n      dup2\n        /* \"#utility.yul\":2791:2804   */\n      mload\n        /* \"#utility.yul\":2782:2804   */\n      swap1\n      pop\n        /* \"#utility.yul\":2813:2845   */\n      tag_314\n        /* \"#utility.yul\":2839:2844   */\n      dup2\n        /* \"#utility.yul\":2813:2845   */\n      tag_311\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2710:2851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2857:2996   */\n    tag_289:\n        /* \"#utility.yul\":2903:2908   */\n      0x00\n        /* \"#utility.yul\":2941:2947   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      calldataload\n        /* \"#utility.yul\":2919:2948   */\n      swap1\n      pop\n        /* \"#utility.yul\":2957:2990   */\n      tag_316\n        /* \"#utility.yul\":2984:2989   */\n      dup2\n        /* \"#utility.yul\":2957:2990   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2857:2996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3002:3476   */\n    tag_69:\n        /* \"#utility.yul\":3070:3076   */\n      0x00\n        /* \"#utility.yul\":3078:3084   */\n      dup1\n        /* \"#utility.yul\":3127:3129   */\n      0x40\n        /* \"#utility.yul\":3115:3124   */\n      dup4\n        /* \"#utility.yul\":3106:3113   */\n      dup6\n        /* \"#utility.yul\":3102:3125   */\n      sub\n        /* \"#utility.yul\":3098:3130   */\n      slt\n        /* \"#utility.yul\":3095:3214   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":3133:3212   */\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3095:3214   */\n    tag_319:\n        /* \"#utility.yul\":3253:3254   */\n      0x00\n        /* \"#utility.yul\":3278:3331   */\n      tag_322\n        /* \"#utility.yul\":3323:3330   */\n      dup6\n        /* \"#utility.yul\":3314:3320   */\n      dup3\n        /* \"#utility.yul\":3303:3312   */\n      dup7\n        /* \"#utility.yul\":3299:3321   */\n      add\n        /* \"#utility.yul\":3278:3331   */\n      tag_277\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3268:3331   */\n      swap3\n      pop\n        /* \"#utility.yul\":3224:3341   */\n      pop\n        /* \"#utility.yul\":3380:3382   */\n      0x20\n        /* \"#utility.yul\":3406:3459   */\n      tag_323\n        /* \"#utility.yul\":3451:3458   */\n      dup6\n        /* \"#utility.yul\":3442:3448   */\n      dup3\n        /* \"#utility.yul\":3431:3440   */\n      dup7\n        /* \"#utility.yul\":3427:3449   */\n      add\n        /* \"#utility.yul\":3406:3459   */\n      tag_277\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3396:3459   */\n      swap2\n      pop\n        /* \"#utility.yul\":3351:3469   */\n      pop\n        /* \"#utility.yul\":3002:3476   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3482:4521   */\n    tag_46:\n        /* \"#utility.yul\":3609:3615   */\n      0x00\n        /* \"#utility.yul\":3617:3623   */\n      dup1\n        /* \"#utility.yul\":3625:3631   */\n      0x00\n        /* \"#utility.yul\":3674:3676   */\n      0x60\n        /* \"#utility.yul\":3662:3671   */\n      dup5\n        /* \"#utility.yul\":3653:3660   */\n      dup7\n        /* \"#utility.yul\":3649:3672   */\n      sub\n        /* \"#utility.yul\":3645:3677   */\n      slt\n        /* \"#utility.yul\":3642:3761   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3680:3759   */\n      tag_326\n      tag_321\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3642:3761   */\n    tag_325:\n        /* \"#utility.yul\":3800:3801   */\n      0x00\n        /* \"#utility.yul\":3825:3878   */\n      tag_327\n        /* \"#utility.yul\":3870:3877   */\n      dup7\n        /* \"#utility.yul\":3861:3867   */\n      dup3\n        /* \"#utility.yul\":3850:3859   */\n      dup8\n        /* \"#utility.yul\":3846:3868   */\n      add\n        /* \"#utility.yul\":3825:3878   */\n      tag_277\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3815:3878   */\n      swap4\n      pop\n        /* \"#utility.yul\":3771:3888   */\n      pop\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3944:3953   */\n      dup5\n        /* \"#utility.yul\":3940:3958   */\n      add\n        /* \"#utility.yul\":3927:3959   */\n      calldataload\n        /* \"#utility.yul\":3986:4004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3978:3984   */\n      dup2\n        /* \"#utility.yul\":3975:4005   */\n      gt\n        /* \"#utility.yul\":3972:4089   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":4008:4087   */\n      tag_329\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3972:4089   */\n    tag_328:\n        /* \"#utility.yul\":4113:4191   */\n      tag_331\n        /* \"#utility.yul\":4183:4190   */\n      dup7\n        /* \"#utility.yul\":4174:4180   */\n      dup3\n        /* \"#utility.yul\":4163:4172   */\n      dup8\n        /* \"#utility.yul\":4159:4181   */\n      add\n        /* \"#utility.yul\":4113:4191   */\n      tag_299\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4103:4191   */\n      swap3\n      pop\n        /* \"#utility.yul\":3898:4201   */\n      pop\n        /* \"#utility.yul\":4268:4270   */\n      0x40\n        /* \"#utility.yul\":4257:4266   */\n      dup5\n        /* \"#utility.yul\":4253:4271   */\n      add\n        /* \"#utility.yul\":4240:4272   */\n      calldataload\n        /* \"#utility.yul\":4299:4317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4291:4297   */\n      dup2\n        /* \"#utility.yul\":4288:4318   */\n      gt\n        /* \"#utility.yul\":4285:4402   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":4321:4400   */\n      tag_333\n      tag_330\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4285:4402   */\n    tag_332:\n        /* \"#utility.yul\":4426:4504   */\n      tag_334\n        /* \"#utility.yul\":4496:4503   */\n      dup7\n        /* \"#utility.yul\":4487:4493   */\n      dup3\n        /* \"#utility.yul\":4476:4485   */\n      dup8\n        /* \"#utility.yul\":4472:4494   */\n      add\n        /* \"#utility.yul\":4426:4504   */\n      tag_299\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4416:4504   */\n      swap2\n      pop\n        /* \"#utility.yul\":4211:4514   */\n      pop\n        /* \"#utility.yul\":3482:4521   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4527:4995   */\n    tag_53:\n        /* \"#utility.yul\":4592:4598   */\n      0x00\n        /* \"#utility.yul\":4600:4606   */\n      dup1\n        /* \"#utility.yul\":4649:4651   */\n      0x40\n        /* \"#utility.yul\":4637:4646   */\n      dup4\n        /* \"#utility.yul\":4628:4635   */\n      dup6\n        /* \"#utility.yul\":4624:4647   */\n      sub\n        /* \"#utility.yul\":4620:4652   */\n      slt\n        /* \"#utility.yul\":4617:4736   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4655:4734   */\n      tag_337\n      tag_321\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4617:4736   */\n    tag_336:\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4800:4853   */\n      tag_338\n        /* \"#utility.yul\":4845:4852   */\n      dup6\n        /* \"#utility.yul\":4836:4842   */\n      dup3\n        /* \"#utility.yul\":4825:4834   */\n      dup7\n        /* \"#utility.yul\":4821:4843   */\n      add\n        /* \"#utility.yul\":4800:4853   */\n      tag_277\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4790:4853   */\n      swap3\n      pop\n        /* \"#utility.yul\":4746:4863   */\n      pop\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4928:4978   */\n      tag_339\n        /* \"#utility.yul\":4970:4977   */\n      dup6\n        /* \"#utility.yul\":4961:4967   */\n      dup3\n        /* \"#utility.yul\":4950:4959   */\n      dup7\n        /* \"#utility.yul\":4946:4968   */\n      add\n        /* \"#utility.yul\":4928:4978   */\n      tag_304\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4918:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4873:4988   */\n      pop\n        /* \"#utility.yul\":4527:4995   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5001:5475   */\n    tag_20:\n        /* \"#utility.yul\":5069:5075   */\n      0x00\n        /* \"#utility.yul\":5077:5083   */\n      dup1\n        /* \"#utility.yul\":5126:5128   */\n      0x40\n        /* \"#utility.yul\":5114:5123   */\n      dup4\n        /* \"#utility.yul\":5105:5112   */\n      dup6\n        /* \"#utility.yul\":5101:5124   */\n      sub\n        /* \"#utility.yul\":5097:5129   */\n      slt\n        /* \"#utility.yul\":5094:5213   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":5132:5211   */\n      tag_342\n      tag_321\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5094:5213   */\n    tag_341:\n        /* \"#utility.yul\":5252:5253   */\n      0x00\n        /* \"#utility.yul\":5277:5330   */\n      tag_343\n        /* \"#utility.yul\":5322:5329   */\n      dup6\n        /* \"#utility.yul\":5313:5319   */\n      dup3\n        /* \"#utility.yul\":5302:5311   */\n      dup7\n        /* \"#utility.yul\":5298:5320   */\n      add\n        /* \"#utility.yul\":5277:5330   */\n      tag_277\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5267:5330   */\n      swap3\n      pop\n        /* \"#utility.yul\":5223:5340   */\n      pop\n        /* \"#utility.yul\":5379:5381   */\n      0x20\n        /* \"#utility.yul\":5405:5458   */\n      tag_344\n        /* \"#utility.yul\":5450:5457   */\n      dup6\n        /* \"#utility.yul\":5441:5447   */\n      dup3\n        /* \"#utility.yul\":5430:5439   */\n      dup7\n        /* \"#utility.yul\":5426:5448   */\n      add\n        /* \"#utility.yul\":5405:5458   */\n      tag_289\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5395:5458   */\n      swap2\n      pop\n        /* \"#utility.yul\":5350:5468   */\n      pop\n        /* \"#utility.yul\":5001:5475   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5481:6100   */\n    tag_74:\n        /* \"#utility.yul\":5558:5564   */\n      0x00\n        /* \"#utility.yul\":5566:5572   */\n      dup1\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x60\n        /* \"#utility.yul\":5611:5620   */\n      dup5\n        /* \"#utility.yul\":5602:5609   */\n      dup7\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_347\n      tag_321\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5591:5710   */\n    tag_346:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_348\n        /* \"#utility.yul\":5819:5826   */\n      dup7\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup8\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_277\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5764:5827   */\n      swap4\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5876:5878   */\n      0x20\n        /* \"#utility.yul\":5902:5955   */\n      tag_349\n        /* \"#utility.yul\":5947:5954   */\n      dup7\n        /* \"#utility.yul\":5938:5944   */\n      dup3\n        /* \"#utility.yul\":5927:5936   */\n      dup8\n        /* \"#utility.yul\":5923:5945   */\n      add\n        /* \"#utility.yul\":5902:5955   */\n      tag_289\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5892:5955   */\n      swap3\n      pop\n        /* \"#utility.yul\":5847:5965   */\n      pop\n        /* \"#utility.yul\":6004:6006   */\n      0x40\n        /* \"#utility.yul\":6030:6083   */\n      tag_350\n        /* \"#utility.yul\":6075:6082   */\n      dup7\n        /* \"#utility.yul\":6066:6072   */\n      dup3\n        /* \"#utility.yul\":6055:6064   */\n      dup8\n        /* \"#utility.yul\":6051:6073   */\n      add\n        /* \"#utility.yul\":6030:6083   */\n      tag_289\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6020:6083   */\n      swap2\n      pop\n        /* \"#utility.yul\":5975:6093   */\n      pop\n        /* \"#utility.yul\":5481:6100   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6106:7000   */\n    tag_35:\n        /* \"#utility.yul\":6224:6230   */\n      0x00\n        /* \"#utility.yul\":6232:6238   */\n      dup1\n        /* \"#utility.yul\":6281:6283   */\n      0x40\n        /* \"#utility.yul\":6269:6278   */\n      dup4\n        /* \"#utility.yul\":6260:6267   */\n      dup6\n        /* \"#utility.yul\":6256:6279   */\n      sub\n        /* \"#utility.yul\":6252:6284   */\n      slt\n        /* \"#utility.yul\":6249:6368   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":6287:6366   */\n      tag_353\n      tag_321\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6249:6368   */\n    tag_352:\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6407:6438   */\n      calldataload\n        /* \"#utility.yul\":6465:6483   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6457:6463   */\n      dup2\n        /* \"#utility.yul\":6454:6484   */\n      gt\n        /* \"#utility.yul\":6451:6568   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":6487:6566   */\n      tag_355\n      tag_330\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6451:6568   */\n    tag_354:\n        /* \"#utility.yul\":6592:6670   */\n      tag_356\n        /* \"#utility.yul\":6662:6669   */\n      dup6\n        /* \"#utility.yul\":6653:6659   */\n      dup3\n        /* \"#utility.yul\":6642:6651   */\n      dup7\n        /* \"#utility.yul\":6638:6660   */\n      add\n        /* \"#utility.yul\":6592:6670   */\n      tag_293\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6582:6670   */\n      swap3\n      pop\n        /* \"#utility.yul\":6378:6680   */\n      pop\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6750   */\n      add\n        /* \"#utility.yul\":6719:6751   */\n      calldataload\n        /* \"#utility.yul\":6778:6796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6770:6776   */\n      dup2\n        /* \"#utility.yul\":6767:6797   */\n      gt\n        /* \"#utility.yul\":6764:6881   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":6800:6879   */\n      tag_358\n      tag_330\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6764:6881   */\n    tag_357:\n        /* \"#utility.yul\":6905:6983   */\n      tag_359\n        /* \"#utility.yul\":6975:6982   */\n      dup6\n        /* \"#utility.yul\":6966:6972   */\n      dup3\n        /* \"#utility.yul\":6955:6964   */\n      dup7\n        /* \"#utility.yul\":6951:6973   */\n      add\n        /* \"#utility.yul\":6905:6983   */\n      tag_299\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6895:6983   */\n      swap2\n      pop\n        /* \"#utility.yul\":6690:6993   */\n      pop\n        /* \"#utility.yul\":6106:7000   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7006:7333   */\n    tag_26:\n        /* \"#utility.yul\":7064:7070   */\n      0x00\n        /* \"#utility.yul\":7113:7115   */\n      0x20\n        /* \"#utility.yul\":7101:7110   */\n      dup3\n        /* \"#utility.yul\":7092:7099   */\n      dup5\n        /* \"#utility.yul\":7088:7111   */\n      sub\n        /* \"#utility.yul\":7084:7116   */\n      slt\n        /* \"#utility.yul\":7081:7200   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":7119:7198   */\n      tag_362\n      tag_321\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":7081:7200   */\n    tag_361:\n        /* \"#utility.yul\":7239:7240   */\n      0x00\n        /* \"#utility.yul\":7264:7316   */\n      tag_363\n        /* \"#utility.yul\":7308:7315   */\n      dup5\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup6\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7264:7316   */\n      tag_308\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7254:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7210:7326   */\n      pop\n        /* \"#utility.yul\":7006:7333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7688   */\n    tag_234:\n        /* \"#utility.yul\":7408:7414   */\n      0x00\n        /* \"#utility.yul\":7457:7459   */\n      0x20\n        /* \"#utility.yul\":7445:7454   */\n      dup3\n        /* \"#utility.yul\":7436:7443   */\n      dup5\n        /* \"#utility.yul\":7432:7455   */\n      sub\n        /* \"#utility.yul\":7428:7460   */\n      slt\n        /* \"#utility.yul\":7425:7544   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":7463:7542   */\n      tag_366\n      tag_321\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7425:7544   */\n    tag_365:\n        /* \"#utility.yul\":7583:7584   */\n      0x00\n        /* \"#utility.yul\":7608:7671   */\n      tag_367\n        /* \"#utility.yul\":7663:7670   */\n      dup5\n        /* \"#utility.yul\":7654:7660   */\n      dup3\n        /* \"#utility.yul\":7643:7652   */\n      dup6\n        /* \"#utility.yul\":7639:7661   */\n      add\n        /* \"#utility.yul\":7608:7671   */\n      tag_312\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7598:7671   */\n      swap2\n      pop\n        /* \"#utility.yul\":7554:7681   */\n      pop\n        /* \"#utility.yul\":7339:7688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7694:8023   */\n    tag_61:\n        /* \"#utility.yul\":7753:7759   */\n      0x00\n        /* \"#utility.yul\":7802:7804   */\n      0x20\n        /* \"#utility.yul\":7790:7799   */\n      dup3\n        /* \"#utility.yul\":7781:7788   */\n      dup5\n        /* \"#utility.yul\":7777:7800   */\n      sub\n        /* \"#utility.yul\":7773:7805   */\n      slt\n        /* \"#utility.yul\":7770:7889   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":7808:7887   */\n      tag_370\n      tag_321\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7770:7889   */\n    tag_369:\n        /* \"#utility.yul\":7928:7929   */\n      0x00\n        /* \"#utility.yul\":7953:8006   */\n      tag_371\n        /* \"#utility.yul\":7998:8005   */\n      dup5\n        /* \"#utility.yul\":7989:7995   */\n      dup3\n        /* \"#utility.yul\":7978:7987   */\n      dup6\n        /* \"#utility.yul\":7974:7996   */\n      add\n        /* \"#utility.yul\":7953:8006   */\n      tag_289\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7943:8006   */\n      swap2\n      pop\n        /* \"#utility.yul\":7899:8016   */\n      pop\n        /* \"#utility.yul\":7694:8023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8029:8208   */\n    tag_372:\n        /* \"#utility.yul\":8098:8108   */\n      0x00\n        /* \"#utility.yul\":8119:8165   */\n      tag_374\n        /* \"#utility.yul\":8161:8164   */\n      dup4\n        /* \"#utility.yul\":8153:8159   */\n      dup4\n        /* \"#utility.yul\":8119:8165   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8197:8201   */\n      0x20\n        /* \"#utility.yul\":8192:8195   */\n      dup4\n        /* \"#utility.yul\":8188:8202   */\n      add\n        /* \"#utility.yul\":8174:8202   */\n      swap1\n      pop\n        /* \"#utility.yul\":8029:8208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8214:8356   */\n    tag_376:\n        /* \"#utility.yul\":8317:8349   */\n      tag_378\n        /* \"#utility.yul\":8343:8348   */\n      dup2\n        /* \"#utility.yul\":8317:8349   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8312:8315   */\n      dup3\n        /* \"#utility.yul\":8305:8350   */\n      mstore\n        /* \"#utility.yul\":8214:8356   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8362:8480   */\n    tag_380:\n        /* \"#utility.yul\":8449:8473   */\n      tag_382\n        /* \"#utility.yul\":8467:8472   */\n      dup2\n        /* \"#utility.yul\":8449:8473   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8444:8447   */\n      dup3\n        /* \"#utility.yul\":8437:8474   */\n      mstore\n        /* \"#utility.yul\":8362:8480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8486:8643   */\n    tag_384:\n        /* \"#utility.yul\":8591:8636   */\n      tag_386\n        /* \"#utility.yul\":8611:8635   */\n      tag_387\n        /* \"#utility.yul\":8629:8634   */\n      dup3\n        /* \"#utility.yul\":8611:8635   */\n      tag_383\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8591:8636   */\n      tag_388\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8586:8589   */\n      dup3\n        /* \"#utility.yul\":8579:8637   */\n      mstore\n        /* \"#utility.yul\":8486:8643   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8679:9411   */\n    tag_389:\n        /* \"#utility.yul\":8798:8801   */\n      0x00\n        /* \"#utility.yul\":8827:8881   */\n      tag_391\n        /* \"#utility.yul\":8875:8880   */\n      dup3\n        /* \"#utility.yul\":8827:8881   */\n      tag_392\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8897:8983   */\n      tag_393\n        /* \"#utility.yul\":8976:8982   */\n      dup2\n        /* \"#utility.yul\":8971:8974   */\n      dup6\n        /* \"#utility.yul\":8897:8983   */\n      tag_394\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8890:8983   */\n      swap4\n      pop\n        /* \"#utility.yul\":9007:9063   */\n      tag_395\n        /* \"#utility.yul\":9057:9062   */\n      dup4\n        /* \"#utility.yul\":9007:9063   */\n      tag_396\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9086:9093   */\n      dup1\n        /* \"#utility.yul\":9117:9118   */\n      0x00\n        /* \"#utility.yul\":9102:9386   */\n    tag_397:\n        /* \"#utility.yul\":9127:9133   */\n      dup4\n        /* \"#utility.yul\":9124:9125   */\n      dup2\n        /* \"#utility.yul\":9121:9134   */\n      lt\n        /* \"#utility.yul\":9102:9386   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":9203:9209   */\n      dup2\n        /* \"#utility.yul\":9197:9210   */\n      mload\n        /* \"#utility.yul\":9230:9293   */\n      tag_400\n        /* \"#utility.yul\":9289:9292   */\n      dup9\n        /* \"#utility.yul\":9274:9287   */\n      dup3\n        /* \"#utility.yul\":9230:9293   */\n      tag_372\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9223:9293   */\n      swap8\n      pop\n        /* \"#utility.yul\":9316:9376   */\n      tag_401\n        /* \"#utility.yul\":9369:9375   */\n      dup4\n        /* \"#utility.yul\":9316:9376   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9306:9376   */\n      swap3\n      pop\n        /* \"#utility.yul\":9162:9386   */\n      pop\n        /* \"#utility.yul\":9149:9150   */\n      0x01\n        /* \"#utility.yul\":9146:9147   */\n      dup2\n        /* \"#utility.yul\":9142:9151   */\n      add\n        /* \"#utility.yul\":9137:9151   */\n      swap1\n      pop\n        /* \"#utility.yul\":9102:9386   */\n      jump(tag_397)\n    tag_399:\n        /* \"#utility.yul\":9106:9120   */\n      pop\n        /* \"#utility.yul\":9402:9405   */\n      dup6\n        /* \"#utility.yul\":9395:9405   */\n      swap4\n      pop\n        /* \"#utility.yul\":8803:9411   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8679:9411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9417:9526   */\n    tag_403:\n        /* \"#utility.yul\":9498:9519   */\n      tag_405\n        /* \"#utility.yul\":9513:9518   */\n      dup2\n        /* \"#utility.yul\":9498:9519   */\n      tag_406\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9493:9496   */\n      dup3\n        /* \"#utility.yul\":9486:9520   */\n      mstore\n        /* \"#utility.yul\":9417:9526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9532:9892   */\n    tag_407:\n        /* \"#utility.yul\":9618:9621   */\n      0x00\n        /* \"#utility.yul\":9646:9684   */\n      tag_409\n        /* \"#utility.yul\":9678:9683   */\n      dup3\n        /* \"#utility.yul\":9646:9684   */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9700:9770   */\n      tag_411\n        /* \"#utility.yul\":9763:9769   */\n      dup2\n        /* \"#utility.yul\":9758:9761   */\n      dup6\n        /* \"#utility.yul\":9700:9770   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9693:9770   */\n      swap4\n      pop\n        /* \"#utility.yul\":9779:9831   */\n      tag_413\n        /* \"#utility.yul\":9824:9830   */\n      dup2\n        /* \"#utility.yul\":9819:9822   */\n      dup6\n        /* \"#utility.yul\":9812:9816   */\n      0x20\n        /* \"#utility.yul\":9805:9810   */\n      dup7\n        /* \"#utility.yul\":9801:9817   */\n      add\n        /* \"#utility.yul\":9779:9831   */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9856:9885   */\n      tag_415\n        /* \"#utility.yul\":9878:9884   */\n      dup2\n        /* \"#utility.yul\":9856:9885   */\n      tag_416\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9851:9854   */\n      dup5\n        /* \"#utility.yul\":9847:9886   */\n      add\n        /* \"#utility.yul\":9840:9886   */\n      swap2\n      pop\n        /* \"#utility.yul\":9622:9892   */\n      pop\n        /* \"#utility.yul\":9532:9892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9898:10047   */\n    tag_417:\n        /* \"#utility.yul\":9994:10040   */\n      tag_419\n        /* \"#utility.yul\":10034:10039   */\n      dup2\n        /* \"#utility.yul\":9994:10040   */\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9989:9992   */\n      dup3\n        /* \"#utility.yul\":9982:10041   */\n      mstore\n        /* \"#utility.yul\":9898:10047   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10053:10417   */\n    tag_421:\n        /* \"#utility.yul\":10141:10144   */\n      0x00\n        /* \"#utility.yul\":10169:10208   */\n      tag_423\n        /* \"#utility.yul\":10202:10207   */\n      dup3\n        /* \"#utility.yul\":10169:10208   */\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10224:10295   */\n      tag_425\n        /* \"#utility.yul\":10288:10294   */\n      dup2\n        /* \"#utility.yul\":10283:10286   */\n      dup6\n        /* \"#utility.yul\":10224:10295   */\n      tag_426\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10217:10295   */\n      swap4\n      pop\n        /* \"#utility.yul\":10304:10356   */\n      tag_427\n        /* \"#utility.yul\":10349:10355   */\n      dup2\n        /* \"#utility.yul\":10344:10347   */\n      dup6\n        /* \"#utility.yul\":10337:10341   */\n      0x20\n        /* \"#utility.yul\":10330:10335   */\n      dup7\n        /* \"#utility.yul\":10326:10342   */\n      add\n        /* \"#utility.yul\":10304:10356   */\n      tag_414\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10381:10410   */\n      tag_428\n        /* \"#utility.yul\":10403:10409   */\n      dup2\n        /* \"#utility.yul\":10381:10410   */\n      tag_416\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10376:10379   */\n      dup5\n        /* \"#utility.yul\":10372:10411   */\n      add\n        /* \"#utility.yul\":10365:10411   */\n      swap2\n      pop\n        /* \"#utility.yul\":10145:10417   */\n      pop\n        /* \"#utility.yul\":10053:10417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10423:10789   */\n    tag_429:\n        /* \"#utility.yul\":10565:10568   */\n      0x00\n        /* \"#utility.yul\":10586:10653   */\n      tag_431\n        /* \"#utility.yul\":10650:10652   */\n      0x34\n        /* \"#utility.yul\":10645:10648   */\n      dup4\n        /* \"#utility.yul\":10586:10653   */\n      tag_426\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10579:10653   */\n      swap2\n      pop\n        /* \"#utility.yul\":10662:10755   */\n      tag_432\n        /* \"#utility.yul\":10751:10754   */\n      dup3\n        /* \"#utility.yul\":10662:10755   */\n      tag_433\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10780:10782   */\n      0x40\n        /* \"#utility.yul\":10775:10778   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      add\n        /* \"#utility.yul\":10764:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10423:10789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10795:11161   */\n    tag_434:\n        /* \"#utility.yul\":10937:10940   */\n      0x00\n        /* \"#utility.yul\":10958:11025   */\n      tag_436\n        /* \"#utility.yul\":11022:11024   */\n      0x28\n        /* \"#utility.yul\":11017:11020   */\n      dup4\n        /* \"#utility.yul\":10958:11025   */\n      tag_426\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10951:11025   */\n      swap2\n      pop\n        /* \"#utility.yul\":11034:11127   */\n      tag_437\n        /* \"#utility.yul\":11123:11126   */\n      dup3\n        /* \"#utility.yul\":11034:11127   */\n      tag_438\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11152:11154   */\n      0x40\n        /* \"#utility.yul\":11147:11150   */\n      dup3\n        /* \"#utility.yul\":11143:11155   */\n      add\n        /* \"#utility.yul\":11136:11155   */\n      swap1\n      pop\n        /* \"#utility.yul\":10795:11161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11167:11533   */\n    tag_439:\n        /* \"#utility.yul\":11309:11312   */\n      0x00\n        /* \"#utility.yul\":11330:11397   */\n      tag_441\n        /* \"#utility.yul\":11394:11396   */\n      0x2b\n        /* \"#utility.yul\":11389:11392   */\n      dup4\n        /* \"#utility.yul\":11330:11397   */\n      tag_426\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11323:11397   */\n      swap2\n      pop\n        /* \"#utility.yul\":11406:11499   */\n      tag_442\n        /* \"#utility.yul\":11495:11498   */\n      dup3\n        /* \"#utility.yul\":11406:11499   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11524:11526   */\n      0x40\n        /* \"#utility.yul\":11519:11522   */\n      dup3\n        /* \"#utility.yul\":11515:11527   */\n      add\n        /* \"#utility.yul\":11508:11527   */\n      swap1\n      pop\n        /* \"#utility.yul\":11167:11533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11905   */\n    tag_444:\n        /* \"#utility.yul\":11681:11684   */\n      0x00\n        /* \"#utility.yul\":11702:11769   */\n      tag_446\n        /* \"#utility.yul\":11766:11768   */\n      0x24\n        /* \"#utility.yul\":11761:11764   */\n      dup4\n        /* \"#utility.yul\":11702:11769   */\n      tag_426\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11695:11769   */\n      swap2\n      pop\n        /* \"#utility.yul\":11778:11871   */\n      tag_447\n        /* \"#utility.yul\":11867:11870   */\n      dup3\n        /* \"#utility.yul\":11778:11871   */\n      tag_448\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11896:11898   */\n      0x40\n        /* \"#utility.yul\":11891:11894   */\n      dup3\n        /* \"#utility.yul\":11887:11899   */\n      add\n        /* \"#utility.yul\":11880:11899   */\n      swap1\n      pop\n        /* \"#utility.yul\":11539:11905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11911:12277   */\n    tag_449:\n        /* \"#utility.yul\":12053:12056   */\n      0x00\n        /* \"#utility.yul\":12074:12141   */\n      tag_451\n        /* \"#utility.yul\":12138:12140   */\n      0x2c\n        /* \"#utility.yul\":12133:12136   */\n      dup4\n        /* \"#utility.yul\":12074:12141   */\n      tag_426\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12067:12141   */\n      swap2\n      pop\n        /* \"#utility.yul\":12150:12243   */\n      tag_452\n        /* \"#utility.yul\":12239:12242   */\n      dup3\n        /* \"#utility.yul\":12150:12243   */\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12268:12270   */\n      0x40\n        /* \"#utility.yul\":12263:12266   */\n      dup3\n        /* \"#utility.yul\":12259:12271   */\n      add\n        /* \"#utility.yul\":12252:12271   */\n      swap1\n      pop\n        /* \"#utility.yul\":11911:12277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12283:12649   */\n    tag_454:\n        /* \"#utility.yul\":12425:12428   */\n      0x00\n        /* \"#utility.yul\":12446:12513   */\n      tag_456\n        /* \"#utility.yul\":12510:12512   */\n      0x29\n        /* \"#utility.yul\":12505:12508   */\n      dup4\n        /* \"#utility.yul\":12446:12513   */\n      tag_426\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12439:12513   */\n      swap2\n      pop\n        /* \"#utility.yul\":12522:12615   */\n      tag_457\n        /* \"#utility.yul\":12611:12614   */\n      dup3\n        /* \"#utility.yul\":12522:12615   */\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12640:12642   */\n      0x40\n        /* \"#utility.yul\":12635:12638   */\n      dup3\n        /* \"#utility.yul\":12631:12643   */\n      add\n        /* \"#utility.yul\":12624:12643   */\n      swap1\n      pop\n        /* \"#utility.yul\":12283:12649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12655:13021   */\n    tag_459:\n        /* \"#utility.yul\":12797:12800   */\n      0x00\n        /* \"#utility.yul\":12818:12885   */\n      tag_461\n        /* \"#utility.yul\":12882:12884   */\n      0x23\n        /* \"#utility.yul\":12877:12880   */\n      dup4\n        /* \"#utility.yul\":12818:12885   */\n      tag_426\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12811:12885   */\n      swap2\n      pop\n        /* \"#utility.yul\":12894:12987   */\n      tag_462\n        /* \"#utility.yul\":12983:12986   */\n      dup3\n        /* \"#utility.yul\":12894:12987   */\n      tag_463\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13012:13014   */\n      0x40\n        /* \"#utility.yul\":13007:13010   */\n      dup3\n        /* \"#utility.yul\":13003:13015   */\n      add\n        /* \"#utility.yul\":12996:13015   */\n      swap1\n      pop\n        /* \"#utility.yul\":12655:13021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13027:13393   */\n    tag_464:\n        /* \"#utility.yul\":13169:13172   */\n      0x00\n        /* \"#utility.yul\":13190:13257   */\n      tag_466\n        /* \"#utility.yul\":13254:13256   */\n      0x29\n        /* \"#utility.yul\":13249:13252   */\n      dup4\n        /* \"#utility.yul\":13190:13257   */\n      tag_426\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13183:13257   */\n      swap2\n      pop\n        /* \"#utility.yul\":13266:13359   */\n      tag_467\n        /* \"#utility.yul\":13355:13358   */\n      dup3\n        /* \"#utility.yul\":13266:13359   */\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13384:13386   */\n      0x40\n        /* \"#utility.yul\":13379:13382   */\n      dup3\n        /* \"#utility.yul\":13375:13387   */\n      add\n        /* \"#utility.yul\":13368:13387   */\n      swap1\n      pop\n        /* \"#utility.yul\":13027:13393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:13765   */\n    tag_469:\n        /* \"#utility.yul\":13541:13544   */\n      0x00\n        /* \"#utility.yul\":13562:13629   */\n      tag_471\n        /* \"#utility.yul\":13626:13628   */\n      0x29\n        /* \"#utility.yul\":13621:13624   */\n      dup4\n        /* \"#utility.yul\":13562:13629   */\n      tag_426\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13555:13629   */\n      swap2\n      pop\n        /* \"#utility.yul\":13638:13731   */\n      tag_472\n        /* \"#utility.yul\":13727:13730   */\n      dup3\n        /* \"#utility.yul\":13638:13731   */\n      tag_473\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13756:13758   */\n      0x40\n        /* \"#utility.yul\":13751:13754   */\n      dup3\n        /* \"#utility.yul\":13747:13759   */\n      add\n        /* \"#utility.yul\":13740:13759   */\n      swap1\n      pop\n        /* \"#utility.yul\":13399:13765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13771:14137   */\n    tag_474:\n        /* \"#utility.yul\":13913:13916   */\n      0x00\n        /* \"#utility.yul\":13934:14001   */\n      tag_476\n        /* \"#utility.yul\":13998:14000   */\n      0x28\n        /* \"#utility.yul\":13993:13996   */\n      dup4\n        /* \"#utility.yul\":13934:14001   */\n      tag_426\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":13927:14001   */\n      swap2\n      pop\n        /* \"#utility.yul\":14010:14103   */\n      tag_477\n        /* \"#utility.yul\":14099:14102   */\n      dup3\n        /* \"#utility.yul\":14010:14103   */\n      tag_478\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14128:14130   */\n      0x40\n        /* \"#utility.yul\":14123:14126   */\n      dup3\n        /* \"#utility.yul\":14119:14131   */\n      add\n        /* \"#utility.yul\":14112:14131   */\n      swap1\n      pop\n        /* \"#utility.yul\":13771:14137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14143:14509   */\n    tag_479:\n        /* \"#utility.yul\":14285:14288   */\n      0x00\n        /* \"#utility.yul\":14306:14373   */\n      tag_481\n        /* \"#utility.yul\":14370:14372   */\n      0x21\n        /* \"#utility.yul\":14365:14368   */\n      dup4\n        /* \"#utility.yul\":14306:14373   */\n      tag_426\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14299:14373   */\n      swap2\n      pop\n        /* \"#utility.yul\":14382:14475   */\n      tag_482\n        /* \"#utility.yul\":14471:14474   */\n      dup3\n        /* \"#utility.yul\":14382:14475   */\n      tag_483\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14500:14502   */\n      0x40\n        /* \"#utility.yul\":14495:14498   */\n      dup3\n        /* \"#utility.yul\":14491:14503   */\n      add\n        /* \"#utility.yul\":14484:14503   */\n      swap1\n      pop\n        /* \"#utility.yul\":14143:14509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14515:14623   */\n    tag_375:\n        /* \"#utility.yul\":14592:14616   */\n      tag_485\n        /* \"#utility.yul\":14610:14615   */\n      dup2\n        /* \"#utility.yul\":14592:14616   */\n      tag_486\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14587:14590   */\n      dup3\n        /* \"#utility.yul\":14580:14617   */\n      mstore\n        /* \"#utility.yul\":14515:14623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14629:14747   */\n    tag_487:\n        /* \"#utility.yul\":14716:14740   */\n      tag_489\n        /* \"#utility.yul\":14734:14739   */\n      dup2\n        /* \"#utility.yul\":14716:14740   */\n      tag_486\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14711:14714   */\n      dup3\n        /* \"#utility.yul\":14704:14741   */\n      mstore\n        /* \"#utility.yul\":14629:14747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14753:14910   */\n    tag_490:\n        /* \"#utility.yul\":14858:14903   */\n      tag_492\n        /* \"#utility.yul\":14878:14902   */\n      tag_493\n        /* \"#utility.yul\":14896:14901   */\n      dup3\n        /* \"#utility.yul\":14878:14902   */\n      tag_486\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14858:14903   */\n      tag_494\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14853:14856   */\n      dup3\n        /* \"#utility.yul\":14846:14904   */\n      mstore\n        /* \"#utility.yul\":14753:14910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14916:15454   */\n    tag_184:\n        /* \"#utility.yul\":15084:15087   */\n      0x00\n        /* \"#utility.yul\":15099:15174   */\n      tag_496\n        /* \"#utility.yul\":15170:15173   */\n      dup3\n        /* \"#utility.yul\":15161:15167   */\n      dup7\n        /* \"#utility.yul\":15099:15174   */\n      tag_490\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15199:15201   */\n      0x20\n        /* \"#utility.yul\":15194:15197   */\n      dup3\n        /* \"#utility.yul\":15190:15202   */\n      add\n        /* \"#utility.yul\":15183:15202   */\n      swap2\n      pop\n        /* \"#utility.yul\":15212:15287   */\n      tag_497\n        /* \"#utility.yul\":15283:15286   */\n      dup3\n        /* \"#utility.yul\":15274:15280   */\n      dup6\n        /* \"#utility.yul\":15212:15287   */\n      tag_384\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15312:15314   */\n      0x14\n        /* \"#utility.yul\":15307:15310   */\n      dup3\n        /* \"#utility.yul\":15303:15315   */\n      add\n        /* \"#utility.yul\":15296:15315   */\n      swap2\n      pop\n        /* \"#utility.yul\":15325:15400   */\n      tag_498\n        /* \"#utility.yul\":15396:15399   */\n      dup3\n        /* \"#utility.yul\":15387:15393   */\n      dup5\n        /* \"#utility.yul\":15325:15400   */\n      tag_490\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15425:15427   */\n      0x20\n        /* \"#utility.yul\":15420:15423   */\n      dup3\n        /* \"#utility.yul\":15416:15428   */\n      add\n        /* \"#utility.yul\":15409:15428   */\n      swap2\n      pop\n        /* \"#utility.yul\":15445:15448   */\n      dup2\n        /* \"#utility.yul\":15438:15448   */\n      swap1\n      pop\n        /* \"#utility.yul\":14916:15454   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15460:15714   */\n    tag_58:\n        /* \"#utility.yul\":15569:15573   */\n      0x00\n        /* \"#utility.yul\":15607:15609   */\n      0x20\n        /* \"#utility.yul\":15596:15605   */\n      dup3\n        /* \"#utility.yul\":15592:15610   */\n      add\n        /* \"#utility.yul\":15584:15610   */\n      swap1\n      pop\n        /* \"#utility.yul\":15620:15707   */\n      tag_500\n        /* \"#utility.yul\":15704:15705   */\n      0x00\n        /* \"#utility.yul\":15693:15702   */\n      dup4\n        /* \"#utility.yul\":15689:15706   */\n      add\n        /* \"#utility.yul\":15680:15686   */\n      dup5\n        /* \"#utility.yul\":15620:15707   */\n      tag_376\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":15460:15714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15720:16471   */\n    tag_230:\n        /* \"#utility.yul\":15943:15947   */\n      0x00\n        /* \"#utility.yul\":15981:15984   */\n      0xa0\n        /* \"#utility.yul\":15970:15979   */\n      dup3\n        /* \"#utility.yul\":15966:15985   */\n      add\n        /* \"#utility.yul\":15958:15985   */\n      swap1\n      pop\n        /* \"#utility.yul\":15995:16066   */\n      tag_502\n        /* \"#utility.yul\":16063:16064   */\n      0x00\n        /* \"#utility.yul\":16052:16061   */\n      dup4\n        /* \"#utility.yul\":16048:16065   */\n      add\n        /* \"#utility.yul\":16039:16045   */\n      dup9\n        /* \"#utility.yul\":15995:16066   */\n      tag_380\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":16076:16148   */\n      tag_503\n        /* \"#utility.yul\":16144:16146   */\n      0x20\n        /* \"#utility.yul\":16133:16142   */\n      dup4\n        /* \"#utility.yul\":16129:16147   */\n      add\n        /* \"#utility.yul\":16120:16126   */\n      dup8\n        /* \"#utility.yul\":16076:16148   */\n      tag_380\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":16158:16230   */\n      tag_504\n        /* \"#utility.yul\":16226:16228   */\n      0x40\n        /* \"#utility.yul\":16215:16224   */\n      dup4\n        /* \"#utility.yul\":16211:16229   */\n      add\n        /* \"#utility.yul\":16202:16208   */\n      dup7\n        /* \"#utility.yul\":16158:16230   */\n      tag_487\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16240:16312   */\n      tag_505\n        /* \"#utility.yul\":16308:16310   */\n      0x60\n        /* \"#utility.yul\":16297:16306   */\n      dup4\n        /* \"#utility.yul\":16293:16311   */\n      add\n        /* \"#utility.yul\":16284:16290   */\n      dup6\n        /* \"#utility.yul\":16240:16312   */\n      tag_487\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16360:16369   */\n      dup2\n        /* \"#utility.yul\":16354:16358   */\n      dup2\n        /* \"#utility.yul\":16350:16370   */\n      sub\n        /* \"#utility.yul\":16344:16347   */\n      0x80\n        /* \"#utility.yul\":16333:16342   */\n      dup4\n        /* \"#utility.yul\":16329:16348   */\n      add\n        /* \"#utility.yul\":16322:16371   */\n      mstore\n        /* \"#utility.yul\":16388:16464   */\n      tag_506\n        /* \"#utility.yul\":16459:16463   */\n      dup2\n        /* \"#utility.yul\":16450:16456   */\n      dup5\n        /* \"#utility.yul\":16388:16464   */\n      tag_407\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":16380:16464   */\n      swap1\n      pop\n        /* \"#utility.yul\":15720:16471   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16477:16850   */\n    tag_38:\n        /* \"#utility.yul\":16620:16624   */\n      0x00\n        /* \"#utility.yul\":16658:16660   */\n      0x20\n        /* \"#utility.yul\":16647:16656   */\n      dup3\n        /* \"#utility.yul\":16643:16661   */\n      add\n        /* \"#utility.yul\":16635:16661   */\n      swap1\n      pop\n        /* \"#utility.yul\":16707:16716   */\n      dup2\n        /* \"#utility.yul\":16701:16705   */\n      dup2\n        /* \"#utility.yul\":16697:16717   */\n      sub\n        /* \"#utility.yul\":16693:16694   */\n      0x00\n        /* \"#utility.yul\":16682:16691   */\n      dup4\n        /* \"#utility.yul\":16678:16695   */\n      add\n        /* \"#utility.yul\":16671:16718   */\n      mstore\n        /* \"#utility.yul\":16735:16843   */\n      tag_508\n        /* \"#utility.yul\":16838:16842   */\n      dup2\n        /* \"#utility.yul\":16829:16835   */\n      dup5\n        /* \"#utility.yul\":16735:16843   */\n      tag_389\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16727:16843   */\n      swap1\n      pop\n        /* \"#utility.yul\":16477:16850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16856:17490   */\n    tag_181:\n        /* \"#utility.yul\":17077:17081   */\n      0x00\n        /* \"#utility.yul\":17115:17117   */\n      0x40\n        /* \"#utility.yul\":17104:17113   */\n      dup3\n        /* \"#utility.yul\":17100:17118   */\n      add\n        /* \"#utility.yul\":17092:17118   */\n      swap1\n      pop\n        /* \"#utility.yul\":17164:17173   */\n      dup2\n        /* \"#utility.yul\":17158:17162   */\n      dup2\n        /* \"#utility.yul\":17154:17174   */\n      sub\n        /* \"#utility.yul\":17150:17151   */\n      0x00\n        /* \"#utility.yul\":17139:17148   */\n      dup4\n        /* \"#utility.yul\":17135:17152   */\n      add\n        /* \"#utility.yul\":17128:17175   */\n      mstore\n        /* \"#utility.yul\":17192:17300   */\n      tag_510\n        /* \"#utility.yul\":17295:17299   */\n      dup2\n        /* \"#utility.yul\":17286:17292   */\n      dup6\n        /* \"#utility.yul\":17192:17300   */\n      tag_389\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17184:17300   */\n      swap1\n      pop\n        /* \"#utility.yul\":17347:17356   */\n      dup2\n        /* \"#utility.yul\":17341:17345   */\n      dup2\n        /* \"#utility.yul\":17337:17357   */\n      sub\n        /* \"#utility.yul\":17332:17334   */\n      0x20\n        /* \"#utility.yul\":17321:17330   */\n      dup4\n        /* \"#utility.yul\":17317:17335   */\n      add\n        /* \"#utility.yul\":17310:17358   */\n      mstore\n        /* \"#utility.yul\":17375:17483   */\n      tag_511\n        /* \"#utility.yul\":17478:17482   */\n      dup2\n        /* \"#utility.yul\":17469:17475   */\n      dup5\n        /* \"#utility.yul\":17375:17483   */\n      tag_389\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":17367:17483   */\n      swap1\n      pop\n        /* \"#utility.yul\":16856:17490   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17496:17706   */\n    tag_29:\n        /* \"#utility.yul\":17583:17587   */\n      0x00\n        /* \"#utility.yul\":17621:17623   */\n      0x20\n        /* \"#utility.yul\":17610:17619   */\n      dup3\n        /* \"#utility.yul\":17606:17624   */\n      add\n        /* \"#utility.yul\":17598:17624   */\n      swap1\n      pop\n        /* \"#utility.yul\":17634:17699   */\n      tag_513\n        /* \"#utility.yul\":17696:17697   */\n      0x00\n        /* \"#utility.yul\":17685:17694   */\n      dup4\n        /* \"#utility.yul\":17681:17698   */\n      add\n        /* \"#utility.yul\":17672:17678   */\n      dup5\n        /* \"#utility.yul\":17634:17699   */\n      tag_403\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":17496:17706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17712:17952   */\n    tag_43:\n        /* \"#utility.yul\":17814:17818   */\n      0x00\n        /* \"#utility.yul\":17852:17854   */\n      0x20\n        /* \"#utility.yul\":17841:17850   */\n      dup3\n        /* \"#utility.yul\":17837:17855   */\n      add\n        /* \"#utility.yul\":17829:17855   */\n      swap1\n      pop\n        /* \"#utility.yul\":17865:17945   */\n      tag_515\n        /* \"#utility.yul\":17942:17943   */\n      0x00\n        /* \"#utility.yul\":17931:17940   */\n      dup4\n        /* \"#utility.yul\":17927:17944   */\n      add\n        /* \"#utility.yul\":17918:17924   */\n      dup5\n        /* \"#utility.yul\":17865:17945   */\n      tag_417\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17712:17952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17958:18271   */\n    tag_245:\n        /* \"#utility.yul\":18071:18075   */\n      0x00\n        /* \"#utility.yul\":18109:18111   */\n      0x20\n        /* \"#utility.yul\":18098:18107   */\n      dup3\n        /* \"#utility.yul\":18094:18112   */\n      add\n        /* \"#utility.yul\":18086:18112   */\n      swap1\n      pop\n        /* \"#utility.yul\":18158:18167   */\n      dup2\n        /* \"#utility.yul\":18152:18156   */\n      dup2\n        /* \"#utility.yul\":18148:18168   */\n      sub\n        /* \"#utility.yul\":18144:18145   */\n      0x00\n        /* \"#utility.yul\":18133:18142   */\n      dup4\n        /* \"#utility.yul\":18129:18146   */\n      add\n        /* \"#utility.yul\":18122:18169   */\n      mstore\n        /* \"#utility.yul\":18186:18264   */\n      tag_517\n        /* \"#utility.yul\":18259:18263   */\n      dup2\n        /* \"#utility.yul\":18250:18256   */\n      dup5\n        /* \"#utility.yul\":18186:18264   */\n      tag_421\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18178:18264   */\n      swap1\n      pop\n        /* \"#utility.yul\":17958:18271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18277:18696   */\n    tag_247:\n        /* \"#utility.yul\":18443:18447   */\n      0x00\n        /* \"#utility.yul\":18481:18483   */\n      0x20\n        /* \"#utility.yul\":18470:18479   */\n      dup3\n        /* \"#utility.yul\":18466:18484   */\n      add\n        /* \"#utility.yul\":18458:18484   */\n      swap1\n      pop\n        /* \"#utility.yul\":18530:18539   */\n      dup2\n        /* \"#utility.yul\":18524:18528   */\n      dup2\n        /* \"#utility.yul\":18520:18540   */\n      sub\n        /* \"#utility.yul\":18516:18517   */\n      0x00\n        /* \"#utility.yul\":18505:18514   */\n      dup4\n        /* \"#utility.yul\":18501:18518   */\n      add\n        /* \"#utility.yul\":18494:18541   */\n      mstore\n        /* \"#utility.yul\":18558:18689   */\n      tag_519\n        /* \"#utility.yul\":18684:18688   */\n      dup2\n        /* \"#utility.yul\":18558:18689   */\n      tag_429\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":18550:18689   */\n      swap1\n      pop\n        /* \"#utility.yul\":18277:18696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18702:19121   */\n    tag_251:\n        /* \"#utility.yul\":18868:18872   */\n      0x00\n        /* \"#utility.yul\":18906:18908   */\n      0x20\n        /* \"#utility.yul\":18895:18904   */\n      dup3\n        /* \"#utility.yul\":18891:18909   */\n      add\n        /* \"#utility.yul\":18883:18909   */\n      swap1\n      pop\n        /* \"#utility.yul\":18955:18964   */\n      dup2\n        /* \"#utility.yul\":18949:18953   */\n      dup2\n        /* \"#utility.yul\":18945:18965   */\n      sub\n        /* \"#utility.yul\":18941:18942   */\n      0x00\n        /* \"#utility.yul\":18930:18939   */\n      dup4\n        /* \"#utility.yul\":18926:18943   */\n      add\n        /* \"#utility.yul\":18919:18966   */\n      mstore\n        /* \"#utility.yul\":18983:19114   */\n      tag_521\n        /* \"#utility.yul\":19109:19113   */\n      dup2\n        /* \"#utility.yul\":18983:19114   */\n      tag_434\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18975:19114   */\n      swap1\n      pop\n        /* \"#utility.yul\":18702:19121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19127:19546   */\n    tag_79:\n        /* \"#utility.yul\":19293:19297   */\n      0x00\n        /* \"#utility.yul\":19331:19333   */\n      0x20\n        /* \"#utility.yul\":19320:19329   */\n      dup3\n        /* \"#utility.yul\":19316:19334   */\n      add\n        /* \"#utility.yul\":19308:19334   */\n      swap1\n      pop\n        /* \"#utility.yul\":19380:19389   */\n      dup2\n        /* \"#utility.yul\":19374:19378   */\n      dup2\n        /* \"#utility.yul\":19370:19390   */\n      sub\n        /* \"#utility.yul\":19366:19367   */\n      0x00\n        /* \"#utility.yul\":19355:19364   */\n      dup4\n        /* \"#utility.yul\":19351:19368   */\n      add\n        /* \"#utility.yul\":19344:19391   */\n      mstore\n        /* \"#utility.yul\":19408:19539   */\n      tag_523\n        /* \"#utility.yul\":19534:19538   */\n      dup2\n        /* \"#utility.yul\":19408:19539   */\n      tag_439\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19400:19539   */\n      swap1\n      pop\n        /* \"#utility.yul\":19127:19546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19552:19971   */\n    tag_178:\n        /* \"#utility.yul\":19718:19722   */\n      0x00\n        /* \"#utility.yul\":19756:19758   */\n      0x20\n        /* \"#utility.yul\":19745:19754   */\n      dup3\n        /* \"#utility.yul\":19741:19759   */\n      add\n        /* \"#utility.yul\":19733:19759   */\n      swap1\n      pop\n        /* \"#utility.yul\":19805:19814   */\n      dup2\n        /* \"#utility.yul\":19799:19803   */\n      dup2\n        /* \"#utility.yul\":19795:19815   */\n      sub\n        /* \"#utility.yul\":19791:19792   */\n      0x00\n        /* \"#utility.yul\":19780:19789   */\n      dup4\n        /* \"#utility.yul\":19776:19793   */\n      add\n        /* \"#utility.yul\":19769:19816   */\n      mstore\n        /* \"#utility.yul\":19833:19964   */\n      tag_525\n        /* \"#utility.yul\":19959:19963   */\n      dup2\n        /* \"#utility.yul\":19833:19964   */\n      tag_444\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":19825:19964   */\n      swap1\n      pop\n        /* \"#utility.yul\":19552:19971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19977:20396   */\n    tag_145:\n        /* \"#utility.yul\":20143:20147   */\n      0x00\n        /* \"#utility.yul\":20181:20183   */\n      0x20\n        /* \"#utility.yul\":20170:20179   */\n      dup3\n        /* \"#utility.yul\":20166:20184   */\n      add\n        /* \"#utility.yul\":20158:20184   */\n      swap1\n      pop\n        /* \"#utility.yul\":20230:20239   */\n      dup2\n        /* \"#utility.yul\":20224:20228   */\n      dup2\n        /* \"#utility.yul\":20220:20240   */\n      sub\n        /* \"#utility.yul\":20216:20217   */\n      0x00\n        /* \"#utility.yul\":20205:20214   */\n      dup4\n        /* \"#utility.yul\":20201:20218   */\n      add\n        /* \"#utility.yul\":20194:20241   */\n      mstore\n        /* \"#utility.yul\":20258:20389   */\n      tag_527\n        /* \"#utility.yul\":20384:20388   */\n      dup2\n        /* \"#utility.yul\":20258:20389   */\n      tag_449\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":20250:20389   */\n      swap1\n      pop\n        /* \"#utility.yul\":19977:20396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20402:20821   */\n    tag_111:\n        /* \"#utility.yul\":20568:20572   */\n      0x00\n        /* \"#utility.yul\":20606:20608   */\n      0x20\n        /* \"#utility.yul\":20595:20604   */\n      dup3\n        /* \"#utility.yul\":20591:20609   */\n      add\n        /* \"#utility.yul\":20583:20609   */\n      swap1\n      pop\n        /* \"#utility.yul\":20655:20664   */\n      dup2\n        /* \"#utility.yul\":20649:20653   */\n      dup2\n        /* \"#utility.yul\":20645:20665   */\n      sub\n        /* \"#utility.yul\":20641:20642   */\n      0x00\n        /* \"#utility.yul\":20630:20639   */\n      dup4\n        /* \"#utility.yul\":20626:20643   */\n      add\n        /* \"#utility.yul\":20619:20666   */\n      mstore\n        /* \"#utility.yul\":20683:20814   */\n      tag_529\n        /* \"#utility.yul\":20809:20813   */\n      dup2\n        /* \"#utility.yul\":20683:20814   */\n      tag_454\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":20675:20814   */\n      swap1\n      pop\n        /* \"#utility.yul\":20402:20821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20827:21246   */\n    tag_162:\n        /* \"#utility.yul\":20993:20997   */\n      0x00\n        /* \"#utility.yul\":21031:21033   */\n      0x20\n        /* \"#utility.yul\":21020:21029   */\n      dup3\n        /* \"#utility.yul\":21016:21034   */\n      add\n        /* \"#utility.yul\":21008:21034   */\n      swap1\n      pop\n        /* \"#utility.yul\":21080:21089   */\n      dup2\n        /* \"#utility.yul\":21074:21078   */\n      dup2\n        /* \"#utility.yul\":21070:21090   */\n      sub\n        /* \"#utility.yul\":21066:21067   */\n      0x00\n        /* \"#utility.yul\":21055:21064   */\n      dup4\n        /* \"#utility.yul\":21051:21068   */\n      add\n        /* \"#utility.yul\":21044:21091   */\n      mstore\n        /* \"#utility.yul\":21108:21239   */\n      tag_531\n        /* \"#utility.yul\":21234:21238   */\n      dup2\n        /* \"#utility.yul\":21108:21239   */\n      tag_459\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":21100:21239   */\n      swap1\n      pop\n        /* \"#utility.yul\":20827:21246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21252:21671   */\n    tag_206:\n        /* \"#utility.yul\":21418:21422   */\n      0x00\n        /* \"#utility.yul\":21456:21458   */\n      0x20\n        /* \"#utility.yul\":21445:21454   */\n      dup3\n        /* \"#utility.yul\":21441:21459   */\n      add\n        /* \"#utility.yul\":21433:21459   */\n      swap1\n      pop\n        /* \"#utility.yul\":21505:21514   */\n      dup2\n        /* \"#utility.yul\":21499:21503   */\n      dup2\n        /* \"#utility.yul\":21495:21515   */\n      sub\n        /* \"#utility.yul\":21491:21492   */\n      0x00\n        /* \"#utility.yul\":21480:21489   */\n      dup4\n        /* \"#utility.yul\":21476:21493   */\n      add\n        /* \"#utility.yul\":21469:21516   */\n      mstore\n        /* \"#utility.yul\":21533:21664   */\n      tag_533\n        /* \"#utility.yul\":21659:21663   */\n      dup2\n        /* \"#utility.yul\":21533:21664   */\n      tag_464\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":21525:21664   */\n      swap1\n      pop\n        /* \"#utility.yul\":21252:21671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21677:22096   */\n    tag_84:\n        /* \"#utility.yul\":21843:21847   */\n      0x00\n        /* \"#utility.yul\":21881:21883   */\n      0x20\n        /* \"#utility.yul\":21870:21879   */\n      dup3\n        /* \"#utility.yul\":21866:21884   */\n      add\n        /* \"#utility.yul\":21858:21884   */\n      swap1\n      pop\n        /* \"#utility.yul\":21930:21939   */\n      dup2\n        /* \"#utility.yul\":21924:21928   */\n      dup2\n        /* \"#utility.yul\":21920:21940   */\n      sub\n        /* \"#utility.yul\":21916:21917   */\n      0x00\n        /* \"#utility.yul\":21905:21914   */\n      dup4\n        /* \"#utility.yul\":21901:21918   */\n      add\n        /* \"#utility.yul\":21894:21941   */\n      mstore\n        /* \"#utility.yul\":21958:22089   */\n      tag_535\n        /* \"#utility.yul\":22084:22088   */\n      dup2\n        /* \"#utility.yul\":21958:22089   */\n      tag_469\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":21950:22089   */\n      swap1\n      pop\n        /* \"#utility.yul\":21677:22096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22102:22521   */\n    tag_165:\n        /* \"#utility.yul\":22268:22272   */\n      0x00\n        /* \"#utility.yul\":22306:22308   */\n      0x20\n        /* \"#utility.yul\":22295:22304   */\n      dup3\n        /* \"#utility.yul\":22291:22309   */\n      add\n        /* \"#utility.yul\":22283:22309   */\n      swap1\n      pop\n        /* \"#utility.yul\":22355:22364   */\n      dup2\n        /* \"#utility.yul\":22349:22353   */\n      dup2\n        /* \"#utility.yul\":22345:22365   */\n      sub\n        /* \"#utility.yul\":22341:22342   */\n      0x00\n        /* \"#utility.yul\":22330:22339   */\n      dup4\n        /* \"#utility.yul\":22326:22343   */\n      add\n        /* \"#utility.yul\":22319:22366   */\n      mstore\n        /* \"#utility.yul\":22383:22514   */\n      tag_537\n        /* \"#utility.yul\":22509:22513   */\n      dup2\n        /* \"#utility.yul\":22383:22514   */\n      tag_474\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":22375:22514   */\n      swap1\n      pop\n        /* \"#utility.yul\":22102:22521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22527:22946   */\n    tag_191:\n        /* \"#utility.yul\":22693:22697   */\n      0x00\n        /* \"#utility.yul\":22731:22733   */\n      0x20\n        /* \"#utility.yul\":22720:22729   */\n      dup3\n        /* \"#utility.yul\":22716:22734   */\n      add\n        /* \"#utility.yul\":22708:22734   */\n      swap1\n      pop\n        /* \"#utility.yul\":22780:22789   */\n      dup2\n        /* \"#utility.yul\":22774:22778   */\n      dup2\n        /* \"#utility.yul\":22770:22790   */\n      sub\n        /* \"#utility.yul\":22766:22767   */\n      0x00\n        /* \"#utility.yul\":22755:22764   */\n      dup4\n        /* \"#utility.yul\":22751:22768   */\n      add\n        /* \"#utility.yul\":22744:22791   */\n      mstore\n        /* \"#utility.yul\":22808:22939   */\n      tag_539\n        /* \"#utility.yul\":22934:22938   */\n      dup2\n        /* \"#utility.yul\":22808:22939   */\n      tag_479\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":22800:22939   */\n      swap1\n      pop\n        /* \"#utility.yul\":22527:22946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22952:23174   */\n    tag_23:\n        /* \"#utility.yul\":23045:23049   */\n      0x00\n        /* \"#utility.yul\":23083:23085   */\n      0x20\n        /* \"#utility.yul\":23072:23081   */\n      dup3\n        /* \"#utility.yul\":23068:23086   */\n      add\n        /* \"#utility.yul\":23060:23086   */\n      swap1\n      pop\n        /* \"#utility.yul\":23096:23167   */\n      tag_541\n        /* \"#utility.yul\":23164:23165   */\n      0x00\n        /* \"#utility.yul\":23153:23162   */\n      dup4\n        /* \"#utility.yul\":23149:23166   */\n      add\n        /* \"#utility.yul\":23140:23146   */\n      dup5\n        /* \"#utility.yul\":23096:23167   */\n      tag_487\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":22952:23174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23180:23512   */\n    tag_200:\n        /* \"#utility.yul\":23301:23305   */\n      0x00\n        /* \"#utility.yul\":23339:23341   */\n      0x40\n        /* \"#utility.yul\":23328:23337   */\n      dup3\n        /* \"#utility.yul\":23324:23342   */\n      add\n        /* \"#utility.yul\":23316:23342   */\n      swap1\n      pop\n        /* \"#utility.yul\":23352:23423   */\n      tag_543\n        /* \"#utility.yul\":23420:23421   */\n      0x00\n        /* \"#utility.yul\":23409:23418   */\n      dup4\n        /* \"#utility.yul\":23405:23422   */\n      add\n        /* \"#utility.yul\":23396:23402   */\n      dup6\n        /* \"#utility.yul\":23352:23423   */\n      tag_487\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":23433:23505   */\n      tag_544\n        /* \"#utility.yul\":23501:23503   */\n      0x20\n        /* \"#utility.yul\":23490:23499   */\n      dup4\n        /* \"#utility.yul\":23486:23504   */\n      add\n        /* \"#utility.yul\":23477:23483   */\n      dup5\n        /* \"#utility.yul\":23433:23505   */\n      tag_487\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":23180:23512   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23518:23647   */\n    tag_269:\n        /* \"#utility.yul\":23552:23558   */\n      0x00\n        /* \"#utility.yul\":23579:23599   */\n      tag_546\n      tag_547\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":23569:23599   */\n      swap1\n      pop\n        /* \"#utility.yul\":23608:23641   */\n      tag_548\n        /* \"#utility.yul\":23636:23640   */\n      dup3\n        /* \"#utility.yul\":23628:23634   */\n      dup3\n        /* \"#utility.yul\":23608:23641   */\n      tag_549\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":23518:23647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23653:23728   */\n    tag_547:\n        /* \"#utility.yul\":23686:23692   */\n      0x00\n        /* \"#utility.yul\":23719:23721   */\n      0x40\n        /* \"#utility.yul\":23713:23722   */\n      mload\n        /* \"#utility.yul\":23703:23722   */\n      swap1\n      pop\n        /* \"#utility.yul\":23653:23728   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23734:24045   */\n    tag_268:\n        /* \"#utility.yul\":23811:23815   */\n      0x00\n        /* \"#utility.yul\":23901:23919   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23893:23899   */\n      dup3\n        /* \"#utility.yul\":23890:23920   */\n      gt\n        /* \"#utility.yul\":23887:23943   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":23923:23941   */\n      tag_553\n      tag_87\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":23887:23943   */\n    tag_552:\n        /* \"#utility.yul\":23973:23977   */\n      0x20\n        /* \"#utility.yul\":23965:23971   */\n      dup3\n        /* \"#utility.yul\":23961:23978   */\n      mul\n        /* \"#utility.yul\":23953:23978   */\n      swap1\n      pop\n        /* \"#utility.yul\":24033:24037   */\n      0x20\n        /* \"#utility.yul\":24027:24031   */\n      dup2\n        /* \"#utility.yul\":24023:24038   */\n      add\n        /* \"#utility.yul\":24015:24038   */\n      swap1\n      pop\n        /* \"#utility.yul\":23734:24045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24051:24362   */\n    tag_282:\n        /* \"#utility.yul\":24128:24132   */\n      0x00\n        /* \"#utility.yul\":24218:24236   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24210:24216   */\n      dup3\n        /* \"#utility.yul\":24207:24237   */\n      gt\n        /* \"#utility.yul\":24204:24260   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":24240:24258   */\n      tag_556\n      tag_87\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":24204:24260   */\n    tag_555:\n        /* \"#utility.yul\":24290:24294   */\n      0x20\n        /* \"#utility.yul\":24282:24288   */\n      dup3\n        /* \"#utility.yul\":24278:24295   */\n      mul\n        /* \"#utility.yul\":24270:24295   */\n      swap1\n      pop\n        /* \"#utility.yul\":24350:24354   */\n      0x20\n        /* \"#utility.yul\":24344:24348   */\n      dup2\n        /* \"#utility.yul\":24340:24355   */\n      add\n        /* \"#utility.yul\":24332:24355   */\n      swap1\n      pop\n        /* \"#utility.yul\":24051:24362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24368:24500   */\n    tag_396:\n        /* \"#utility.yul\":24435:24439   */\n      0x00\n        /* \"#utility.yul\":24458:24461   */\n      dup2\n        /* \"#utility.yul\":24450:24461   */\n      swap1\n      pop\n        /* \"#utility.yul\":24488:24492   */\n      0x20\n        /* \"#utility.yul\":24483:24486   */\n      dup3\n        /* \"#utility.yul\":24479:24493   */\n      add\n        /* \"#utility.yul\":24471:24493   */\n      swap1\n      pop\n        /* \"#utility.yul\":24368:24500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24506:24620   */\n    tag_392:\n        /* \"#utility.yul\":24573:24579   */\n      0x00\n        /* \"#utility.yul\":24607:24612   */\n      dup2\n        /* \"#utility.yul\":24601:24613   */\n      mload\n        /* \"#utility.yul\":24591:24613   */\n      swap1\n      pop\n        /* \"#utility.yul\":24506:24620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24626:24724   */\n    tag_410:\n        /* \"#utility.yul\":24677:24683   */\n      0x00\n        /* \"#utility.yul\":24711:24716   */\n      dup2\n        /* \"#utility.yul\":24705:24717   */\n      mload\n        /* \"#utility.yul\":24695:24717   */\n      swap1\n      pop\n        /* \"#utility.yul\":24626:24724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24730:24829   */\n    tag_424:\n        /* \"#utility.yul\":24782:24788   */\n      0x00\n        /* \"#utility.yul\":24816:24821   */\n      dup2\n        /* \"#utility.yul\":24810:24822   */\n      mload\n        /* \"#utility.yul\":24800:24822   */\n      swap1\n      pop\n        /* \"#utility.yul\":24730:24829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24835:24948   */\n    tag_402:\n        /* \"#utility.yul\":24905:24909   */\n      0x00\n        /* \"#utility.yul\":24937:24941   */\n      0x20\n        /* \"#utility.yul\":24932:24935   */\n      dup3\n        /* \"#utility.yul\":24928:24942   */\n      add\n        /* \"#utility.yul\":24920:24942   */\n      swap1\n      pop\n        /* \"#utility.yul\":24835:24948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24954:25138   */\n    tag_394:\n        /* \"#utility.yul\":25053:25064   */\n      0x00\n        /* \"#utility.yul\":25087:25093   */\n      dup3\n        /* \"#utility.yul\":25082:25085   */\n      dup3\n        /* \"#utility.yul\":25075:25094   */\n      mstore\n        /* \"#utility.yul\":25127:25131   */\n      0x20\n        /* \"#utility.yul\":25122:25125   */\n      dup3\n        /* \"#utility.yul\":25118:25132   */\n      add\n        /* \"#utility.yul\":25103:25132   */\n      swap1\n      pop\n        /* \"#utility.yul\":24954:25138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25144:25312   */\n    tag_412:\n        /* \"#utility.yul\":25227:25238   */\n      0x00\n        /* \"#utility.yul\":25261:25267   */\n      dup3\n        /* \"#utility.yul\":25256:25259   */\n      dup3\n        /* \"#utility.yul\":25249:25268   */\n      mstore\n        /* \"#utility.yul\":25301:25305   */\n      0x20\n        /* \"#utility.yul\":25296:25299   */\n      dup3\n        /* \"#utility.yul\":25292:25306   */\n      add\n        /* \"#utility.yul\":25277:25306   */\n      swap1\n      pop\n        /* \"#utility.yul\":25144:25312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25318:25487   */\n    tag_426:\n        /* \"#utility.yul\":25402:25413   */\n      0x00\n        /* \"#utility.yul\":25436:25442   */\n      dup3\n        /* \"#utility.yul\":25431:25434   */\n      dup3\n        /* \"#utility.yul\":25424:25443   */\n      mstore\n        /* \"#utility.yul\":25476:25480   */\n      0x20\n        /* \"#utility.yul\":25471:25474   */\n      dup3\n        /* \"#utility.yul\":25467:25481   */\n      add\n        /* \"#utility.yul\":25452:25481   */\n      swap1\n      pop\n        /* \"#utility.yul\":25318:25487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25493:25798   */\n    tag_198:\n        /* \"#utility.yul\":25533:25536   */\n      0x00\n        /* \"#utility.yul\":25552:25572   */\n      tag_566\n        /* \"#utility.yul\":25570:25571   */\n      dup3\n        /* \"#utility.yul\":25552:25572   */\n      tag_486\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":25547:25572   */\n      swap2\n      pop\n        /* \"#utility.yul\":25586:25606   */\n      tag_567\n        /* \"#utility.yul\":25604:25605   */\n      dup4\n        /* \"#utility.yul\":25586:25606   */\n      tag_486\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":25581:25606   */\n      swap3\n      pop\n        /* \"#utility.yul\":25740:25741   */\n      dup3\n        /* \"#utility.yul\":25672:25738   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25668:25742   */\n      sub\n        /* \"#utility.yul\":25665:25666   */\n      dup3\n        /* \"#utility.yul\":25662:25743   */\n      gt\n        /* \"#utility.yul\":25659:25766   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":25746:25764   */\n      tag_569\n      tag_570\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":25659:25766   */\n    tag_568:\n        /* \"#utility.yul\":25790:25791   */\n      dup3\n        /* \"#utility.yul\":25787:25788   */\n      dup3\n        /* \"#utility.yul\":25783:25792   */\n      add\n        /* \"#utility.yul\":25776:25792   */\n      swap1\n      pop\n        /* \"#utility.yul\":25493:25798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25804:25989   */\n    tag_140:\n        /* \"#utility.yul\":25844:25845   */\n      0x00\n        /* \"#utility.yul\":25861:25881   */\n      tag_572\n        /* \"#utility.yul\":25879:25880   */\n      dup3\n        /* \"#utility.yul\":25861:25881   */\n      tag_486\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":25856:25881   */\n      swap2\n      pop\n        /* \"#utility.yul\":25895:25915   */\n      tag_573\n        /* \"#utility.yul\":25913:25914   */\n      dup4\n        /* \"#utility.yul\":25895:25915   */\n      tag_486\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":25890:25915   */\n      swap3\n      pop\n        /* \"#utility.yul\":25934:25935   */\n      dup3\n        /* \"#utility.yul\":25924:25959   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":25939:25957   */\n      tag_575\n      tag_576\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":25924:25959   */\n    tag_574:\n        /* \"#utility.yul\":25981:25982   */\n      dup3\n        /* \"#utility.yul\":25978:25979   */\n      dup3\n        /* \"#utility.yul\":25974:25983   */\n      div\n        /* \"#utility.yul\":25969:25983   */\n      swap1\n      pop\n        /* \"#utility.yul\":25804:25989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25995:26343   */\n    tag_142:\n        /* \"#utility.yul\":26035:26042   */\n      0x00\n        /* \"#utility.yul\":26058:26078   */\n      tag_578\n        /* \"#utility.yul\":26076:26077   */\n      dup3\n        /* \"#utility.yul\":26058:26078   */\n      tag_486\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":26053:26078   */\n      swap2\n      pop\n        /* \"#utility.yul\":26092:26112   */\n      tag_579\n        /* \"#utility.yul\":26110:26111   */\n      dup4\n        /* \"#utility.yul\":26092:26112   */\n      tag_486\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":26087:26112   */\n      swap3\n      pop\n        /* \"#utility.yul\":26280:26281   */\n      dup2\n        /* \"#utility.yul\":26212:26278   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26208:26282   */\n      div\n        /* \"#utility.yul\":26205:26206   */\n      dup4\n        /* \"#utility.yul\":26202:26283   */\n      gt\n        /* \"#utility.yul\":26197:26198   */\n      dup3\n        /* \"#utility.yul\":26190:26199   */\n      iszero\n        /* \"#utility.yul\":26183:26200   */\n      iszero\n        /* \"#utility.yul\":26179:26284   */\n      and\n        /* \"#utility.yul\":26176:26307   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":26287:26305   */\n      tag_581\n      tag_570\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":26176:26307   */\n    tag_580:\n        /* \"#utility.yul\":26335:26336   */\n      dup3\n        /* \"#utility.yul\":26332:26333   */\n      dup3\n        /* \"#utility.yul\":26328:26337   */\n      mul\n        /* \"#utility.yul\":26317:26337   */\n      swap1\n      pop\n        /* \"#utility.yul\":25995:26343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26349:26445   */\n    tag_383:\n        /* \"#utility.yul\":26386:26393   */\n      0x00\n        /* \"#utility.yul\":26415:26439   */\n      tag_583\n        /* \"#utility.yul\":26433:26438   */\n      dup3\n        /* \"#utility.yul\":26415:26439   */\n      tag_584\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":26404:26439   */\n      swap1\n      pop\n        /* \"#utility.yul\":26349:26445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26451:26555   */\n    tag_379:\n        /* \"#utility.yul\":26496:26503   */\n      0x00\n        /* \"#utility.yul\":26525:26549   */\n      tag_586\n        /* \"#utility.yul\":26543:26548   */\n      dup3\n        /* \"#utility.yul\":26525:26549   */\n      tag_584\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":26514:26549   */\n      swap1\n      pop\n        /* \"#utility.yul\":26451:26555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26561:26651   */\n    tag_406:\n        /* \"#utility.yul\":26595:26602   */\n      0x00\n        /* \"#utility.yul\":26638:26643   */\n      dup2\n        /* \"#utility.yul\":26631:26644   */\n      iszero\n        /* \"#utility.yul\":26624:26645   */\n      iszero\n        /* \"#utility.yul\":26613:26645   */\n      swap1\n      pop\n        /* \"#utility.yul\":26561:26651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26657:26806   */\n    tag_588:\n        /* \"#utility.yul\":26693:26700   */\n      0x00\n        /* \"#utility.yul\":26733:26799   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26726:26731   */\n      dup3\n        /* \"#utility.yul\":26722:26800   */\n      and\n        /* \"#utility.yul\":26711:26800   */\n      swap1\n      pop\n        /* \"#utility.yul\":26657:26806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26812:26945   */\n    tag_590:\n        /* \"#utility.yul\":26860:26867   */\n      0x00\n        /* \"#utility.yul\":26889:26894   */\n      dup2\n        /* \"#utility.yul\":26878:26894   */\n      swap1\n      pop\n        /* \"#utility.yul\":26895:26939   */\n      tag_592\n        /* \"#utility.yul\":26933:26938   */\n      dup3\n        /* \"#utility.yul\":26895:26939   */\n      tag_593\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":26812:26945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26951:27077   */\n    tag_584:\n        /* \"#utility.yul\":26988:26995   */\n      0x00\n        /* \"#utility.yul\":27028:27070   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":27021:27026   */\n      dup3\n        /* \"#utility.yul\":27017:27071   */\n      and\n        /* \"#utility.yul\":27006:27071   */\n      swap1\n      pop\n        /* \"#utility.yul\":26951:27077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27083:27160   */\n    tag_486:\n        /* \"#utility.yul\":27120:27127   */\n      0x00\n        /* \"#utility.yul\":27149:27154   */\n      dup2\n        /* \"#utility.yul\":27138:27154   */\n      swap1\n      pop\n        /* \"#utility.yul\":27083:27160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27166:27299   */\n    tag_420:\n        /* \"#utility.yul\":27225:27234   */\n      0x00\n        /* \"#utility.yul\":27258:27293   */\n      tag_597\n        /* \"#utility.yul\":27287:27292   */\n      dup3\n        /* \"#utility.yul\":27258:27293   */\n      tag_590\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":27245:27293   */\n      swap1\n      pop\n        /* \"#utility.yul\":27166:27299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27305:27612   */\n    tag_414:\n        /* \"#utility.yul\":27373:27374   */\n      0x00\n        /* \"#utility.yul\":27383:27496   */\n    tag_599:\n        /* \"#utility.yul\":27397:27403   */\n      dup4\n        /* \"#utility.yul\":27394:27395   */\n      dup2\n        /* \"#utility.yul\":27391:27404   */\n      lt\n        /* \"#utility.yul\":27383:27496   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":27482:27483   */\n      dup1\n        /* \"#utility.yul\":27477:27480   */\n      dup3\n        /* \"#utility.yul\":27473:27484   */\n      add\n        /* \"#utility.yul\":27467:27485   */\n      mload\n        /* \"#utility.yul\":27463:27464   */\n      dup2\n        /* \"#utility.yul\":27458:27461   */\n      dup5\n        /* \"#utility.yul\":27454:27465   */\n      add\n        /* \"#utility.yul\":27447:27486   */\n      mstore\n        /* \"#utility.yul\":27419:27421   */\n      0x20\n        /* \"#utility.yul\":27416:27417   */\n      dup2\n        /* \"#utility.yul\":27412:27422   */\n      add\n        /* \"#utility.yul\":27407:27422   */\n      swap1\n      pop\n        /* \"#utility.yul\":27383:27496   */\n      jump(tag_599)\n    tag_601:\n        /* \"#utility.yul\":27514:27520   */\n      dup4\n        /* \"#utility.yul\":27511:27512   */\n      dup2\n        /* \"#utility.yul\":27508:27521   */\n      gt\n        /* \"#utility.yul\":27505:27606   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":27594:27595   */\n      0x00\n        /* \"#utility.yul\":27585:27591   */\n      dup5\n        /* \"#utility.yul\":27580:27583   */\n      dup5\n        /* \"#utility.yul\":27576:27592   */\n      add\n        /* \"#utility.yul\":27569:27596   */\n      mstore\n        /* \"#utility.yul\":27505:27606   */\n    tag_602:\n        /* \"#utility.yul\":27354:27612   */\n      pop\n        /* \"#utility.yul\":27305:27612   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27618:27938   */\n    tag_128:\n        /* \"#utility.yul\":27662:27668   */\n      0x00\n        /* \"#utility.yul\":27699:27700   */\n      0x02\n        /* \"#utility.yul\":27693:27697   */\n      dup3\n        /* \"#utility.yul\":27689:27701   */\n      div\n        /* \"#utility.yul\":27679:27701   */\n      swap1\n      pop\n        /* \"#utility.yul\":27746:27747   */\n      0x01\n        /* \"#utility.yul\":27740:27744   */\n      dup3\n        /* \"#utility.yul\":27736:27748   */\n      and\n        /* \"#utility.yul\":27767:27785   */\n      dup1\n        /* \"#utility.yul\":27757:27838   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":27823:27827   */\n      0x7f\n        /* \"#utility.yul\":27815:27821   */\n      dup3\n        /* \"#utility.yul\":27811:27828   */\n      and\n        /* \"#utility.yul\":27801:27828   */\n      swap2\n      pop\n        /* \"#utility.yul\":27757:27838   */\n    tag_604:\n        /* \"#utility.yul\":27885:27887   */\n      0x20\n        /* \"#utility.yul\":27877:27883   */\n      dup3\n        /* \"#utility.yul\":27874:27888   */\n      lt\n        /* \"#utility.yul\":27854:27872   */\n      dup2\n        /* \"#utility.yul\":27851:27889   */\n      eq\n        /* \"#utility.yul\":27848:27932   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":27904:27922   */\n      tag_606\n      tag_607\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":27848:27932   */\n    tag_605:\n        /* \"#utility.yul\":27669:27938   */\n      pop\n        /* \"#utility.yul\":27618:27938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27944:28225   */\n    tag_549:\n        /* \"#utility.yul\":28027:28054   */\n      tag_609\n        /* \"#utility.yul\":28049:28053   */\n      dup3\n        /* \"#utility.yul\":28027:28054   */\n      tag_416\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":28019:28025   */\n      dup2\n        /* \"#utility.yul\":28015:28055   */\n      add\n        /* \"#utility.yul\":28157:28163   */\n      dup2\n        /* \"#utility.yul\":28145:28155   */\n      dup2\n        /* \"#utility.yul\":28142:28164   */\n      lt\n        /* \"#utility.yul\":28121:28139   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":28109:28119   */\n      dup3\n        /* \"#utility.yul\":28106:28140   */\n      gt\n        /* \"#utility.yul\":28103:28165   */\n      or\n        /* \"#utility.yul\":28100:28188   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":28168:28186   */\n      tag_611\n      tag_87\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":28100:28188   */\n    tag_610:\n        /* \"#utility.yul\":28208:28218   */\n      dup1\n        /* \"#utility.yul\":28204:28206   */\n      0x40\n        /* \"#utility.yul\":28197:28219   */\n      mstore\n        /* \"#utility.yul\":27987:28225   */\n      pop\n        /* \"#utility.yul\":27944:28225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28231:28464   */\n    tag_101:\n        /* \"#utility.yul\":28270:28273   */\n      0x00\n        /* \"#utility.yul\":28293:28317   */\n      tag_613\n        /* \"#utility.yul\":28311:28316   */\n      dup3\n        /* \"#utility.yul\":28293:28317   */\n      tag_486\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":28284:28317   */\n      swap2\n      pop\n        /* \"#utility.yul\":28339:28405   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28332:28337   */\n      dup3\n        /* \"#utility.yul\":28329:28406   */\n      eq\n        /* \"#utility.yul\":28326:28429   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":28409:28427   */\n      tag_615\n      tag_570\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":28326:28429   */\n    tag_614:\n        /* \"#utility.yul\":28456:28457   */\n      0x01\n        /* \"#utility.yul\":28449:28454   */\n      dup3\n        /* \"#utility.yul\":28445:28458   */\n      add\n        /* \"#utility.yul\":28438:28458   */\n      swap1\n      pop\n        /* \"#utility.yul\":28231:28464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28470:28570   */\n    tag_388:\n        /* \"#utility.yul\":28509:28516   */\n      0x00\n        /* \"#utility.yul\":28538:28564   */\n      tag_617\n        /* \"#utility.yul\":28558:28563   */\n      dup3\n        /* \"#utility.yul\":28538:28564   */\n      tag_618\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":28527:28564   */\n      swap1\n      pop\n        /* \"#utility.yul\":28470:28570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28576:28670   */\n    tag_618:\n        /* \"#utility.yul\":28615:28622   */\n      0x00\n        /* \"#utility.yul\":28644:28664   */\n      tag_620\n        /* \"#utility.yul\":28658:28663   */\n      dup3\n        /* \"#utility.yul\":28644:28664   */\n      tag_621\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":28633:28664   */\n      swap1\n      pop\n        /* \"#utility.yul\":28576:28670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28676:28755   */\n    tag_494:\n        /* \"#utility.yul\":28715:28722   */\n      0x00\n        /* \"#utility.yul\":28744:28749   */\n      dup2\n        /* \"#utility.yul\":28733:28749   */\n      swap1\n      pop\n        /* \"#utility.yul\":28676:28755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28761:28937   */\n    tag_186:\n        /* \"#utility.yul\":28793:28794   */\n      0x00\n        /* \"#utility.yul\":28810:28830   */\n      tag_624\n        /* \"#utility.yul\":28828:28829   */\n      dup3\n        /* \"#utility.yul\":28810:28830   */\n      tag_486\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":28805:28830   */\n      swap2\n      pop\n        /* \"#utility.yul\":28844:28864   */\n      tag_625\n        /* \"#utility.yul\":28862:28863   */\n      dup4\n        /* \"#utility.yul\":28844:28864   */\n      tag_486\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":28839:28864   */\n      swap3\n      pop\n        /* \"#utility.yul\":28883:28884   */\n      dup3\n        /* \"#utility.yul\":28873:28908   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":28888:28906   */\n      tag_627\n      tag_576\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":28873:28908   */\n    tag_626:\n        /* \"#utility.yul\":28929:28930   */\n      dup3\n        /* \"#utility.yul\":28926:28927   */\n      dup3\n        /* \"#utility.yul\":28922:28931   */\n      mod\n        /* \"#utility.yul\":28917:28931   */\n      swap1\n      pop\n        /* \"#utility.yul\":28761:28937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28943:29123   */\n    tag_570:\n        /* \"#utility.yul\":28991:29068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28988:28989   */\n      0x00\n        /* \"#utility.yul\":28981:29069   */\n      mstore\n        /* \"#utility.yul\":29088:29092   */\n      0x11\n        /* \"#utility.yul\":29085:29086   */\n      0x04\n        /* \"#utility.yul\":29078:29093   */\n      mstore\n        /* \"#utility.yul\":29112:29116   */\n      0x24\n        /* \"#utility.yul\":29109:29110   */\n      0x00\n        /* \"#utility.yul\":29102:29117   */\n      revert\n        /* \"#utility.yul\":29129:29309   */\n    tag_576:\n        /* \"#utility.yul\":29177:29254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29174:29175   */\n      0x00\n        /* \"#utility.yul\":29167:29255   */\n      mstore\n        /* \"#utility.yul\":29274:29278   */\n      0x12\n        /* \"#utility.yul\":29271:29272   */\n      0x04\n        /* \"#utility.yul\":29264:29279   */\n      mstore\n        /* \"#utility.yul\":29298:29302   */\n      0x24\n        /* \"#utility.yul\":29295:29296   */\n      0x00\n        /* \"#utility.yul\":29288:29303   */\n      revert\n        /* \"#utility.yul\":29315:29495   */\n    tag_630:\n        /* \"#utility.yul\":29363:29440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29360:29361   */\n      0x00\n        /* \"#utility.yul\":29353:29441   */\n      mstore\n        /* \"#utility.yul\":29460:29464   */\n      0x21\n        /* \"#utility.yul\":29457:29458   */\n      0x04\n        /* \"#utility.yul\":29450:29465   */\n      mstore\n        /* \"#utility.yul\":29484:29488   */\n      0x24\n        /* \"#utility.yul\":29481:29482   */\n      0x00\n        /* \"#utility.yul\":29474:29489   */\n      revert\n        /* \"#utility.yul\":29501:29681   */\n    tag_607:\n        /* \"#utility.yul\":29549:29626   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29546:29547   */\n      0x00\n        /* \"#utility.yul\":29539:29627   */\n      mstore\n        /* \"#utility.yul\":29646:29650   */\n      0x22\n        /* \"#utility.yul\":29643:29644   */\n      0x04\n        /* \"#utility.yul\":29636:29651   */\n      mstore\n        /* \"#utility.yul\":29670:29674   */\n      0x24\n        /* \"#utility.yul\":29667:29668   */\n      0x00\n        /* \"#utility.yul\":29660:29675   */\n      revert\n        /* \"#utility.yul\":29687:29867   */\n    tag_95:\n        /* \"#utility.yul\":29735:29812   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29732:29733   */\n      0x00\n        /* \"#utility.yul\":29725:29813   */\n      mstore\n        /* \"#utility.yul\":29832:29836   */\n      0x32\n        /* \"#utility.yul\":29829:29830   */\n      0x04\n        /* \"#utility.yul\":29822:29837   */\n      mstore\n        /* \"#utility.yul\":29856:29860   */\n      0x24\n        /* \"#utility.yul\":29853:29854   */\n      0x00\n        /* \"#utility.yul\":29846:29861   */\n      revert\n        /* \"#utility.yul\":29873:30053   */\n    tag_87:\n        /* \"#utility.yul\":29921:29998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29918:29919   */\n      0x00\n        /* \"#utility.yul\":29911:29999   */\n      mstore\n        /* \"#utility.yul\":30018:30022   */\n      0x41\n        /* \"#utility.yul\":30015:30016   */\n      0x04\n        /* \"#utility.yul\":30008:30023   */\n      mstore\n        /* \"#utility.yul\":30042:30046   */\n      0x24\n        /* \"#utility.yul\":30039:30040   */\n      0x00\n        /* \"#utility.yul\":30032:30047   */\n      revert\n        /* \"#utility.yul\":30059:30242   */\n    tag_240:\n        /* \"#utility.yul\":30094:30097   */\n      0x00\n        /* \"#utility.yul\":30132:30133   */\n      0x03\n        /* \"#utility.yul\":30114:30130   */\n      returndatasize\n        /* \"#utility.yul\":30111:30134   */\n      gt\n        /* \"#utility.yul\":30108:30236   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":30170:30171   */\n      0x04\n        /* \"#utility.yul\":30167:30168   */\n      0x00\n        /* \"#utility.yul\":30164:30165   */\n      dup1\n        /* \"#utility.yul\":30149:30172   */\n      returndatacopy\n        /* \"#utility.yul\":30192:30226   */\n      tag_637\n        /* \"#utility.yul\":30223:30224   */\n      0x00\n        /* \"#utility.yul\":30217:30225   */\n      mload\n        /* \"#utility.yul\":30192:30226   */\n      tag_638\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":30185:30226   */\n      swap1\n      pop\n        /* \"#utility.yul\":30108:30236   */\n    tag_636:\n        /* \"#utility.yul\":30059:30242   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30248:30365   */\n    tag_297:\n        /* \"#utility.yul\":30357:30358   */\n      0x00\n        /* \"#utility.yul\":30354:30355   */\n      dup1\n        /* \"#utility.yul\":30347:30359   */\n      revert\n        /* \"#utility.yul\":30371:30488   */\n    tag_272:\n        /* \"#utility.yul\":30480:30481   */\n      0x00\n        /* \"#utility.yul\":30477:30478   */\n      dup1\n        /* \"#utility.yul\":30470:30482   */\n      revert\n        /* \"#utility.yul\":30494:30611   */\n    tag_330:\n        /* \"#utility.yul\":30603:30604   */\n      0x00\n        /* \"#utility.yul\":30600:30601   */\n      dup1\n        /* \"#utility.yul\":30593:30605   */\n      revert\n        /* \"#utility.yul\":30617:30734   */\n    tag_321:\n        /* \"#utility.yul\":30726:30727   */\n      0x00\n        /* \"#utility.yul\":30723:30724   */\n      dup1\n        /* \"#utility.yul\":30716:30728   */\n      revert\n        /* \"#utility.yul\":30740:30842   */\n    tag_416:\n        /* \"#utility.yul\":30781:30787   */\n      0x00\n        /* \"#utility.yul\":30832:30834   */\n      0x1f\n        /* \"#utility.yul\":30828:30835   */\n      not\n        /* \"#utility.yul\":30823:30825   */\n      0x1f\n        /* \"#utility.yul\":30816:30821   */\n      dup4\n        /* \"#utility.yul\":30812:30826   */\n      add\n        /* \"#utility.yul\":30808:30836   */\n      and\n        /* \"#utility.yul\":30798:30836   */\n      swap1\n      pop\n        /* \"#utility.yul\":30740:30842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30848:30942   */\n    tag_621:\n        /* \"#utility.yul\":30881:30889   */\n      0x00\n        /* \"#utility.yul\":30929:30934   */\n      dup2\n        /* \"#utility.yul\":30925:30927   */\n      0x60\n        /* \"#utility.yul\":30921:30935   */\n      shl\n        /* \"#utility.yul\":30900:30935   */\n      swap1\n      pop\n        /* \"#utility.yul\":30848:30942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30948:31054   */\n    tag_638:\n        /* \"#utility.yul\":30992:31000   */\n      0x00\n        /* \"#utility.yul\":31041:31046   */\n      dup2\n        /* \"#utility.yul\":31036:31039   */\n      0xe0\n        /* \"#utility.yul\":31032:31047   */\n      shr\n        /* \"#utility.yul\":31011:31047   */\n      swap1\n      pop\n        /* \"#utility.yul\":30948:31054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31060:31299   */\n    tag_433:\n        /* \"#utility.yul\":31200:31234   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":31196:31197   */\n      0x00\n        /* \"#utility.yul\":31188:31194   */\n      dup3\n        /* \"#utility.yul\":31184:31198   */\n      add\n        /* \"#utility.yul\":31177:31235   */\n      mstore\n        /* \"#utility.yul\":31269:31291   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":31264:31266   */\n      0x20\n        /* \"#utility.yul\":31256:31262   */\n      dup3\n        /* \"#utility.yul\":31252:31267   */\n      add\n        /* \"#utility.yul\":31245:31292   */\n      mstore\n        /* \"#utility.yul\":31060:31299   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31305:31532   */\n    tag_438:\n        /* \"#utility.yul\":31445:31479   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":31441:31442   */\n      0x00\n        /* \"#utility.yul\":31433:31439   */\n      dup3\n        /* \"#utility.yul\":31429:31443   */\n      add\n        /* \"#utility.yul\":31422:31480   */\n      mstore\n        /* \"#utility.yul\":31514:31524   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31509:31511   */\n      0x20\n        /* \"#utility.yul\":31501:31507   */\n      dup3\n        /* \"#utility.yul\":31497:31512   */\n      add\n        /* \"#utility.yul\":31490:31525   */\n      mstore\n        /* \"#utility.yul\":31305:31532   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31538:31768   */\n    tag_443:\n        /* \"#utility.yul\":31678:31712   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":31674:31675   */\n      0x00\n        /* \"#utility.yul\":31666:31672   */\n      dup3\n        /* \"#utility.yul\":31662:31676   */\n      add\n        /* \"#utility.yul\":31655:31713   */\n      mstore\n        /* \"#utility.yul\":31747:31760   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31742:31744   */\n      0x20\n        /* \"#utility.yul\":31734:31740   */\n      dup3\n        /* \"#utility.yul\":31730:31745   */\n      add\n        /* \"#utility.yul\":31723:31761   */\n      mstore\n        /* \"#utility.yul\":31538:31768   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31774:31997   */\n    tag_448:\n        /* \"#utility.yul\":31914:31948   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":31910:31911   */\n      0x00\n        /* \"#utility.yul\":31902:31908   */\n      dup3\n        /* \"#utility.yul\":31898:31912   */\n      add\n        /* \"#utility.yul\":31891:31949   */\n      mstore\n        /* \"#utility.yul\":31983:31989   */\n      0x616e636500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31978:31980   */\n      0x20\n        /* \"#utility.yul\":31970:31976   */\n      dup3\n        /* \"#utility.yul\":31966:31981   */\n      add\n        /* \"#utility.yul\":31959:31990   */\n      mstore\n        /* \"#utility.yul\":31774:31997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32003:32234   */\n    tag_453:\n        /* \"#utility.yul\":32143:32177   */\n      0x4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72\n        /* \"#utility.yul\":32139:32140   */\n      0x00\n        /* \"#utility.yul\":32131:32137   */\n      dup3\n        /* \"#utility.yul\":32127:32141   */\n      add\n        /* \"#utility.yul\":32120:32178   */\n      mstore\n        /* \"#utility.yul\":32212:32226   */\n      0x20696e20446563696d616c730000000000000000000000000000000000000000\n        /* \"#utility.yul\":32207:32209   */\n      0x20\n        /* \"#utility.yul\":32199:32205   */\n      dup3\n        /* \"#utility.yul\":32195:32210   */\n      add\n        /* \"#utility.yul\":32188:32227   */\n      mstore\n        /* \"#utility.yul\":32003:32234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32240:32468   */\n    tag_458:\n        /* \"#utility.yul\":32380:32414   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":32376:32377   */\n      0x00\n        /* \"#utility.yul\":32368:32374   */\n      dup3\n        /* \"#utility.yul\":32364:32378   */\n      add\n        /* \"#utility.yul\":32357:32415   */\n      mstore\n        /* \"#utility.yul\":32449:32460   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32444:32446   */\n      0x20\n        /* \"#utility.yul\":32436:32442   */\n      dup3\n        /* \"#utility.yul\":32432:32447   */\n      add\n        /* \"#utility.yul\":32425:32461   */\n      mstore\n        /* \"#utility.yul\":32240:32468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32474:32696   */\n    tag_463:\n        /* \"#utility.yul\":32614:32648   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":32610:32611   */\n      0x00\n        /* \"#utility.yul\":32602:32608   */\n      dup3\n        /* \"#utility.yul\":32598:32612   */\n      add\n        /* \"#utility.yul\":32591:32649   */\n      mstore\n        /* \"#utility.yul\":32683:32688   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32678:32680   */\n      0x20\n        /* \"#utility.yul\":32670:32676   */\n      dup3\n        /* \"#utility.yul\":32666:32681   */\n      add\n        /* \"#utility.yul\":32659:32689   */\n      mstore\n        /* \"#utility.yul\":32474:32696   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32702:32930   */\n    tag_468:\n        /* \"#utility.yul\":32842:32876   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":32838:32839   */\n      0x00\n        /* \"#utility.yul\":32830:32836   */\n      dup3\n        /* \"#utility.yul\":32826:32840   */\n      add\n        /* \"#utility.yul\":32819:32877   */\n      mstore\n        /* \"#utility.yul\":32911:32922   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32906:32908   */\n      0x20\n        /* \"#utility.yul\":32898:32904   */\n      dup3\n        /* \"#utility.yul\":32894:32909   */\n      add\n        /* \"#utility.yul\":32887:32923   */\n      mstore\n        /* \"#utility.yul\":32702:32930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32936:33164   */\n    tag_473:\n        /* \"#utility.yul\":33076:33110   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":33072:33073   */\n      0x00\n        /* \"#utility.yul\":33064:33070   */\n      dup3\n        /* \"#utility.yul\":33060:33074   */\n      add\n        /* \"#utility.yul\":33053:33111   */\n      mstore\n        /* \"#utility.yul\":33145:33156   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33140:33142   */\n      0x20\n        /* \"#utility.yul\":33132:33138   */\n      dup3\n        /* \"#utility.yul\":33128:33143   */\n      add\n        /* \"#utility.yul\":33121:33157   */\n      mstore\n        /* \"#utility.yul\":32936:33164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33170:33397   */\n    tag_478:\n        /* \"#utility.yul\":33310:33344   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":33306:33307   */\n      0x00\n        /* \"#utility.yul\":33298:33304   */\n      dup3\n        /* \"#utility.yul\":33294:33308   */\n      add\n        /* \"#utility.yul\":33287:33345   */\n      mstore\n        /* \"#utility.yul\":33379:33389   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33374:33376   */\n      0x20\n        /* \"#utility.yul\":33366:33372   */\n      dup3\n        /* \"#utility.yul\":33362:33377   */\n      add\n        /* \"#utility.yul\":33355:33390   */\n      mstore\n        /* \"#utility.yul\":33170:33397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33403:33623   */\n    tag_483:\n        /* \"#utility.yul\":33543:33577   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":33539:33540   */\n      0x00\n        /* \"#utility.yul\":33531:33537   */\n      dup3\n        /* \"#utility.yul\":33527:33541   */\n      add\n        /* \"#utility.yul\":33520:33578   */\n      mstore\n        /* \"#utility.yul\":33612:33615   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33607:33609   */\n      0x20\n        /* \"#utility.yul\":33599:33605   */\n      dup3\n        /* \"#utility.yul\":33595:33610   */\n      add\n        /* \"#utility.yul\":33588:33616   */\n      mstore\n        /* \"#utility.yul\":33403:33623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33629:34340   */\n    tag_242:\n        /* \"#utility.yul\":33668:33671   */\n      0x00\n        /* \"#utility.yul\":33706:33710   */\n      0x44\n        /* \"#utility.yul\":33688:33704   */\n      returndatasize\n        /* \"#utility.yul\":33685:33711   */\n      lt\n        /* \"#utility.yul\":33682:33721   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":33714:33719   */\n      jump(tag_657)\n        /* \"#utility.yul\":33682:33721   */\n    tag_658:\n        /* \"#utility.yul\":33743:33763   */\n      tag_659\n      tag_547\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":33818:33819   */\n      0x04\n        /* \"#utility.yul\":33800:33816   */\n      returndatasize\n        /* \"#utility.yul\":33796:33820   */\n      sub\n        /* \"#utility.yul\":33793:33794   */\n      0x04\n        /* \"#utility.yul\":33787:33791   */\n      dup3\n        /* \"#utility.yul\":33772:33821   */\n      returndatacopy\n        /* \"#utility.yul\":33851:33855   */\n      dup1\n        /* \"#utility.yul\":33845:33856   */\n      mload\n        /* \"#utility.yul\":33950:33966   */\n      returndatasize\n        /* \"#utility.yul\":33943:33947   */\n      0x24\n        /* \"#utility.yul\":33935:33941   */\n      dup3\n        /* \"#utility.yul\":33931:33948   */\n      add\n        /* \"#utility.yul\":33928:33967   */\n      gt\n        /* \"#utility.yul\":33895:33913   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":33887:33893   */\n      dup3\n        /* \"#utility.yul\":33884:33914   */\n      gt\n        /* \"#utility.yul\":33868:33981   */\n      or\n        /* \"#utility.yul\":33865:34011   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":33996:34001   */\n      pop\n      pop\n      jump(tag_657)\n        /* \"#utility.yul\":33865:34011   */\n    tag_660:\n        /* \"#utility.yul\":34042:34048   */\n      dup1\n        /* \"#utility.yul\":34036:34040   */\n      dup3\n        /* \"#utility.yul\":34032:34049   */\n      add\n        /* \"#utility.yul\":34078:34081   */\n      dup1\n        /* \"#utility.yul\":34072:34082   */\n      mload\n        /* \"#utility.yul\":34105:34123   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34097:34103   */\n      dup2\n        /* \"#utility.yul\":34094:34124   */\n      gt\n        /* \"#utility.yul\":34091:34134   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":34127:34132   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_657)\n        /* \"#utility.yul\":34091:34134   */\n    tag_661:\n        /* \"#utility.yul\":34175:34181   */\n      dup1\n        /* \"#utility.yul\":34168:34172   */\n      0x20\n        /* \"#utility.yul\":34163:34166   */\n      dup4\n        /* \"#utility.yul\":34159:34173   */\n      add\n        /* \"#utility.yul\":34155:34182   */\n      add\n        /* \"#utility.yul\":34234:34235   */\n      0x04\n        /* \"#utility.yul\":34216:34232   */\n      returndatasize\n        /* \"#utility.yul\":34212:34236   */\n      sub\n        /* \"#utility.yul\":34206:34210   */\n      dup6\n        /* \"#utility.yul\":34202:34237   */\n      add\n        /* \"#utility.yul\":34197:34200   */\n      dup2\n        /* \"#utility.yul\":34194:34238   */\n      gt\n        /* \"#utility.yul\":34191:34248   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":34241:34246   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_657)\n        /* \"#utility.yul\":34191:34248   */\n    tag_662:\n        /* \"#utility.yul\":34258:34315   */\n      tag_663\n        /* \"#utility.yul\":34306:34312   */\n      dup3\n        /* \"#utility.yul\":34300:34304   */\n      0x20\n        /* \"#utility.yul\":34296:34313   */\n      add\n        /* \"#utility.yul\":34288:34294   */\n      dup6\n        /* \"#utility.yul\":34284:34314   */\n      add\n        /* \"#utility.yul\":34278:34282   */\n      dup7\n        /* \"#utility.yul\":34258:34315   */\n      tag_549\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":34331:34334   */\n      dup3\n        /* \"#utility.yul\":34324:34334   */\n      swap6\n      pop\n        /* \"#utility.yul\":33672:34340   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":33629:34340   */\n    tag_657:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":34346:34462   */\n    tag_593:\n        /* \"#utility.yul\":34430:34431   */\n      0x04\n        /* \"#utility.yul\":34423:34428   */\n      dup2\n        /* \"#utility.yul\":34420:34432   */\n      lt\n        /* \"#utility.yul\":34410:34456   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":34436:34454   */\n      tag_666\n      tag_630\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":34410:34456   */\n    tag_665:\n        /* \"#utility.yul\":34346:34462   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34468:34590   */\n    tag_292:\n        /* \"#utility.yul\":34541:34565   */\n      tag_668\n        /* \"#utility.yul\":34559:34564   */\n      dup2\n        /* \"#utility.yul\":34541:34565   */\n      tag_383\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":34534:34539   */\n      dup2\n        /* \"#utility.yul\":34531:34566   */\n      eq\n        /* \"#utility.yul\":34521:34584   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":34580:34581   */\n      0x00\n        /* \"#utility.yul\":34577:34578   */\n      dup1\n        /* \"#utility.yul\":34570:34582   */\n      revert\n        /* \"#utility.yul\":34521:34584   */\n    tag_669:\n        /* \"#utility.yul\":34468:34590   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34596:34712   */\n    tag_307:\n        /* \"#utility.yul\":34666:34687   */\n      tag_671\n        /* \"#utility.yul\":34681:34686   */\n      dup2\n        /* \"#utility.yul\":34666:34687   */\n      tag_406\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":34659:34664   */\n      dup2\n        /* \"#utility.yul\":34656:34688   */\n      eq\n        /* \"#utility.yul\":34646:34706   */\n      tag_672\n      jumpi\n        /* \"#utility.yul\":34702:34703   */\n      0x00\n        /* \"#utility.yul\":34699:34700   */\n      dup1\n        /* \"#utility.yul\":34692:34704   */\n      revert\n        /* \"#utility.yul\":34646:34706   */\n    tag_672:\n        /* \"#utility.yul\":34596:34712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34718:34838   */\n    tag_311:\n        /* \"#utility.yul\":34790:34813   */\n      tag_674\n        /* \"#utility.yul\":34807:34812   */\n      dup2\n        /* \"#utility.yul\":34790:34813   */\n      tag_588\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":34783:34788   */\n      dup2\n        /* \"#utility.yul\":34780:34814   */\n      eq\n        /* \"#utility.yul\":34770:34832   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":34828:34829   */\n      0x00\n        /* \"#utility.yul\":34825:34826   */\n      dup1\n        /* \"#utility.yul\":34818:34830   */\n      revert\n        /* \"#utility.yul\":34770:34832   */\n    tag_675:\n        /* \"#utility.yul\":34718:34838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34844:34966   */\n    tag_317:\n        /* \"#utility.yul\":34917:34941   */\n      tag_677\n        /* \"#utility.yul\":34935:34940   */\n      dup2\n        /* \"#utility.yul\":34917:34941   */\n      tag_486\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":34910:34915   */\n      dup2\n        /* \"#utility.yul\":34907:34942   */\n      eq\n        /* \"#utility.yul\":34897:34960   */\n      tag_678\n      jumpi\n        /* \"#utility.yul\":34956:34957   */\n      0x00\n        /* \"#utility.yul\":34953:34954   */\n      dup1\n        /* \"#utility.yul\":34946:34958   */\n      revert\n        /* \"#utility.yul\":34897:34960   */\n    tag_678:\n        /* \"#utility.yul\":34844:34966   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207feecb8d27367b39482b1ab1c745515ab3058cdf6174218e0a38e3763f88f80864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:11"
															},
															"nodeType": "YulIf",
															"src": "262:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:11",
														"type": ""
													}
												],
												"src": "7:421:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:11"
															},
															"nodeType": "YulIf",
															"src": "531:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:11",
														"type": ""
													}
												],
												"src": "448:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:11"
															},
															"nodeType": "YulIf",
															"src": "906:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:11",
														"type": ""
													}
												],
												"src": "809:524:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:11",
														"type": ""
													}
												],
												"src": "1339:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:11",
														"type": ""
													}
												],
												"src": "1474:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:11"
															},
															"nodeType": "YulIf",
															"src": "1693:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:11",
														"type": ""
													}
												],
												"src": "1555:308:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:11",
																"statements": []
															},
															"src": "1947:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:11"
															},
															"nodeType": "YulIf",
															"src": "2069:101:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:11",
														"type": ""
													}
												],
												"src": "1869:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:11"
															},
															"nodeType": "YulIf",
															"src": "2321:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:11"
															},
															"nodeType": "YulIf",
															"src": "2412:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:11",
														"type": ""
													}
												],
												"src": "2182:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:11"
															},
															"nodeType": "YulIf",
															"src": "2664:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:11",
														"type": ""
													}
												],
												"src": "2508:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:11",
														"type": ""
													}
												],
												"src": "3659:102:11"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405180602001604052806000815250600990805190602001906200002b929190620000e5565b506000600a556001600b556001600d60006101000a81548160ff0219169083151502179055503480156200005e57600080fd5b5060405162002dc738038062002dc78339818101604052810190620000849190620002a4565b80600e90805190602001906200009c92919062000176565b5033600d60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000479565b828054620000f3906200038a565b90600052602060002090601f01602090048101928262000117576000855562000163565b82601f106200013257805160ff191683800117855562000163565b8280016001018555821562000163579182015b828111156200016257825182559160200191906001019062000145565b5b50905062000172919062000207565b5090565b82805462000184906200038a565b90600052602060002090601f016020900481019282620001a85760008555620001f4565b82601f10620001c357805160ff1916838001178555620001f4565b82800160010185558215620001f4579182015b82811115620001f3578251825591602001919060010190620001d6565b5b50905062000203919062000207565b5090565b5b808211156200022257600081600090555060010162000208565b5090565b60006200023d62000237846200031e565b620002f5565b9050828152602081018484840111156200025c576200025b62000459565b5b6200026984828562000354565b509392505050565b600082601f83011262000289576200028862000454565b5b81516200029b84826020860162000226565b91505092915050565b600060208284031215620002bd57620002bc62000463565b5b600082015167ffffffffffffffff811115620002de57620002dd6200045e565b5b620002ec8482850162000271565b91505092915050565b60006200030162000314565b90506200030f8282620003c0565b919050565b6000604051905090565b600067ffffffffffffffff8211156200033c576200033b62000425565b5b620003478262000468565b9050602081019050919050565b60005b838110156200037457808201518184015260208101905062000357565b8381111562000384576000848401525b50505050565b60006002820490506001821680620003a357607f821691505b60208210811415620003ba57620003b9620003f6565b5b50919050565b620003cb8262000468565b810181811067ffffffffffffffff82111715620003ed57620003ec62000425565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61293e80620004896000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80637e1eaabf1161008c578063d206b94411610066578063d206b94414610225578063e3306a6f14610255578063e985e9c514610273578063f5298aca146102a3576100ce565b80637e1eaabf146101cd578063a22cb465146101eb578063b4a99a4e14610207576100ce565b8062fdd58e146100d357806301ffc9a7146101035780631309a563146101335780634e1273f41461015157806367c510c9146101815780636b20c454146101b1575b600080fd5b6100ed60048036038101906100e891906117e0565b6102bf565b6040516100fa9190611f26565b60405180910390f35b61011d600480360381019061011891906118eb565b610388565b60405161012a9190611d6e565b60405180910390f35b61013b6103f2565b6040516101489190611d6e565b60405180910390f35b61016b60048036038101906101669190611873565b610405565b6040516101789190611d15565b60405180910390f35b61019b600480360381019061019691906117e0565b61051e565b6040516101a89190611d89565b60405180910390f35b6101cb60048036038101906101c69190611715565b610589565b005b6101d5610626565b6040516101e29190611f26565b60405180910390f35b610205600480360381019061020091906117a0565b6107db565b005b61020f6107f1565b60405161021c9190611ca0565b60405180910390f35b61023f600480360381019061023a9190611945565b610817565b60405161024c9190611f26565b60405180910390f35b61025d610894565b60405161026a9190611d89565b60405180910390f35b61028d600480360381019061028891906116d5565b6108a7565b60405161029a9190611d6e565b60405180910390f35b6102bd60048036038101906102b89190611820565b61093b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790611e06565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600d60009054906101000a900460ff1681565b6060815183511461044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611ec6565b60405180910390fd5b6000835167ffffffffffffffff8111156104685761046761240d565b5b6040519080825280602002602001820160405280156104965781602001602082028036833780820191505090505b50905060005b8451811015610513576104e38582815181106104bb576104ba6123de565b5b60200260200101518583815181106104d6576104d56123de565b5b60200260200101516102bf565b8282815181106104f6576104f56123de565b5b6020026020010181815250508061050c9061227a565b905061049c565b508091505092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160009054906101000a900460ff16905092915050565b6105916109d8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806105d757506105d6836105d16109d8565b6108a7565b5b610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611e66565b60405180910390fd5b6106218383836109e0565b505050565b600080610631610c91565b9050600181141561068d576040518060400160405280600881526020017f506c6174696e756d0000000000000000000000000000000000000000000000008152506009908051906020019061068792919061148d565b50610735565b60028114156106e7576040518060400160405280600481526020017f476f6c6400000000000000000000000000000000000000000000000000000000815250600990805190602001906106e192919061148d565b50610734565b6040518060400160405280600681526020017f53696c76657200000000000000000000000000000000000000000000000000008152506009908051906020019061073292919061148d565b505b5b6107d46107406109d8565b82600b546009805461075190612217565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90612217565b80156107ca5780601f1061079f576101008083540402835291602001916107ca565b820191906000526020600020905b8154815290600101906020018083116107ad57829003601f168201915b5050505050610cf1565b8091505090565b6107ed6107e66109d8565b8383610e87565b5050565b600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081612710808461082991906120ae565b61083391906120df565b14610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a90611e46565b60405180910390fd5b6103e860198361088391906120df565b61088d91906120ae565b9050919050565b600560009054906101000a900460ff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109436109d8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806109895750610988836109836109d8565b6108a7565b5b6109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90611e66565b60405180910390fd5b6109d3838383610ff4565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4790611e86565b60405180910390fd5b8051825114610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611ee6565b60405180910390fd5b6000610a9e6109d8565b9050610abe81856000868660405180602001604052806000815250611211565b60005b8351811015610c0b576000848281518110610adf57610ade6123de565b5b602002602001015190506000848381518110610afe57610afd6123de565b5b60200260200101519050600080600084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690611e26565b60405180910390fd5b81810360008085815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050508080610c039061227a565b915050610ac1565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610c83929190611d37565b60405180910390a450505050565b60008060034233600a54604051602001610cad93929190611c63565b6040516020818303038152906040528051906020012060001c610cd091906122f1565b9050600a6000815480929190610ce59061227a565b91905055508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5890611f06565b60405180910390fd5b6000610d6b6109d8565b9050610d8c81600087610d7d88611219565b610d8688611219565b87611211565b8260008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610deb9190612058565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051610e69929190611f41565b60405180910390a4610e8081600087878787611293565b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ef6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed90611ea6565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fe79190611d6e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90611e86565b60405180910390fd5b600061106e6109d8565b905061109e8185600061108087611219565b61108987611219565b60405180602001604052806000815250611211565b600080600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112c90611e26565b60405180910390fd5b82810360008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051611202929190611f41565b60405180910390a45050505050565b505050505050565b60606000600167ffffffffffffffff8111156112385761123761240d565b5b6040519080825280602002602001820160405280156112665781602001602082028036833780820191505090505b509050828160008151811061127e5761127d6123de565b5b60200260200101818152505080915050919050565b6112b28473ffffffffffffffffffffffffffffffffffffffff1661147a565b15611472578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016112f8959493929190611cbb565b602060405180830381600087803b15801561131257600080fd5b505af192505050801561134357506040513d601f19601f820116820180604052508101906113409190611918565b60015b6113e95761134f61243c565b806308c379a014156113ac5750611364612802565b8061136f57506113ae565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a39190611da4565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e090611dc6565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146790611de6565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b82805461149990612217565b90600052602060002090601f0160209004810192826114bb5760008555611502565b82601f106114d457805160ff1916838001178555611502565b82800160010185558215611502579182015b828111156115015782518255916020019190600101906114e6565b5b50905061150f9190611513565b5090565b5b8082111561152c576000816000905550600101611514565b5090565b600061154361153e84611f8f565b611f6a565b9050808382526020820190508285602086028201111561156657611565612463565b5b60005b85811015611596578161157c8882611610565b845260208401935060208301925050600181019050611569565b5050509392505050565b60006115b36115ae84611fbb565b611f6a565b905080838252602082019050828560208602820111156115d6576115d5612463565b5b60005b8581101561160657816115ec88826116c0565b8452602084019350602083019250506001810190506115d9565b5050509392505050565b60008135905061161f816128ac565b92915050565b600082601f83011261163a5761163961245e565b5b813561164a848260208601611530565b91505092915050565b600082601f8301126116685761166761245e565b5b81356116788482602086016115a0565b91505092915050565b600081359050611690816128c3565b92915050565b6000813590506116a5816128da565b92915050565b6000815190506116ba816128da565b92915050565b6000813590506116cf816128f1565b92915050565b600080604083850312156116ec576116eb61246d565b5b60006116fa85828601611610565b925050602061170b85828601611610565b9150509250929050565b60008060006060848603121561172e5761172d61246d565b5b600061173c86828701611610565b935050602084013567ffffffffffffffff81111561175d5761175c612468565b5b61176986828701611653565b925050604084013567ffffffffffffffff81111561178a57611789612468565b5b61179686828701611653565b9150509250925092565b600080604083850312156117b7576117b661246d565b5b60006117c585828601611610565b92505060206117d685828601611681565b9150509250929050565b600080604083850312156117f7576117f661246d565b5b600061180585828601611610565b9250506020611816858286016116c0565b9150509250929050565b6000806000606084860312156118395761183861246d565b5b600061184786828701611610565b9350506020611858868287016116c0565b9250506040611869868287016116c0565b9150509250925092565b6000806040838503121561188a5761188961246d565b5b600083013567ffffffffffffffff8111156118a8576118a7612468565b5b6118b485828601611625565b925050602083013567ffffffffffffffff8111156118d5576118d4612468565b5b6118e185828601611653565b9150509250929050565b6000602082840312156119015761190061246d565b5b600061190f84828501611696565b91505092915050565b60006020828403121561192e5761192d61246d565b5b600061193c848285016116ab565b91505092915050565b60006020828403121561195b5761195a61246d565b5b6000611969848285016116c0565b91505092915050565b600061197e8383611c2e565b60208301905092915050565b6119938161214b565b82525050565b6119a281612139565b82525050565b6119b96119b482612139565b6122c3565b82525050565b60006119ca82611ff7565b6119d48185612025565b93506119df83611fe7565b8060005b83811015611a105781516119f78882611972565b9750611a0283612018565b9250506001810190506119e3565b5085935050505092915050565b611a268161215d565b82525050565b6000611a3782612002565b611a418185612036565b9350611a518185602086016121e4565b611a5a81612472565b840191505092915050565b611a6e816121d2565b82525050565b6000611a7f8261200d565b611a898185612047565b9350611a998185602086016121e4565b611aa281612472565b840191505092915050565b6000611aba603483612047565b9150611ac58261249d565b604082019050919050565b6000611add602883612047565b9150611ae8826124ec565b604082019050919050565b6000611b00602b83612047565b9150611b0b8261253b565b604082019050919050565b6000611b23602483612047565b9150611b2e8261258a565b604082019050919050565b6000611b46602c83612047565b9150611b51826125d9565b604082019050919050565b6000611b69602983612047565b9150611b7482612628565b604082019050919050565b6000611b8c602383612047565b9150611b9782612677565b604082019050919050565b6000611baf602983612047565b9150611bba826126c6565b604082019050919050565b6000611bd2602983612047565b9150611bdd82612715565b604082019050919050565b6000611bf5602883612047565b9150611c0082612764565b604082019050919050565b6000611c18602183612047565b9150611c23826127b3565b604082019050919050565b611c37816121c8565b82525050565b611c46816121c8565b82525050565b611c5d611c58826121c8565b6122e7565b82525050565b6000611c6f8286611c4c565b602082019150611c7f82856119a8565b601482019150611c8f8284611c4c565b602082019150819050949350505050565b6000602082019050611cb5600083018461198a565b92915050565b600060a082019050611cd06000830188611999565b611cdd6020830187611999565b611cea6040830186611c3d565b611cf76060830185611c3d565b8181036080830152611d098184611a2c565b90509695505050505050565b60006020820190508181036000830152611d2f81846119bf565b905092915050565b60006040820190508181036000830152611d5181856119bf565b90508181036020830152611d6581846119bf565b90509392505050565b6000602082019050611d836000830184611a1d565b92915050565b6000602082019050611d9e6000830184611a65565b92915050565b60006020820190508181036000830152611dbe8184611a74565b905092915050565b60006020820190508181036000830152611ddf81611aad565b9050919050565b60006020820190508181036000830152611dff81611ad0565b9050919050565b60006020820190508181036000830152611e1f81611af3565b9050919050565b60006020820190508181036000830152611e3f81611b16565b9050919050565b60006020820190508181036000830152611e5f81611b39565b9050919050565b60006020820190508181036000830152611e7f81611b5c565b9050919050565b60006020820190508181036000830152611e9f81611b7f565b9050919050565b60006020820190508181036000830152611ebf81611ba2565b9050919050565b60006020820190508181036000830152611edf81611bc5565b9050919050565b60006020820190508181036000830152611eff81611be8565b9050919050565b60006020820190508181036000830152611f1f81611c0b565b9050919050565b6000602082019050611f3b6000830184611c3d565b92915050565b6000604082019050611f566000830185611c3d565b611f636020830184611c3d565b9392505050565b6000611f74611f85565b9050611f808282612249565b919050565b6000604051905090565b600067ffffffffffffffff821115611faa57611fa961240d565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611fd657611fd561240d565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612063826121c8565b915061206e836121c8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120a3576120a2612322565b5b828201905092915050565b60006120b9826121c8565b91506120c4836121c8565b9250826120d4576120d3612351565b5b828204905092915050565b60006120ea826121c8565b91506120f5836121c8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561212e5761212d612322565b5b828202905092915050565b6000612144826121a8565b9050919050565b6000612156826121a8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506121a382612898565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006121dd82612195565b9050919050565b60005b838110156122025780820151818401526020810190506121e7565b83811115612211576000848401525b50505050565b6000600282049050600182168061222f57607f821691505b60208210811415612243576122426123af565b5b50919050565b61225282612472565b810181811067ffffffffffffffff821117156122715761227061240d565b5b80604052505050565b6000612285826121c8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122b8576122b7612322565b5b600182019050919050565b60006122ce826122d5565b9050919050565b60006122e082612483565b9050919050565b6000819050919050565b60006122fc826121c8565b9150612307836121c8565b92508261231757612316612351565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561245b5760046000803e612458600051612490565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d101561281257612895565b61281a611f85565b60043d036004823e80513d602482011167ffffffffffffffff82111715612842575050612895565b808201805167ffffffffffffffff8111156128605750505050612895565b80602083010160043d03850181111561287d575050505050612895565b61288c82602001850186612249565b82955050505050505b90565b600481106128a9576128a8612380565b5b50565b6128b581612139565b81146128c057600080fd5b50565b6128cc8161215d565b81146128d757600080fd5b50565b6128e381612169565b81146128ee57600080fd5b50565b6128fa816121c8565b811461290557600080fd5b5056fea26469706673582212207feecb8d27367b39482b1ab1c745515ab3058cdf6174218e0a38e3763f88f80864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2B SWAP3 SWAP2 SWAP1 PUSH3 0xE5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xB SSTORE PUSH1 0x1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DC7 CODESIZE SUB DUP1 PUSH3 0x2DC7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x2A4 JUMP JUMPDEST DUP1 PUSH1 0xE SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9C SWAP3 SWAP2 SWAP1 PUSH3 0x176 JUMP JUMPDEST POP CALLER PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x479 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xF3 SWAP1 PUSH3 0x38A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x117 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x132 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x163 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x162 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x145 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x172 SWAP2 SWAP1 PUSH3 0x207 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x184 SWAP1 PUSH3 0x38A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1F4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1C3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x203 SWAP2 SWAP1 PUSH3 0x207 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x222 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x208 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x23D PUSH3 0x237 DUP5 PUSH3 0x31E JUMP JUMPDEST PUSH3 0x2F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x25C JUMPI PUSH3 0x25B PUSH3 0x459 JUMP JUMPDEST JUMPDEST PUSH3 0x269 DUP5 DUP3 DUP6 PUSH3 0x354 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x289 JUMPI PUSH3 0x288 PUSH3 0x454 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x29B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2BD JUMPI PUSH3 0x2BC PUSH3 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2DE JUMPI PUSH3 0x2DD PUSH3 0x45E JUMP JUMPDEST JUMPDEST PUSH3 0x2EC DUP5 DUP3 DUP6 ADD PUSH3 0x271 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x301 PUSH3 0x314 JUMP JUMPDEST SWAP1 POP PUSH3 0x30F DUP3 DUP3 PUSH3 0x3C0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x33C JUMPI PUSH3 0x33B PUSH3 0x425 JUMP JUMPDEST JUMPDEST PUSH3 0x347 DUP3 PUSH3 0x468 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x374 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x357 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x384 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3B9 PUSH3 0x3F6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CB DUP3 PUSH3 0x468 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3ED JUMPI PUSH3 0x3EC PUSH3 0x425 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x293E DUP1 PUSH3 0x489 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1EAABF GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD206B944 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD206B944 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xE3306A6F EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2A3 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x7E1EAABF EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x207 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x67C510C9 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1EC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x496 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH2 0x4E3 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D5 PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BF JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x50C SWAP1 PUSH2 0x227A JUMP JUMPDEST SWAP1 POP PUSH2 0x49C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5D7 JUMPI POP PUSH2 0x5D6 DUP4 PUSH2 0x5D1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x621 DUP4 DUP4 DUP4 PUSH2 0x9E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x631 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C6174696E756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x687 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F6C6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6E1 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST POP PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696C7665720000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x732 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0x7D4 PUSH2 0x740 PUSH2 0x9D8 JUMP JUMPDEST DUP3 PUSH1 0xB SLOAD PUSH1 0x9 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2217 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77D SWAP1 PUSH2 0x2217 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xCF1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x7ED PUSH2 0x7E6 PUSH2 0x9D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST EQ PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x943 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x989 JUMPI POP PUSH2 0x988 DUP4 PUSH2 0x983 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BF SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D3 DUP4 DUP4 DUP4 PUSH2 0xFF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA47 SWAP1 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9E PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xABE DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAFE JUMPI PUSH2 0xAFD PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xC03 SWAP1 PUSH2 0x227A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC83 SWAP3 SWAP2 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 TIMESTAMP CALLER PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCE5 SWAP1 PUSH2 0x227A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD58 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD8C DUP2 PUSH1 0x0 DUP8 PUSH2 0xD7D DUP9 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xD86 DUP9 PUSH2 0x1219 JUMP JUMPDEST DUP8 PUSH2 0x1211 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x2058 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE69 SWAP3 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE80 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1293 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEED SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105B SWAP1 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106E PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x109E DUP2 DUP6 PUSH1 0x0 PUSH2 0x1080 DUP8 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x1089 DUP8 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112C SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1202 SWAP3 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1266 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x127E JUMPI PUSH2 0x127D PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x147A JUMP JUMPDEST ISZERO PUSH2 0x1472 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1343 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13E9 JUMPI PUSH2 0x134F PUSH2 0x243C JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x13AC JUMPI POP PUSH2 0x1364 PUSH2 0x2802 JUMP JUMPDEST DUP1 PUSH2 0x136F JUMPI POP PUSH2 0x13AE JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E0 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1499 SWAP1 PUSH2 0x2217 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x14BB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1502 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x14D4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1502 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1502 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1501 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x14E6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x152C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1514 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 PUSH2 0x153E DUP5 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1566 JUMPI PUSH2 0x1565 PUSH2 0x2463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1596 JUMPI DUP2 PUSH2 0x157C DUP9 DUP3 PUSH2 0x1610 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1569 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B3 PUSH2 0x15AE DUP5 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x2463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1606 JUMPI DUP2 PUSH2 0x15EC DUP9 DUP3 PUSH2 0x16C0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15D9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161F DUP2 PUSH2 0x28AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x245E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x164A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1668 JUMPI PUSH2 0x1667 PUSH2 0x245E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1678 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1690 DUP2 PUSH2 0x28C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A5 DUP2 PUSH2 0x28DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16BA DUP2 PUSH2 0x28DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CF DUP2 PUSH2 0x28F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FA DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x170B DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x173C DUP7 DUP3 DUP8 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175D JUMPI PUSH2 0x175C PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x1769 DUP7 DUP3 DUP8 ADD PUSH2 0x1653 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x1796 DUP7 DUP3 DUP8 ADD PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x17F6 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1805 DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1816 DUP6 DUP3 DUP7 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1839 JUMPI PUSH2 0x1838 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1847 DUP7 DUP3 DUP8 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1858 DUP7 DUP3 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1869 DUP7 DUP3 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x18B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x18E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190F DUP5 DUP3 DUP6 ADD PUSH2 0x1696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193C DUP5 DUP3 DUP6 ADD PUSH2 0x16AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH2 0x195A PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1969 DUP5 DUP3 DUP6 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP4 DUP4 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1993 DUP2 PUSH2 0x214B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP2 PUSH2 0x2139 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19B9 PUSH2 0x19B4 DUP3 PUSH2 0x2139 JUMP JUMPDEST PUSH2 0x22C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CA DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x19D4 DUP2 DUP6 PUSH2 0x2025 JUMP JUMPDEST SWAP4 POP PUSH2 0x19DF DUP4 PUSH2 0x1FE7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A10 JUMPI DUP2 MLOAD PUSH2 0x19F7 DUP9 DUP3 PUSH2 0x1972 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A02 DUP4 PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19E3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A26 DUP2 PUSH2 0x215D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A37 DUP3 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1A41 DUP2 DUP6 PUSH2 0x2036 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A51 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x1A5A DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6E DUP2 PUSH2 0x21D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7F DUP3 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x1A89 DUP2 DUP6 PUSH2 0x2047 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABA PUSH1 0x34 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC5 DUP3 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADD PUSH1 0x28 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE8 DUP3 PUSH2 0x24EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0x2B DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0B DUP3 PUSH2 0x253B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 PUSH1 0x24 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x258A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B46 PUSH1 0x2C DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B51 DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B69 PUSH1 0x29 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B74 DUP3 PUSH2 0x2628 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8C PUSH1 0x23 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B97 DUP3 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF PUSH1 0x29 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBA DUP3 PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD2 PUSH1 0x29 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDD DUP3 PUSH2 0x2715 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF5 PUSH1 0x28 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C00 DUP3 PUSH2 0x2764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C18 PUSH1 0x21 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C23 DUP3 PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C37 DUP2 PUSH2 0x21C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C46 DUP2 PUSH2 0x21C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C5D PUSH2 0x1C58 DUP3 PUSH2 0x21C8 JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6F DUP3 DUP7 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1C7F DUP3 DUP6 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1C8F DUP3 DUP5 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CD0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1CDD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1CEA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1C3D JUMP JUMPDEST PUSH2 0x1CF7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1C3D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D09 DUP2 DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2F DUP2 DUP5 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D51 DUP2 DUP6 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D65 DUP2 DUP5 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DBE DUP2 DUP5 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DFF DUP2 PUSH2 0x1AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1F DUP2 PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3F DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5F DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7F DUP2 PUSH2 0x1B5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9F DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EBF DUP2 PUSH2 0x1BA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDF DUP2 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFF DUP2 PUSH2 0x1BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F1F DUP2 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F56 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C3D JUMP JUMPDEST PUSH2 0x1F63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F74 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F80 DUP3 DUP3 PUSH2 0x2249 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD5 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2063 DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x206E DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20A3 JUMPI PUSH2 0x20A2 PUSH2 0x2322 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C4 DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20D4 JUMPI PUSH2 0x20D3 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EA DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F5 DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x2322 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2144 DUP3 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2156 DUP3 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x21A3 DUP3 PUSH2 0x2898 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DD DUP3 PUSH2 0x2195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2202 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21E7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2211 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x222F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x23AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2252 DUP3 PUSH2 0x2472 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x240D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2285 DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x2322 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CE DUP3 PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E0 DUP3 PUSH2 0x2483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FC DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2307 DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x245B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2458 PUSH1 0x0 MLOAD PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2812 JUMPI PUSH2 0x2895 JUMP JUMPDEST PUSH2 0x281A PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2842 JUMPI POP POP PUSH2 0x2895 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2860 JUMPI POP POP POP POP PUSH2 0x2895 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x287D JUMPI POP POP POP POP POP PUSH2 0x2895 JUMP JUMPDEST PUSH2 0x288C DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x2249 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x28A9 JUMPI PUSH2 0x28A8 PUSH2 0x2380 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x28B5 DUP2 PUSH2 0x2139 JUMP JUMPDEST DUP2 EQ PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28CC DUP2 PUSH2 0x215D JUMP JUMPDEST DUP2 EQ PUSH2 0x28D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28E3 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP2 EQ PUSH2 0x28EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28FA DUP2 PUSH2 0x21C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xEECB8D27367B39482B1AB1C745515AB3058CDF6174218E0A38E3763F88F80864 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "318:1601:2:-:0;;;518:15;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;556:1;540:17;;580:1;563:18;;1074:4;1051:27;;;;;;;;;;;;;;;;;;;;1150:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1200:4;1192:5;:12;;;;;;;;;;;;:::i;:::-;;1230:10;1214:5;;:27;;;;;;;;;;;;;;;;;;1150:98;318:1601;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;318:1601:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CheckNftStatus_1915": {
									"entryPoint": 1310,
									"id": 1915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@CurrentStatus_1599": {
									"entryPoint": 2196,
									"id": 1599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@IsPaused_397": {
									"entryPoint": 1010,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Owner_399": {
									"entryPoint": 2033,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_1338": {
									"entryPoint": 4633,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1182": {
									"entryPoint": 4625,
									"id": 1182,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burnBatch_1131": {
									"entryPoint": 2528,
									"id": 1131,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1020": {
									"entryPoint": 4084,
									"id": 1020,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_deductOnyxNftFee_2049": {
									"entryPoint": 2071,
									"id": 2049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_doSafeTransferAcceptanceCheck_1245": {
									"entryPoint": 4755,
									"id": 1245,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_941": {
									"entryPoint": 3313,
									"id": 941,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": 2520,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1163": {
									"entryPoint": 3719,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_611": {
									"entryPoint": 1029,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_547": {
									"entryPoint": 703,
									"id": 547,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1407": {
									"entryPoint": 1417,
									"id": 1407,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1375": {
									"entryPoint": 2363,
									"id": 1375,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_646": {
									"entryPoint": 2215,
									"id": 646,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 5242,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@randomMint_489": {
									"entryPoint": 1574,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@random_448": {
									"entryPoint": 3217,
									"id": 448,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setApprovalForAll_628": {
									"entryPoint": 2011,
									"id": 628,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1431": {
									"entryPoint": 904,
									"id": 1431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_status_$1596__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8001,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 8523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_status_$1596": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_status_$1596_to_t_uint8": {
									"entryPoint": 8658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 8899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 8935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 9088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 9276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 9531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685": {
									"entryPoint": 9610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1": {
									"entryPoint": 9689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 9768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 9926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 10005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 10084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2": {
									"entryPoint": 10163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_assert_t_enum$_status_$1596": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:34969:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:11",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:11"
															},
															"nodeType": "YulIf",
															"src": "350:143:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:11",
														"type": ""
													}
												],
												"src": "24:722:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:11",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:11"
															},
															"nodeType": "YulIf",
															"src": "1095:143:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:11",
														"type": ""
													}
												],
												"src": "769:722:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1549:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1559:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1568:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1559:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1624:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1597:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1527:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1535:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1543:5:11",
														"type": ""
													}
												],
												"src": "1497:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1736:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1787:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1787:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1787:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1764:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1772:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1760:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1760:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1779:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1756:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:35:11"
															},
															"nodeType": "YulIf",
															"src": "1746:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1877:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1891:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1881:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1920:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2004:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1929:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1920:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1714:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1722:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1730:5:11",
														"type": ""
													}
												],
												"src": "1659:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2178:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2180:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2180:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2180:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2157:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2165:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2153:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2172:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:35:11"
															},
															"nodeType": "YulIf",
															"src": "2139:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2270:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2274:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2313:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2397:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2404:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2322:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2313:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2107:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2115:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2123:5:11",
														"type": ""
													}
												],
												"src": "2052:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2496:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2487:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2549:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2525:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2525:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2525:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2455:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2463:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2471:5:11",
														"type": ""
													}
												],
												"src": "2428:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2618:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2628:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2650:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2637:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2628:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2666:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2666:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2596:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2604:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2612:5:11",
														"type": ""
													}
												],
												"src": "2567:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2772:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2782:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2797:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2791:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2782:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2839:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2813:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2813:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2813:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2750:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2758:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2766:5:11",
														"type": ""
													}
												],
												"src": "2710:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2909:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2919:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2928:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2919:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2984:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2957:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2957:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2957:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2887:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2895:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2903:5:11",
														"type": ""
													}
												],
												"src": "2857:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3085:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3131:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3133:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3106:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3115:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3127:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3098:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:32:11"
															},
															"nodeType": "YulIf",
															"src": "3095:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3224:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3239:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3253:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3243:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3268:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3303:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3314:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3299:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3323:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3278:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3278:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3268:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3351:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3380:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3396:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3431:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3442:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3427:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3427:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3451:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3406:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3396:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3047:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3058:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3070:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3078:6:11",
														"type": ""
													}
												],
												"src": "3002:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3632:889:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3678:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3680:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3680:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3680:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3653:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3662:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3649:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3649:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3645:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3645:32:11"
															},
															"nodeType": "YulIf",
															"src": "3642:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3771:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3786:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3790:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3815:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3850:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3861:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3846:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3846:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3870:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3825:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3825:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3815:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3898:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3913:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3944:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3955:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3940:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3940:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3927:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3917:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4006:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4008:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4008:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4008:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3978:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3986:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3975:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3975:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3972:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4103:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4163:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4174:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4159:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4159:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4183:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4113:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4103:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4211:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4226:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4257:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4268:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4253:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4253:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4240:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4230:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4319:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4321:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4321:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4321:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4291:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4288:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4288:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "4285:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4416:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4476:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4487:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4472:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4472:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4496:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4426:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3586:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3597:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3609:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3617:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3625:6:11",
														"type": ""
													}
												],
												"src": "3482:1039:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4607:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4653:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4655:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4655:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4655:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4628:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4637:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4624:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4624:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4649:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4620:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:32:11"
															},
															"nodeType": "YulIf",
															"src": "4617:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4746:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4761:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4775:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4765:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4790:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4825:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4836:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4821:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4821:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4845:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4800:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4790:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4873:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4918:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4950:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4961:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4946:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4946:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4970:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4928:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4928:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4918:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4569:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4580:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4592:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4600:6:11",
														"type": ""
													}
												],
												"src": "4527:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5084:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5130:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5132:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5132:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5132:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5105:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5114:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5101:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5126:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5097:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:32:11"
															},
															"nodeType": "YulIf",
															"src": "5094:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5223:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5238:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5252:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5242:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5267:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5302:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5313:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5322:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5277:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5267:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5350:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5365:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5369:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5395:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5430:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5441:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5426:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5426:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5450:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5405:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5395:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5046:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5057:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5069:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5077:6:11",
														"type": ""
													}
												],
												"src": "5001:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:519:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:11"
															},
															"nodeType": "YulIf",
															"src": "5591:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5847:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5862:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5866:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5892:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5927:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5938:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5923:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5923:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5947:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5902:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5902:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5892:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5975:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5990:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6004:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5994:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6020:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6055:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6066:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6051:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6051:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6075:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6030:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6030:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6020:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5535:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5546:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5558:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5566:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5574:6:11",
														"type": ""
													}
												],
												"src": "5481:619:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6239:761:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6285:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6287:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6287:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6287:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6260:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6269:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6252:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:32:11"
															},
															"nodeType": "YulIf",
															"src": "6249:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "6378:302:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6393:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6424:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6435:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6420:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6420:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6407:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6407:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6397:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6485:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6487:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6487:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6487:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6457:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6465:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6454:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6454:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "6451:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6582:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6642:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6653:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6638:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6638:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6662:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6592:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6592:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6582:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6690:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6705:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6736:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6747:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6732:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6732:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6719:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6719:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6709:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6798:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6800:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6800:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6800:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6770:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6778:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6767:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6767:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "6764:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6895:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6955:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6966:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6951:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6951:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6975:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6905:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6905:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6895:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6201:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6212:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6224:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6232:6:11",
														"type": ""
													}
												],
												"src": "6106:894:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7071:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7117:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7119:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7119:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7119:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7092:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7101:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7088:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7088:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:32:11"
															},
															"nodeType": "YulIf",
															"src": "7081:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "7210:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7225:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7239:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7229:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7254:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7264:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7264:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7254:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7041:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7052:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7064:6:11",
														"type": ""
													}
												],
												"src": "7006:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7415:273:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7461:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7463:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7463:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7463:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7436:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7445:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7432:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7432:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7457:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7428:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7428:32:11"
															},
															"nodeType": "YulIf",
															"src": "7425:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "7554:127:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7569:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7573:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7598:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7643:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7654:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7639:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7639:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7663:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7608:30:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7608:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7598:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7385:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7396:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7408:6:11",
														"type": ""
													}
												],
												"src": "7339:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7760:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7806:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7808:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7808:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7808:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7781:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7790:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7777:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7777:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7773:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:32:11"
															},
															"nodeType": "YulIf",
															"src": "7770:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "7899:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7914:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7928:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7918:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7943:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7978:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7989:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7974:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7974:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7998:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7953:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7953:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7943:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7730:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7741:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7753:6:11",
														"type": ""
													}
												],
												"src": "7694:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8109:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8153:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8161:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8119:33:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8119:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8119:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8174:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8192:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8197:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8174:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8082:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8090:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8098:10:11",
														"type": ""
													}
												],
												"src": "8029:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8295:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8312:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8343:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "8317:25:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8305:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8305:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8305:45:11"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8283:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8290:3:11",
														"type": ""
													}
												],
												"src": "8214:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8427:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8444:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8467:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8449:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8449:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8437:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8437:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8415:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8422:3:11",
														"type": ""
													}
												],
												"src": "8362:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8569:74:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8586:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8611:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8611:24:11"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8591:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8591:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8579:58:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8557:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8564:3:11",
														"type": ""
													}
												],
												"src": "8486:157:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8803:608:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8813:68:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8875:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8827:47:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8827:54:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8817:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8890:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8971:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8976:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8897:73:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8897:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8890:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8992:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9057:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9007:49:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9007:56:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "8996:7:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9072:21:11",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9086:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9076:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9162:224:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9176:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9203:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9197:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9197:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9180:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9223:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9274:13:11"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9289:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "9230:43:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9230:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9223:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9306:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9369:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9316:52:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9316:60:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9306:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9124:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9127:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9121:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9121:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9135:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9137:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9146:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9149:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9142:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9142:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9137:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9106:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9108:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9117:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9112:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9102:284:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9395:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9402:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9395:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8782:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8789:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8798:3:11",
														"type": ""
													}
												],
												"src": "8679:732:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9476:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9493:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9513:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "9498:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9464:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9471:3:11",
														"type": ""
													}
												],
												"src": "9417:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9622:270:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9632:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9678:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9646:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9636:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9693:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9758:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9700:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9700:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9693:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9805:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9812:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9801:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9819:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9824:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9779:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9779:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9779:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9840:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9851:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9878:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9856:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9856:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9847:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9847:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9840:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9603:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9610:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9618:3:11",
														"type": ""
													}
												],
												"src": "9532:360:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9972:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9989:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10034:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_status_$1596_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "9994:39:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9994:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9982:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9982:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9982:59:11"
														}
													]
												},
												"name": "abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9960:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9967:3:11",
														"type": ""
													}
												],
												"src": "9898:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10145:272:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10155:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10202:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10169:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10169:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10159:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10217:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10283:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10288:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10224:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10224:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10217:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10330:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10337:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10326:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10326:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10344:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10349:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10304:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10304:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10304:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10365:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10376:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10403:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10381:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10381:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10372:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10365:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10126:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10133:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10141:3:11",
														"type": ""
													}
												],
												"src": "10053:364:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10569:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10579:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10645:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10650:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10586:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10586:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10579:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10751:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "10662:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10662:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10662:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10764:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10775:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10780:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10764:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10557:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10565:3:11",
														"type": ""
													}
												],
												"src": "10423:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10941:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10951:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11017:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11022:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10958:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10958:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10951:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11123:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "11034:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11034:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11136:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11147:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11152:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11143:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11136:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10929:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10937:3:11",
														"type": ""
													}
												],
												"src": "10795:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11313:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11323:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11389:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11394:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11330:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11330:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11323:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11495:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "11406:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11406:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11508:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11519:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11515:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11301:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11309:3:11",
														"type": ""
													}
												],
												"src": "11167:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11685:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11695:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11761:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11766:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11702:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11695:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11867:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"nodeType": "YulIdentifier",
																	"src": "11778:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11778:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11880:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11891:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11896:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11887:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11887:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11880:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11673:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11681:3:11",
														"type": ""
													}
												],
												"src": "11539:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12057:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12067:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12133:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12138:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12074:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12074:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12067:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12239:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																	"nodeType": "YulIdentifier",
																	"src": "12150:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12150:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12150:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12252:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12263:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12268:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12259:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12259:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12252:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12045:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12053:3:11",
														"type": ""
													}
												],
												"src": "11911:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12429:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12439:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12505:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12510:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12446:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12439:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12611:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "12522:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12522:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12522:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12624:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12635:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12640:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12631:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12631:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12624:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12417:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12425:3:11",
														"type": ""
													}
												],
												"src": "12283:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12811:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12877:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12882:2:11",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12818:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12818:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12811:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12983:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																	"nodeType": "YulIdentifier",
																	"src": "12894:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12894:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12894:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12996:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13007:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13012:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13003:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13003:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12996:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12789:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12797:3:11",
														"type": ""
													}
												],
												"src": "12655:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13173:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13183:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13249:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13254:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13190:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13190:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13355:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "13266:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13266:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13368:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13379:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13384:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13375:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13368:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13161:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13169:3:11",
														"type": ""
													}
												],
												"src": "13027:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13545:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13555:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13621:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13562:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13562:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13555:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13727:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "13638:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13638:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13740:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13751:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13756:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13747:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13747:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13740:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13533:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13541:3:11",
														"type": ""
													}
												],
												"src": "13399:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13917:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13927:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13993:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13998:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13934:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13934:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13927:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14099:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "14010:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14010:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14010:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14112:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14123:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14128:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14119:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14119:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14112:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13905:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13913:3:11",
														"type": ""
													}
												],
												"src": "13771:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14289:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14299:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14365:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14370:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14306:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14306:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14299:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14471:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																	"nodeType": "YulIdentifier",
																	"src": "14382:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14382:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14382:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14484:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14495:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14500:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14491:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14484:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14277:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14285:3:11",
														"type": ""
													}
												],
												"src": "14143:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14570:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14587:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14610:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14592:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14592:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14580:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14580:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14580:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14558:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14565:3:11",
														"type": ""
													}
												],
												"src": "14515:108:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14694:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14711:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14734:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14716:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14716:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14704:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14704:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14704:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14682:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14689:3:11",
														"type": ""
													}
												],
												"src": "14629:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14836:74:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14853:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14896:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14878:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14878:24:11"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14858:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14858:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14846:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14846:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14846:58:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14824:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14831:3:11",
														"type": ""
													}
												],
												"src": "14753:157:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15088:366:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15161:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15170:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15099:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15099:75:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15099:75:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15183:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15194:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15199:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15190:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15190:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15183:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15274:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15283:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15212:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15212:75:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15212:75:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15296:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15307:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15312:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15303:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15303:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15296:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15387:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15396:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15325:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15325:75:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15325:75:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15409:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15420:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15425:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15416:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15416:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15409:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15438:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15445:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15438:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15051:3:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15057:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15065:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15073:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15084:3:11",
														"type": ""
													}
												],
												"src": "14916:538:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15574:140:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15584:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15596:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15607:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15592:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15592:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15584:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15680:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15693:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15704:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15689:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15689:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15620:59:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15620:87:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15620:87:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15546:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15558:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15569:4:11",
														"type": ""
													}
												],
												"src": "15460:254:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15948:523:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15958:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15970:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15981:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15966:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15966:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15958:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16039:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16052:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16063:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16048:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16048:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15995:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15995:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15995:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16120:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16133:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16144:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16129:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16129:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16076:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16076:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16076:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16202:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16215:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16226:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16211:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16211:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16158:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16158:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16158:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16284:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16297:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16308:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16293:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16293:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16240:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16240:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16240:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16333:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16344:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16329:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16329:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16354:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16360:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16350:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16350:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16322:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16322:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16322:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16380:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16450:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16459:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16388:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16380:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15888:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15900:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15908:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15916:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15924:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15932:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15943:4:11",
														"type": ""
													}
												],
												"src": "15720:751:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16625:225:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16635:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16647:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16658:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16643:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16643:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16635:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16682:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16693:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16678:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16678:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16701:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16707:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16697:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16697:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16671:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16671:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16671:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16727:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16829:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16838:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16735:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16735:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16727:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16597:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16609:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16620:4:11",
														"type": ""
													}
												],
												"src": "16477:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17082:408:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17092:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17104:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17115:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17100:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17100:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17092:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17139:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17150:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17135:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17135:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17158:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17164:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17154:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17154:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17128:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17128:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17128:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17184:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17286:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17295:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17192:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17192:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17184:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17321:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17332:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17317:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17317:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17341:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17347:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17337:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17337:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17310:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17310:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17367:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17469:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17478:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17375:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17375:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17367:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17046:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17058:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17066:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17077:4:11",
														"type": ""
													}
												],
												"src": "16856:634:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17588:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17598:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17610:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17621:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17606:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17606:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17598:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17672:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17685:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17696:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17681:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17681:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17634:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17634:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17634:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17560:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17572:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17583:4:11",
														"type": ""
													}
												],
												"src": "17496:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17819:133:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17829:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17841:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17852:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17837:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17829:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17918:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17931:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17942:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17927:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17927:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17865:52:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17865:80:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17865:80:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_status_$1596__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17791:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17803:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17814:4:11",
														"type": ""
													}
												],
												"src": "17712:240:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18076:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18086:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18098:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18109:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18094:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18094:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18086:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18133:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18144:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18129:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18129:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18152:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18158:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18148:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18148:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18122:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18122:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18178:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18250:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18259:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18186:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18186:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18178:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18048:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18060:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18071:4:11",
														"type": ""
													}
												],
												"src": "17958:313:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18448:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18458:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18470:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18481:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18466:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18466:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18458:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18505:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18516:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18501:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18501:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18524:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18530:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18520:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18520:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18494:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18494:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18494:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18550:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18684:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18558:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18558:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18550:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18428:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18443:4:11",
														"type": ""
													}
												],
												"src": "18277:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18873:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18883:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18895:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18906:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18891:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18891:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18883:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18930:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18941:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18926:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18926:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18949:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18955:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18945:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18945:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18919:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18919:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18919:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18975:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19109:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18983:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18983:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18975:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18853:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18868:4:11",
														"type": ""
													}
												],
												"src": "18702:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19298:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19308:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19320:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19331:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19316:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19316:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19308:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19355:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19366:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19351:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19351:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19374:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19380:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19370:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19370:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19344:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19344:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19344:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19400:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19534:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19408:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19408:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19400:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19278:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19293:4:11",
														"type": ""
													}
												],
												"src": "19127:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19723:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19733:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19745:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19756:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19741:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19741:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19733:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19780:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19791:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19776:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19776:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19799:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19805:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19795:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19795:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19769:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19769:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19769:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19825:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19959:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19833:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19833:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19825:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19703:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19718:4:11",
														"type": ""
													}
												],
												"src": "19552:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20148:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20158:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20170:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20181:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20166:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20166:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20158:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20205:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20216:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20201:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20201:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20224:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20230:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20220:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20220:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20194:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20194:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20194:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20250:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20384:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20258:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20258:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20250:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20128:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20143:4:11",
														"type": ""
													}
												],
												"src": "19977:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20573:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20583:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20595:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20606:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20591:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20591:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20583:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20630:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20641:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20626:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20626:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20649:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20655:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20645:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20645:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20619:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20619:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20619:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20675:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20809:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20683:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20683:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20675:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20553:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20568:4:11",
														"type": ""
													}
												],
												"src": "20402:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20998:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21008:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21020:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21031:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21016:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21016:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21008:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21055:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21066:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21051:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21051:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21074:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21080:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21070:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21070:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21044:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21044:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21044:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21100:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21234:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21108:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21108:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21100:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20978:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20993:4:11",
														"type": ""
													}
												],
												"src": "20827:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21423:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21433:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21445:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21456:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21441:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21441:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21433:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21480:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21491:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21476:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21476:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21499:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21505:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21495:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21495:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21469:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21469:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21469:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21525:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21659:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21533:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21533:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21525:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21403:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21418:4:11",
														"type": ""
													}
												],
												"src": "21252:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21848:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21858:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21870:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21881:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21866:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21866:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21858:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21905:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21916:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21901:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21901:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21924:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21930:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21920:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21920:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21894:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21894:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21894:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21950:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22084:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21958:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21958:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21950:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21828:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21843:4:11",
														"type": ""
													}
												],
												"src": "21677:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22273:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22283:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22295:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22306:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22291:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22291:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22283:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22330:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22341:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22326:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22326:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22349:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22355:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22345:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22345:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22319:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22319:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22319:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22375:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22509:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22383:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22383:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22375:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22253:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22268:4:11",
														"type": ""
													}
												],
												"src": "22102:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22698:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22708:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22720:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22731:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22716:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22716:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22708:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22755:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22766:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22751:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22751:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22774:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22780:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22770:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22770:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22744:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22744:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22744:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22800:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22934:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22808:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22808:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22800:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22678:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22693:4:11",
														"type": ""
													}
												],
												"src": "22527:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23050:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23060:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23072:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23083:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23068:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23068:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23060:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23140:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23153:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23164:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23149:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23096:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23096:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23096:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23022:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23034:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23045:4:11",
														"type": ""
													}
												],
												"src": "22952:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23306:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23316:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23328:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23339:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23324:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23324:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23316:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23396:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23409:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23420:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23405:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23405:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23352:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23352:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23352:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23477:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23490:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23501:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23486:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23486:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23433:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23433:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23433:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23270:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23282:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23290:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23301:4:11",
														"type": ""
													}
												],
												"src": "23180:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23559:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23569:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "23579:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23579:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23569:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "23628:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23636:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "23608:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23608:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23608:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23543:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23552:6:11",
														"type": ""
													}
												],
												"src": "23518:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23693:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23703:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23719:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23713:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23713:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23703:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23686:6:11",
														"type": ""
													}
												],
												"src": "23653:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23816:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23921:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23923:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23923:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23923:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23893:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23901:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23890:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23890:30:11"
															},
															"nodeType": "YulIf",
															"src": "23887:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23953:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23965:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23973:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23961:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23961:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23953:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24015:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24027:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24033:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24023:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24023:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24015:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23800:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23811:4:11",
														"type": ""
													}
												],
												"src": "23734:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24133:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24238:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24240:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24240:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24240:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24210:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24218:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24207:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24207:30:11"
															},
															"nodeType": "YulIf",
															"src": "24204:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24270:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24282:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24290:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24278:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24278:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24270:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24332:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24344:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24350:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24340:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24340:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24332:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24117:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "24128:4:11",
														"type": ""
													}
												],
												"src": "24051:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24440:60:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24450:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "24458:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "24450:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24471:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24483:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24488:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24479:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24479:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "24471:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24427:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "24435:4:11",
														"type": ""
													}
												],
												"src": "24368:132:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24580:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24591:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24607:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24601:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24601:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24591:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24563:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24573:6:11",
														"type": ""
													}
												],
												"src": "24506:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24684:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24695:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24711:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24705:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24705:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24695:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24667:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24677:6:11",
														"type": ""
													}
												],
												"src": "24626:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24789:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24800:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24816:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24810:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24810:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24800:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24772:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24782:6:11",
														"type": ""
													}
												],
												"src": "24730:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24910:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24920:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24932:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24937:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24928:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24928:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "24920:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24897:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "24905:4:11",
														"type": ""
													}
												],
												"src": "24835:113:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25065:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25082:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25087:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25075:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25075:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25075:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25103:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25122:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25127:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25118:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25118:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25103:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25037:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25042:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25053:11:11",
														"type": ""
													}
												],
												"src": "24954:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25239:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25256:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25261:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25249:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25249:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25249:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25277:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25296:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25301:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25292:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25292:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25277:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25211:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25216:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25227:11:11",
														"type": ""
													}
												],
												"src": "25144:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25414:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25431:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25436:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25424:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25424:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25424:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25452:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25471:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25476:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25467:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25467:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25452:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25386:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25391:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25402:11:11",
														"type": ""
													}
												],
												"src": "25318:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25537:261:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25547:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25570:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25552:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25552:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25547:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25581:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25604:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25586:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25586:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25581:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25744:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25746:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25746:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25746:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25665:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25672:66:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25740:1:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25668:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25668:74:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25662:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25662:81:11"
															},
															"nodeType": "YulIf",
															"src": "25659:107:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25776:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25787:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25790:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25783:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25783:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25776:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25524:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25527:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25533:3:11",
														"type": ""
													}
												],
												"src": "25493:305:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25846:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25856:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25879:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25861:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25861:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25856:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25890:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25913:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25895:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25895:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25890:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25937:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25939:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25939:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25939:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25934:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25927:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25927:9:11"
															},
															"nodeType": "YulIf",
															"src": "25924:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25969:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25978:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25981:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "25974:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25974:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25969:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25835:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25838:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25844:1:11",
														"type": ""
													}
												],
												"src": "25804:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26043:300:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26053:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26076:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26058:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26058:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26053:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26087:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26110:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26092:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26092:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26087:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26285:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26287:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26287:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26287:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "26197:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "26190:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26190:9:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26183:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26183:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "26205:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26212:66:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "26280:1:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "26208:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26208:74:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "26202:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26202:81:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26179:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26179:105:11"
															},
															"nodeType": "YulIf",
															"src": "26176:131:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26317:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26332:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26335:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26328:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26328:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "26317:7:11"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26026:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26029:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "26035:7:11",
														"type": ""
													}
												],
												"src": "25995:348:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26394:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26404:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26433:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26415:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26415:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26404:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26376:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26386:7:11",
														"type": ""
													}
												],
												"src": "26349:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26504:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26514:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26543:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26525:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26525:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26514:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26486:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26496:7:11",
														"type": ""
													}
												],
												"src": "26451:104:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26603:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26613:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26638:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26631:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26631:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26624:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26613:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26585:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26595:7:11",
														"type": ""
													}
												],
												"src": "26561:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26701:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26711:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26726:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26733:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26722:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26722:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26711:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26683:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26693:7:11",
														"type": ""
													}
												],
												"src": "26657:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26868:77:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26878:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26889:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26878:7:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26933:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_status_$1596",
																	"nodeType": "YulIdentifier",
																	"src": "26895:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26895:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26895:44:11"
														}
													]
												},
												"name": "cleanup_t_enum$_status_$1596",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26850:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26860:7:11",
														"type": ""
													}
												],
												"src": "26812:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26996:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27006:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27021:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27028:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27017:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27017:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "27006:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26978:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26988:7:11",
														"type": ""
													}
												],
												"src": "26951:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27128:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27138:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "27149:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "27138:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27110:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "27120:7:11",
														"type": ""
													}
												],
												"src": "27083:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27235:64:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27245:48:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27287:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_status_$1596",
																	"nodeType": "YulIdentifier",
																	"src": "27258:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27258:35:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27245:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_status_$1596_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27215:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27225:9:11",
														"type": ""
													}
												],
												"src": "27166:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27354:258:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27364:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "27373:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "27368:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27433:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27458:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27463:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27454:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27454:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27477:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27482:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27473:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27473:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27467:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27467:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27447:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27447:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27447:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27394:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27397:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27391:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27391:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27405:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27407:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27416:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27419:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27412:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27412:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27407:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27387:3:11",
																"statements": []
															},
															"src": "27383:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27530:76:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27580:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "27585:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27576:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27576:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27594:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27569:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27569:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27569:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27511:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27514:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27508:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27508:13:11"
															},
															"nodeType": "YulIf",
															"src": "27505:101:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "27336:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "27341:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27346:6:11",
														"type": ""
													}
												],
												"src": "27305:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27669:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27679:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "27693:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27699:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "27689:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27689:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27679:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27710:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "27740:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27746:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27736:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27736:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "27714:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27787:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27801:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "27815:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27823:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "27811:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27811:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27801:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "27767:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27760:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27760:26:11"
															},
															"nodeType": "YulIf",
															"src": "27757:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27890:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "27904:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27904:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27904:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "27854:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27877:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27885:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "27874:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27874:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "27851:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27851:38:11"
															},
															"nodeType": "YulIf",
															"src": "27848:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "27653:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27662:6:11",
														"type": ""
													}
												],
												"src": "27618:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27987:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27997:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "28019:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "28049:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28027:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28027:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28015:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28015:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "28001:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28166:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "28168:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28168:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28168:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "28109:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28121:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "28106:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28106:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "28145:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28157:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "28142:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28142:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "28103:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28103:62:11"
															},
															"nodeType": "YulIf",
															"src": "28100:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28204:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "28208:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28197:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28197:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28197:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27973:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "27981:4:11",
														"type": ""
													}
												],
												"src": "27944:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28274:190:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28284:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28311:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28293:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28293:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28284:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28407:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28409:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28409:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28409:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28332:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28339:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "28329:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28329:77:11"
															},
															"nodeType": "YulIf",
															"src": "28326:103:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28438:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28449:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28456:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28445:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28445:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "28438:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28260:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "28270:3:11",
														"type": ""
													}
												],
												"src": "28231:233:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28517:53:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28527:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28558:5:11"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "28538:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28538:26:11"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "28527:7:11"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28499:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "28509:7:11",
														"type": ""
													}
												],
												"src": "28470:100:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28623:47:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28633:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28658:5:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "28644:13:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28644:20:11"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "28633:7:11"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28605:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "28615:7:11",
														"type": ""
													}
												],
												"src": "28576:94:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28723:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28733:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "28744:5:11"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "28733:7:11"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28705:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "28715:7:11",
														"type": ""
													}
												],
												"src": "28676:79:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28795:142:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28805:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28828:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28810:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28810:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28805:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28839:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28862:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28844:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28844:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28839:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28886:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "28888:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28888:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28888:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28883:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28876:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28876:9:11"
															},
															"nodeType": "YulIf",
															"src": "28873:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28917:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28926:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28929:1:11"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "28922:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28922:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "28917:1:11"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28784:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28787:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "28793:1:11",
														"type": ""
													}
												],
												"src": "28761:176:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28971:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28988:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28991:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28981:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28981:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28981:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29085:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29088:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29078:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29078:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29078:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29109:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29112:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29102:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29102:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29102:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "28943:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29157:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29174:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29177:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29167:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29167:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29167:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29271:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29274:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29264:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29264:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29295:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29298:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29288:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29288:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29288:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "29129:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29343:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29360:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29363:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29353:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29353:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29353:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29457:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29460:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29450:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29450:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29450:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29481:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29484:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29474:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29474:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29474:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "29315:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29529:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29546:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29549:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29539:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29539:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29539:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29643:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29646:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29636:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29636:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29636:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29667:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29670:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29660:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29660:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29660:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "29501:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29715:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29732:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29735:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29725:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29725:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29725:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29829:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29832:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29822:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29822:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29822:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29853:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29856:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29846:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29846:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29846:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "29687:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29901:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29918:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29921:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29911:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29911:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29911:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30015:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30018:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30008:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30008:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30008:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30039:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30042:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30032:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30032:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30032:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "29873:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30098:144:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30135:101:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30164:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30167:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30170:1:11",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "30149:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30149:23:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30149:23:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "30185:41:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30223:1:11",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "30217:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30217:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "30192:24:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30192:34:11"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "30185:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "30114:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30114:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30132:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30111:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30111:23:11"
															},
															"nodeType": "YulIf",
															"src": "30108:128:11"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "30094:3:11",
														"type": ""
													}
												],
												"src": "30059:183:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30337:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30354:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30357:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30347:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30347:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30347:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "30248:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30460:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30477:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30480:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30470:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30470:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30470:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "30371:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30583:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30600:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30603:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30593:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30593:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30593:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "30494:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30706:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30723:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30726:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30716:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30716:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30716:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "30617:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30788:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30798:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30816:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30823:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30812:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30812:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30832:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "30828:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30828:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "30808:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30808:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "30798:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30771:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "30781:6:11",
														"type": ""
													}
												],
												"src": "30740:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30890:52:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30900:35:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30925:2:11",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30929:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "30921:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30921:14:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "30900:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30871:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "30881:8:11",
														"type": ""
													}
												],
												"src": "30848:94:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31001:53:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31011:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31036:3:11",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31041:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "31032:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31032:15:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "31011:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30982:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "30992:8:11",
														"type": ""
													}
												],
												"src": "30948:106:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31166:133:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31188:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31196:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31184:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31184:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31200:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31177:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31177:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31177:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31256:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31264:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31252:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31252:15:11"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31269:22:11",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31245:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31245:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31245:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31158:6:11",
														"type": ""
													}
												],
												"src": "31060:239:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31411:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31433:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31441:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31429:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31429:14:11"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31445:34:11",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31422:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31422:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31422:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31501:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31509:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31497:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31497:15:11"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31514:10:11",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31490:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31490:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31490:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31403:6:11",
														"type": ""
													}
												],
												"src": "31305:227:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31644:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31666:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31674:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31662:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31662:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31678:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31655:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31655:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31655:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31734:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31742:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31730:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31730:15:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31747:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31723:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31723:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31723:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31636:6:11",
														"type": ""
													}
												],
												"src": "31538:230:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31880:117:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31902:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31910:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31898:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31898:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31914:34:11",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31891:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31891:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31891:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31970:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31978:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31966:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31966:15:11"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31983:6:11",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31959:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31959:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31959:31:11"
														}
													]
												},
												"name": "store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31872:6:11",
														"type": ""
													}
												],
												"src": "31774:223:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32109:125:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32131:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32139:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32127:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32127:14:11"
																	},
																	{
																		"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32143:34:11",
																		"type": "",
																		"value": "Error! Onyx NFT fee Too small or"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32120:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32120:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32120:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32199:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32207:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32195:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32195:15:11"
																	},
																	{
																		"hexValue": "20696e20446563696d616c73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32212:14:11",
																		"type": "",
																		"value": " in Decimals"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32188:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32188:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32188:39:11"
														}
													]
												},
												"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32101:6:11",
														"type": ""
													}
												],
												"src": "32003:231:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32346:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32368:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32376:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32364:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32364:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32380:34:11",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32357:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32357:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32357:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32436:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32444:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32432:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32432:15:11"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32449:11:11",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32425:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32425:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32425:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32338:6:11",
														"type": ""
													}
												],
												"src": "32240:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32580:116:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32602:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32610:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32598:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32598:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32614:34:11",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32591:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32591:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32591:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32670:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32678:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32666:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32666:15:11"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32683:5:11",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32659:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32659:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32659:30:11"
														}
													]
												},
												"name": "store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32572:6:11",
														"type": ""
													}
												],
												"src": "32474:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32808:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32830:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32838:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32826:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32826:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32842:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32819:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32819:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32819:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32898:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32906:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32894:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32894:15:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32911:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32887:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32887:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32887:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32800:6:11",
														"type": ""
													}
												],
												"src": "32702:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33042:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33064:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33072:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33060:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33060:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33076:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33053:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33053:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33053:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33132:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33140:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33128:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33128:15:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33145:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33121:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33121:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33121:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33034:6:11",
														"type": ""
													}
												],
												"src": "32936:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33276:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33298:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33306:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33294:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33294:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33310:34:11",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33287:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33287:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33287:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33366:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33374:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33362:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33362:15:11"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33379:10:11",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33355:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33355:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33355:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33268:6:11",
														"type": ""
													}
												],
												"src": "33170:227:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33509:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33531:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33539:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33527:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33527:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33543:34:11",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33520:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33520:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33520:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33599:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33607:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33595:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33595:15:11"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33612:3:11",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33588:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33588:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33588:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33501:6:11",
														"type": ""
													}
												],
												"src": "33403:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33672:668:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33712:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "33714:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "33688:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33688:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33706:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "33685:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33685:26:11"
															},
															"nodeType": "YulIf",
															"src": "33682:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33731:32:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "33743:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33743:20:11"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "33735:4:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "33787:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33793:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "33800:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33800:16:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33818:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33796:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33796:24:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "33772:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33772:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33772:49:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33831:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "33851:4:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "33845:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33845:11:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "33835:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33982:29:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "33996:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "33887:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33895:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "33884:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33884:30:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "33935:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "33943:4:11",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "33931:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33931:17:11"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "33950:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33950:16:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "33928:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33928:39:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "33868:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33868:113:11"
															},
															"nodeType": "YulIf",
															"src": "33865:146:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34021:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34036:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "34042:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34032:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34032:17:11"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "34025:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34058:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "34078:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "34072:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34072:10:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34062:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34125:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "34127:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34097:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34105:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34094:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34094:30:11"
															},
															"nodeType": "YulIf",
															"src": "34091:43:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34144:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "34163:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34168:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34159:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34159:14:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34175:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34155:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34155:27:11"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "34148:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34239:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "34241:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34197:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "34206:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "34216:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "34216:16:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "34234:1:11",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "34212:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34212:24:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34202:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34202:35:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34194:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34194:44:11"
															},
															"nodeType": "YulIf",
															"src": "34191:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34278:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "34288:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "34300:4:11",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "34306:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "34296:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34296:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34284:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34284:30:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "34258:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34258:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34258:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "34324:10:11",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "34331:3:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "34324:3:11"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "33668:3:11",
														"type": ""
													}
												],
												"src": "33629:711:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34400:62:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34434:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "34436:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34436:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34436:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "34423:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34430:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "34420:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34420:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "34413:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34413:20:11"
															},
															"nodeType": "YulIf",
															"src": "34410:46:11"
														}
													]
												},
												"name": "validator_assert_t_enum$_status_$1596",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34393:5:11",
														"type": ""
													}
												],
												"src": "34346:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34511:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34568:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34577:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34580:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "34570:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34570:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34570:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "34534:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "34559:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "34541:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34541:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "34531:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34531:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "34524:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34524:43:11"
															},
															"nodeType": "YulIf",
															"src": "34521:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34504:5:11",
														"type": ""
													}
												],
												"src": "34468:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34636:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34690:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34699:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34702:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "34692:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34692:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34692:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "34659:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "34681:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "34666:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34666:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "34656:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34656:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "34649:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34649:40:11"
															},
															"nodeType": "YulIf",
															"src": "34646:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34629:5:11",
														"type": ""
													}
												],
												"src": "34596:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34760:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34816:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34825:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34828:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "34818:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34818:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34818:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "34783:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "34807:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "34790:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34790:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "34780:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34780:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "34773:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34773:42:11"
															},
															"nodeType": "YulIf",
															"src": "34770:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34753:5:11",
														"type": ""
													}
												],
												"src": "34718:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34887:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34944:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34953:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34956:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "34946:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34946:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34946:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "34910:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "34935:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "34917:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34917:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "34907:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34907:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "34900:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34900:43:11"
															},
															"nodeType": "YulIf",
															"src": "34897:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34880:5:11",
														"type": ""
													}
												],
												"src": "34844:122:11"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_status_$1596_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_status_$1596__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_enum$_status_$1596(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_status_$1596(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_status_$1596_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_status_$1596(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: burn amount exceeds bal\")\n\n        mstore(add(memPtr, 32), \"ance\")\n\n    }\n\n    function store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error! Onyx NFT fee Too small or\")\n\n        mstore(add(memPtr, 32), \" in Decimals\")\n\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: burn from the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: mint to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_assert_t_enum$_status_$1596(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80637e1eaabf1161008c578063d206b94411610066578063d206b94414610225578063e3306a6f14610255578063e985e9c514610273578063f5298aca146102a3576100ce565b80637e1eaabf146101cd578063a22cb465146101eb578063b4a99a4e14610207576100ce565b8062fdd58e146100d357806301ffc9a7146101035780631309a563146101335780634e1273f41461015157806367c510c9146101815780636b20c454146101b1575b600080fd5b6100ed60048036038101906100e891906117e0565b6102bf565b6040516100fa9190611f26565b60405180910390f35b61011d600480360381019061011891906118eb565b610388565b60405161012a9190611d6e565b60405180910390f35b61013b6103f2565b6040516101489190611d6e565b60405180910390f35b61016b60048036038101906101669190611873565b610405565b6040516101789190611d15565b60405180910390f35b61019b600480360381019061019691906117e0565b61051e565b6040516101a89190611d89565b60405180910390f35b6101cb60048036038101906101c69190611715565b610589565b005b6101d5610626565b6040516101e29190611f26565b60405180910390f35b610205600480360381019061020091906117a0565b6107db565b005b61020f6107f1565b60405161021c9190611ca0565b60405180910390f35b61023f600480360381019061023a9190611945565b610817565b60405161024c9190611f26565b60405180910390f35b61025d610894565b60405161026a9190611d89565b60405180910390f35b61028d600480360381019061028891906116d5565b6108a7565b60405161029a9190611d6e565b60405180910390f35b6102bd60048036038101906102b89190611820565b61093b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790611e06565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600d60009054906101000a900460ff1681565b6060815183511461044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611ec6565b60405180910390fd5b6000835167ffffffffffffffff8111156104685761046761240d565b5b6040519080825280602002602001820160405280156104965781602001602082028036833780820191505090505b50905060005b8451811015610513576104e38582815181106104bb576104ba6123de565b5b60200260200101518583815181106104d6576104d56123de565b5b60200260200101516102bf565b8282815181106104f6576104f56123de565b5b6020026020010181815250508061050c9061227a565b905061049c565b508091505092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160009054906101000a900460ff16905092915050565b6105916109d8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806105d757506105d6836105d16109d8565b6108a7565b5b610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611e66565b60405180910390fd5b6106218383836109e0565b505050565b600080610631610c91565b9050600181141561068d576040518060400160405280600881526020017f506c6174696e756d0000000000000000000000000000000000000000000000008152506009908051906020019061068792919061148d565b50610735565b60028114156106e7576040518060400160405280600481526020017f476f6c6400000000000000000000000000000000000000000000000000000000815250600990805190602001906106e192919061148d565b50610734565b6040518060400160405280600681526020017f53696c76657200000000000000000000000000000000000000000000000000008152506009908051906020019061073292919061148d565b505b5b6107d46107406109d8565b82600b546009805461075190612217565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90612217565b80156107ca5780601f1061079f576101008083540402835291602001916107ca565b820191906000526020600020905b8154815290600101906020018083116107ad57829003601f168201915b5050505050610cf1565b8091505090565b6107ed6107e66109d8565b8383610e87565b5050565b600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081612710808461082991906120ae565b61083391906120df565b14610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a90611e46565b60405180910390fd5b6103e860198361088391906120df565b61088d91906120ae565b9050919050565b600560009054906101000a900460ff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109436109d8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806109895750610988836109836109d8565b6108a7565b5b6109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90611e66565b60405180910390fd5b6109d3838383610ff4565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4790611e86565b60405180910390fd5b8051825114610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611ee6565b60405180910390fd5b6000610a9e6109d8565b9050610abe81856000868660405180602001604052806000815250611211565b60005b8351811015610c0b576000848281518110610adf57610ade6123de565b5b602002602001015190506000848381518110610afe57610afd6123de565b5b60200260200101519050600080600084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690611e26565b60405180910390fd5b81810360008085815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050508080610c039061227a565b915050610ac1565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610c83929190611d37565b60405180910390a450505050565b60008060034233600a54604051602001610cad93929190611c63565b6040516020818303038152906040528051906020012060001c610cd091906122f1565b9050600a6000815480929190610ce59061227a565b91905055508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5890611f06565b60405180910390fd5b6000610d6b6109d8565b9050610d8c81600087610d7d88611219565b610d8688611219565b87611211565b8260008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610deb9190612058565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051610e69929190611f41565b60405180910390a4610e8081600087878787611293565b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ef6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed90611ea6565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fe79190611d6e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90611e86565b60405180910390fd5b600061106e6109d8565b905061109e8185600061108087611219565b61108987611219565b60405180602001604052806000815250611211565b600080600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112c90611e26565b60405180910390fd5b82810360008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051611202929190611f41565b60405180910390a45050505050565b505050505050565b60606000600167ffffffffffffffff8111156112385761123761240d565b5b6040519080825280602002602001820160405280156112665781602001602082028036833780820191505090505b509050828160008151811061127e5761127d6123de565b5b60200260200101818152505080915050919050565b6112b28473ffffffffffffffffffffffffffffffffffffffff1661147a565b15611472578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016112f8959493929190611cbb565b602060405180830381600087803b15801561131257600080fd5b505af192505050801561134357506040513d601f19601f820116820180604052508101906113409190611918565b60015b6113e95761134f61243c565b806308c379a014156113ac5750611364612802565b8061136f57506113ae565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a39190611da4565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e090611dc6565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146790611de6565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b82805461149990612217565b90600052602060002090601f0160209004810192826114bb5760008555611502565b82601f106114d457805160ff1916838001178555611502565b82800160010185558215611502579182015b828111156115015782518255916020019190600101906114e6565b5b50905061150f9190611513565b5090565b5b8082111561152c576000816000905550600101611514565b5090565b600061154361153e84611f8f565b611f6a565b9050808382526020820190508285602086028201111561156657611565612463565b5b60005b85811015611596578161157c8882611610565b845260208401935060208301925050600181019050611569565b5050509392505050565b60006115b36115ae84611fbb565b611f6a565b905080838252602082019050828560208602820111156115d6576115d5612463565b5b60005b8581101561160657816115ec88826116c0565b8452602084019350602083019250506001810190506115d9565b5050509392505050565b60008135905061161f816128ac565b92915050565b600082601f83011261163a5761163961245e565b5b813561164a848260208601611530565b91505092915050565b600082601f8301126116685761166761245e565b5b81356116788482602086016115a0565b91505092915050565b600081359050611690816128c3565b92915050565b6000813590506116a5816128da565b92915050565b6000815190506116ba816128da565b92915050565b6000813590506116cf816128f1565b92915050565b600080604083850312156116ec576116eb61246d565b5b60006116fa85828601611610565b925050602061170b85828601611610565b9150509250929050565b60008060006060848603121561172e5761172d61246d565b5b600061173c86828701611610565b935050602084013567ffffffffffffffff81111561175d5761175c612468565b5b61176986828701611653565b925050604084013567ffffffffffffffff81111561178a57611789612468565b5b61179686828701611653565b9150509250925092565b600080604083850312156117b7576117b661246d565b5b60006117c585828601611610565b92505060206117d685828601611681565b9150509250929050565b600080604083850312156117f7576117f661246d565b5b600061180585828601611610565b9250506020611816858286016116c0565b9150509250929050565b6000806000606084860312156118395761183861246d565b5b600061184786828701611610565b9350506020611858868287016116c0565b9250506040611869868287016116c0565b9150509250925092565b6000806040838503121561188a5761188961246d565b5b600083013567ffffffffffffffff8111156118a8576118a7612468565b5b6118b485828601611625565b925050602083013567ffffffffffffffff8111156118d5576118d4612468565b5b6118e185828601611653565b9150509250929050565b6000602082840312156119015761190061246d565b5b600061190f84828501611696565b91505092915050565b60006020828403121561192e5761192d61246d565b5b600061193c848285016116ab565b91505092915050565b60006020828403121561195b5761195a61246d565b5b6000611969848285016116c0565b91505092915050565b600061197e8383611c2e565b60208301905092915050565b6119938161214b565b82525050565b6119a281612139565b82525050565b6119b96119b482612139565b6122c3565b82525050565b60006119ca82611ff7565b6119d48185612025565b93506119df83611fe7565b8060005b83811015611a105781516119f78882611972565b9750611a0283612018565b9250506001810190506119e3565b5085935050505092915050565b611a268161215d565b82525050565b6000611a3782612002565b611a418185612036565b9350611a518185602086016121e4565b611a5a81612472565b840191505092915050565b611a6e816121d2565b82525050565b6000611a7f8261200d565b611a898185612047565b9350611a998185602086016121e4565b611aa281612472565b840191505092915050565b6000611aba603483612047565b9150611ac58261249d565b604082019050919050565b6000611add602883612047565b9150611ae8826124ec565b604082019050919050565b6000611b00602b83612047565b9150611b0b8261253b565b604082019050919050565b6000611b23602483612047565b9150611b2e8261258a565b604082019050919050565b6000611b46602c83612047565b9150611b51826125d9565b604082019050919050565b6000611b69602983612047565b9150611b7482612628565b604082019050919050565b6000611b8c602383612047565b9150611b9782612677565b604082019050919050565b6000611baf602983612047565b9150611bba826126c6565b604082019050919050565b6000611bd2602983612047565b9150611bdd82612715565b604082019050919050565b6000611bf5602883612047565b9150611c0082612764565b604082019050919050565b6000611c18602183612047565b9150611c23826127b3565b604082019050919050565b611c37816121c8565b82525050565b611c46816121c8565b82525050565b611c5d611c58826121c8565b6122e7565b82525050565b6000611c6f8286611c4c565b602082019150611c7f82856119a8565b601482019150611c8f8284611c4c565b602082019150819050949350505050565b6000602082019050611cb5600083018461198a565b92915050565b600060a082019050611cd06000830188611999565b611cdd6020830187611999565b611cea6040830186611c3d565b611cf76060830185611c3d565b8181036080830152611d098184611a2c565b90509695505050505050565b60006020820190508181036000830152611d2f81846119bf565b905092915050565b60006040820190508181036000830152611d5181856119bf565b90508181036020830152611d6581846119bf565b90509392505050565b6000602082019050611d836000830184611a1d565b92915050565b6000602082019050611d9e6000830184611a65565b92915050565b60006020820190508181036000830152611dbe8184611a74565b905092915050565b60006020820190508181036000830152611ddf81611aad565b9050919050565b60006020820190508181036000830152611dff81611ad0565b9050919050565b60006020820190508181036000830152611e1f81611af3565b9050919050565b60006020820190508181036000830152611e3f81611b16565b9050919050565b60006020820190508181036000830152611e5f81611b39565b9050919050565b60006020820190508181036000830152611e7f81611b5c565b9050919050565b60006020820190508181036000830152611e9f81611b7f565b9050919050565b60006020820190508181036000830152611ebf81611ba2565b9050919050565b60006020820190508181036000830152611edf81611bc5565b9050919050565b60006020820190508181036000830152611eff81611be8565b9050919050565b60006020820190508181036000830152611f1f81611c0b565b9050919050565b6000602082019050611f3b6000830184611c3d565b92915050565b6000604082019050611f566000830185611c3d565b611f636020830184611c3d565b9392505050565b6000611f74611f85565b9050611f808282612249565b919050565b6000604051905090565b600067ffffffffffffffff821115611faa57611fa961240d565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611fd657611fd561240d565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612063826121c8565b915061206e836121c8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120a3576120a2612322565b5b828201905092915050565b60006120b9826121c8565b91506120c4836121c8565b9250826120d4576120d3612351565b5b828204905092915050565b60006120ea826121c8565b91506120f5836121c8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561212e5761212d612322565b5b828202905092915050565b6000612144826121a8565b9050919050565b6000612156826121a8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506121a382612898565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006121dd82612195565b9050919050565b60005b838110156122025780820151818401526020810190506121e7565b83811115612211576000848401525b50505050565b6000600282049050600182168061222f57607f821691505b60208210811415612243576122426123af565b5b50919050565b61225282612472565b810181811067ffffffffffffffff821117156122715761227061240d565b5b80604052505050565b6000612285826121c8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122b8576122b7612322565b5b600182019050919050565b60006122ce826122d5565b9050919050565b60006122e082612483565b9050919050565b6000819050919050565b60006122fc826121c8565b9150612307836121c8565b92508261231757612316612351565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561245b5760046000803e612458600051612490565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d101561281257612895565b61281a611f85565b60043d036004823e80513d602482011167ffffffffffffffff82111715612842575050612895565b808201805167ffffffffffffffff8111156128605750505050612895565b80602083010160043d03850181111561287d575050505050612895565b61288c82602001850186612249565b82955050505050505b90565b600481106128a9576128a8612380565b5b50565b6128b581612139565b81146128c057600080fd5b50565b6128cc8161215d565b81146128d757600080fd5b50565b6128e381612169565b81146128ee57600080fd5b50565b6128fa816121c8565b811461290557600080fd5b5056fea26469706673582212207feecb8d27367b39482b1ab1c745515ab3058cdf6174218e0a38e3763f88f80864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1EAABF GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD206B944 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD206B944 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xE3306A6F EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2A3 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x7E1EAABF EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x207 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x67C510C9 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1EC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x496 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH2 0x4E3 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D5 PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BF JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x50C SWAP1 PUSH2 0x227A JUMP JUMPDEST SWAP1 POP PUSH2 0x49C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5D7 JUMPI POP PUSH2 0x5D6 DUP4 PUSH2 0x5D1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x621 DUP4 DUP4 DUP4 PUSH2 0x9E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x631 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C6174696E756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x687 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F6C6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6E1 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST POP PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696C7665720000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x732 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0x7D4 PUSH2 0x740 PUSH2 0x9D8 JUMP JUMPDEST DUP3 PUSH1 0xB SLOAD PUSH1 0x9 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2217 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77D SWAP1 PUSH2 0x2217 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xCF1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x7ED PUSH2 0x7E6 PUSH2 0x9D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST EQ PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x943 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x989 JUMPI POP PUSH2 0x988 DUP4 PUSH2 0x983 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BF SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D3 DUP4 DUP4 DUP4 PUSH2 0xFF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA47 SWAP1 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9E PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xABE DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAFE JUMPI PUSH2 0xAFD PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xC03 SWAP1 PUSH2 0x227A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC1 JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC83 SWAP3 SWAP2 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 TIMESTAMP CALLER PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCE5 SWAP1 PUSH2 0x227A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD58 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD8C DUP2 PUSH1 0x0 DUP8 PUSH2 0xD7D DUP9 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xD86 DUP9 PUSH2 0x1219 JUMP JUMPDEST DUP8 PUSH2 0x1211 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x2058 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE69 SWAP3 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE80 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1293 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEED SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105B SWAP1 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106E PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x109E DUP2 DUP6 PUSH1 0x0 PUSH2 0x1080 DUP8 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x1089 DUP8 PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112C SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1202 SWAP3 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1266 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x127E JUMPI PUSH2 0x127D PUSH2 0x23DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x147A JUMP JUMPDEST ISZERO PUSH2 0x1472 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1343 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13E9 JUMPI PUSH2 0x134F PUSH2 0x243C JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x13AC JUMPI POP PUSH2 0x1364 PUSH2 0x2802 JUMP JUMPDEST DUP1 PUSH2 0x136F JUMPI POP PUSH2 0x13AE JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E0 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1499 SWAP1 PUSH2 0x2217 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x14BB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1502 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x14D4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1502 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1502 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1501 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x14E6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x152C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1514 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 PUSH2 0x153E DUP5 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1566 JUMPI PUSH2 0x1565 PUSH2 0x2463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1596 JUMPI DUP2 PUSH2 0x157C DUP9 DUP3 PUSH2 0x1610 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1569 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B3 PUSH2 0x15AE DUP5 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x2463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1606 JUMPI DUP2 PUSH2 0x15EC DUP9 DUP3 PUSH2 0x16C0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15D9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161F DUP2 PUSH2 0x28AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x245E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x164A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1530 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1668 JUMPI PUSH2 0x1667 PUSH2 0x245E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1678 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1690 DUP2 PUSH2 0x28C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A5 DUP2 PUSH2 0x28DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16BA DUP2 PUSH2 0x28DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CF DUP2 PUSH2 0x28F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FA DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x170B DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x173C DUP7 DUP3 DUP8 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175D JUMPI PUSH2 0x175C PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x1769 DUP7 DUP3 DUP8 ADD PUSH2 0x1653 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x1796 DUP7 DUP3 DUP8 ADD PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x17F6 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1805 DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1816 DUP6 DUP3 DUP7 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1839 JUMPI PUSH2 0x1838 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1847 DUP7 DUP3 DUP8 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1858 DUP7 DUP3 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1869 DUP7 DUP3 DUP8 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x18B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0x2468 JUMP JUMPDEST JUMPDEST PUSH2 0x18E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190F DUP5 DUP3 DUP6 ADD PUSH2 0x1696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193C DUP5 DUP3 DUP6 ADD PUSH2 0x16AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH2 0x195A PUSH2 0x246D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1969 DUP5 DUP3 DUP6 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP4 DUP4 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1993 DUP2 PUSH2 0x214B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP2 PUSH2 0x2139 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19B9 PUSH2 0x19B4 DUP3 PUSH2 0x2139 JUMP JUMPDEST PUSH2 0x22C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CA DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x19D4 DUP2 DUP6 PUSH2 0x2025 JUMP JUMPDEST SWAP4 POP PUSH2 0x19DF DUP4 PUSH2 0x1FE7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A10 JUMPI DUP2 MLOAD PUSH2 0x19F7 DUP9 DUP3 PUSH2 0x1972 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A02 DUP4 PUSH2 0x2018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19E3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A26 DUP2 PUSH2 0x215D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A37 DUP3 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1A41 DUP2 DUP6 PUSH2 0x2036 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A51 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x1A5A DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6E DUP2 PUSH2 0x21D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7F DUP3 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x1A89 DUP2 DUP6 PUSH2 0x2047 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABA PUSH1 0x34 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC5 DUP3 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADD PUSH1 0x28 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE8 DUP3 PUSH2 0x24EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0x2B DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0B DUP3 PUSH2 0x253B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 PUSH1 0x24 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x258A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B46 PUSH1 0x2C DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B51 DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B69 PUSH1 0x29 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B74 DUP3 PUSH2 0x2628 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8C PUSH1 0x23 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B97 DUP3 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF PUSH1 0x29 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBA DUP3 PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD2 PUSH1 0x29 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDD DUP3 PUSH2 0x2715 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF5 PUSH1 0x28 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C00 DUP3 PUSH2 0x2764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C18 PUSH1 0x21 DUP4 PUSH2 0x2047 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C23 DUP3 PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C37 DUP2 PUSH2 0x21C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C46 DUP2 PUSH2 0x21C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C5D PUSH2 0x1C58 DUP3 PUSH2 0x21C8 JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6F DUP3 DUP7 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1C7F DUP3 DUP6 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1C8F DUP3 DUP5 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CD0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1CDD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1CEA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1C3D JUMP JUMPDEST PUSH2 0x1CF7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1C3D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D09 DUP2 DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2F DUP2 DUP5 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D51 DUP2 DUP6 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D65 DUP2 DUP5 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DBE DUP2 DUP5 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DFF DUP2 PUSH2 0x1AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1F DUP2 PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3F DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5F DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7F DUP2 PUSH2 0x1B5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9F DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EBF DUP2 PUSH2 0x1BA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDF DUP2 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFF DUP2 PUSH2 0x1BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F1F DUP2 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F56 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C3D JUMP JUMPDEST PUSH2 0x1F63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F74 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F80 DUP3 DUP3 PUSH2 0x2249 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD5 PUSH2 0x240D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2063 DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x206E DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20A3 JUMPI PUSH2 0x20A2 PUSH2 0x2322 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C4 DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20D4 JUMPI PUSH2 0x20D3 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EA DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F5 DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x2322 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2144 DUP3 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2156 DUP3 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x21A3 DUP3 PUSH2 0x2898 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DD DUP3 PUSH2 0x2195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2202 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21E7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2211 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x222F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x23AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2252 DUP3 PUSH2 0x2472 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x240D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2285 DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x2322 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CE DUP3 PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E0 DUP3 PUSH2 0x2483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FC DUP3 PUSH2 0x21C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2307 DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x245B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2458 PUSH1 0x0 MLOAD PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2812 JUMPI PUSH2 0x2895 JUMP JUMPDEST PUSH2 0x281A PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2842 JUMPI POP POP PUSH2 0x2895 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2860 JUMPI POP POP POP POP PUSH2 0x2895 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x287D JUMPI POP POP POP POP POP PUSH2 0x2895 JUMP JUMPDEST PUSH2 0x288C DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x2249 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x28A9 JUMPI PUSH2 0x28A8 PUSH2 0x2380 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x28B5 DUP2 PUSH2 0x2139 JUMP JUMPDEST DUP2 EQ PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28CC DUP2 PUSH2 0x215D JUMP JUMPDEST DUP2 EQ PUSH2 0x28D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28E3 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP2 EQ PUSH2 0x28EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28FA DUP2 PUSH2 0x21C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xEECB8D27367B39482B1AB1C745515AB3058CDF6174218E0A38E3763F88F80864 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "318:1601:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:228:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;829:155:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1051:27:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:508:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3241:138:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;716:342:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1644:272:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1894:153:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1084:29:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:197:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:27:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2114:166:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:318:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;933:228:3;1019:7;1065:1;1046:21;;:7;:21;;;;1038:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1132:9;:13;1142:2;1132:13;;;;;;;;;;;:22;1146:7;1132:22;;;;;;;;;;;;;;;;1125:29;;933:228;;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;1051:27:2:-;;;;;;;;;;;;;:::o;1318:508:3:-;1469:16;1528:3;:10;1509:8;:15;:29;1501:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1595:30;1642:8;:15;1628:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:63;;1674:9;1669:120;1693:8;:15;1689:1;:19;1669:120;;;1748:30;1758:8;1767:1;1758:11;;;;;;;;:::i;:::-;;;;;;;;1771:3;1775:1;1771:6;;;;;;;;:::i;:::-;;;;;;;;1748:9;:30::i;:::-;1729:13;1743:1;1729:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;1710:3;;;;:::i;:::-;;;1669:120;;;;1806:13;1799:20;;;1318:508;;;;:::o;3241:138:9:-;3317:6;3341:3;:13;3345:8;3341:13;;;;;;;;;;;;;;;:20;3355:5;3341:20;;;;;;;;;;;:31;;;;;;;;;;;;3334:38;;3241:138;;;;:::o;716:342:4:-;886:12;:10;:12::i;:::-;875:23;;:7;:23;;;:66;;;;902:39;919:7;928:12;:10;:12::i;:::-;902:16;:39::i;:::-;875:66;854:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;1019:32;1030:7;1039:3;1044:6;1019:10;:32::i;:::-;716:342;;;:::o;1644:272:2:-;1685:4;1698:10;1711:8;:6;:8::i;:::-;1698:21;;1742:1;1735:5;:8;1732:106;;;1750:15;;;;;;;;;;;;;;;;;:4;:15;;;;;;;;;;;;:::i;:::-;;1732:106;;;1787:1;1780:5;:8;1777:61;;;1795:11;;;;;;;;;;;;;;;;;:4;:11;;;;;;;;;;;;:::i;:::-;;1777:61;;;1823:15;;;;;;;;;;;;;;;;;:4;:15;;;;;;;;;;;;:::i;:::-;;1777:61;1732:106;1846:45;1852:12;:10;:12::i;:::-;1866:5;1873:11;;1886:4;1846:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:45::i;:::-;1904:5;1897:12;;;1644:272;:::o;1894:153:3:-;1988:52;2007:12;:10;:12::i;:::-;2021:8;2031;1988:18;:52::i;:::-;1894:153;;:::o;1084:29:2:-;;;;;;;;;;;;;:::o;1318:197:10:-;1377:4;1424:5;1415;1408;1402;:11;;;;:::i;:::-;1401:19;;;;:::i;:::-;:28;1393:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1504:4;1501:2;1495:5;:8;;;;:::i;:::-;:13;;;;:::i;:::-;1488:20;;1318:197;;;:::o;258:27:9:-;;;;;;;;;;;;;:::o;2114:166:3:-;2213:4;2236:18;:27;2255:7;2236:27;;;;;;;;;;;;;;;:37;2264:8;2236:37;;;;;;;;;;;;;;;;;;;;;;;;;2229:44;;2114:166;;;;:::o;392:318:4:-;537:12;:10;:12::i;:::-;526:23;;:7;:23;;;:66;;;;553:39;570:7;579:12;:10;:12::i;:::-;553:16;:39::i;:::-;526:66;505:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;678:25;684:7;693:2;697:5;678;:25::i;:::-;392:318;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;6908:867:3:-;7071:1;7055:18;;:4;:18;;;;7047:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7145:7;:14;7131:3;:10;:28;7123:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;7215:16;7234:12;:10;:12::i;:::-;7215:31;;7257:66;7278:8;7288:4;7302:1;7306:3;7311:7;7257:66;;;;;;;;;;;;:20;:66::i;:::-;7339:9;7334:364;7358:3;:10;7354:1;:14;7334:364;;;7389:10;7402:3;7406:1;7402:6;;;;;;;;:::i;:::-;;;;;;;;7389:19;;7422:14;7439:7;7447:1;7439:10;;;;;;;;:::i;:::-;;;;;;;;7422:27;;7464:19;7486:9;:13;7496:2;7486:13;;;;;;;;;;;:19;7500:4;7486:19;;;;;;;;;;;;;;;;7464:41;;7542:6;7527:11;:21;;7519:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7667:6;7653:11;:20;7631:9;:13;7641:2;7631:13;;;;;;;;;;;:19;7645:4;7631:19;;;;;;;;;;;;;;;:42;;;;7375:323;;;7370:3;;;;;:::i;:::-;;;;7334:364;;;;7751:1;7713:55;;7737:4;7713:55;;7727:8;7713:55;;;7755:3;7760:7;7713:55;;;;;;;:::i;:::-;;;;;;;;7037:738;6908:867;;;:::o;1442:197:2:-;1478:4;1490:17;1587:1;1542:15;1559:10;1571;;1525:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1515:68;;;;;;1510:74;;:78;;;;:::i;:::-;1490:98;;1599:10;;:12;;;;;;;;;:::i;:::-;;;;;;1624;1617:19;;;1442:197;:::o;5292:551:3:-;5453:1;5439:16;;:2;:16;;;;5431:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5504:16;5523:12;:10;:12::i;:::-;5504:31;;5546:102;5567:8;5585:1;5589:2;5593:21;5611:2;5593:17;:21::i;:::-;5616:25;5634:6;5616:17;:25::i;:::-;5643:4;5546:20;:102::i;:::-;5679:6;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:17;5672:2;5658:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5737:2;5700:52;;5733:1;5700:52;;5715:8;5700:52;;;5741:2;5745:6;5700:52;;;;;;;:::i;:::-;;;;;;;;5762:74;5793:8;5811:1;5815:2;5819;5823:6;5831:4;5762:30;:74::i;:::-;5421:422;5292:551;;;;:::o;7910:323::-;8060:8;8051:17;;:5;:17;;;;8043:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8162:8;8124:18;:25;8143:5;8124:25;;;;;;;;;;;;;;;:35;8150:8;8124:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;8207:8;8185:41;;8200:5;8185:41;;;8217:8;8185:41;;;;;;:::i;:::-;;;;;;;;7910:323;;;:::o;6084:630::-;6222:1;6206:18;;:4;:18;;;;6198:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6275:16;6294:12;:10;:12::i;:::-;6275:31;;6317:102;6338:8;6348:4;6362:1;6366:21;6384:2;6366:17;:21::i;:::-;6389:25;6407:6;6389:17;:25::i;:::-;6317:102;;;;;;;;;;;;:20;:102::i;:::-;6430:19;6452:9;:13;6462:2;6452:13;;;;;;;;;;;:19;6466:4;6452:19;;;;;;;;;;;;;;;;6430:41;;6504:6;6489:11;:21;;6481:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6621:6;6607:11;:20;6585:9;:13;6595:2;6585:13;;;;;;;;;;;:19;6599:4;6585:19;;;;;;;;;;;;;;;:42;;;;6692:1;6653:54;;6678:4;6653:54;;6668:8;6653:54;;;6696:2;6700:6;6653:54;;;;;;;:::i;:::-;;;;;;;;6188:526;;6084:630;;;:::o;9167:214::-;;;;;;;:::o;10917:193::-;10983:16;11011:22;11050:1;11036:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11011:41;;11073:7;11062:5;11068:1;11062:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;11098:5;11091:12;;;10917:193;;;:::o;9387:725::-;9594:15;:2;:13;;;:15::i;:::-;9590:516;;;9646:2;9629:38;;;9668:8;9678:4;9684:2;9688:6;9696:4;9629:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;9625:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9972:6;9965:14;;;;;;;;;;;:::i;:::-;;;;;;;;9625:471;;;10019:62;;;;;;;;;;:::i;:::-;;;;;;;;9625:471;9762:43;;;9750:55;;;:8;:55;;;;9746:152;;9829:50;;;;;;;;;;:::i;:::-;;;;;;;;9746:152;9702:210;9590:516;9387:725;;;;;;:::o;771:377:0:-;831:4;1034:12;1099:7;1087:20;1079:28;;1140:1;1133:4;:8;1126:15;;;771:377;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:11:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:139::-;1543:5;1581:6;1568:20;1559:29;;1597:33;1624:5;1597:33;:::i;:::-;1497:139;;;;:::o;1659:370::-;1730:5;1779:3;1772:4;1764:6;1760:17;1756:27;1746:122;;1787:79;;:::i;:::-;1746:122;1904:6;1891:20;1929:94;2019:3;2011:6;2004:4;1996:6;1992:17;1929:94;:::i;:::-;1920:103;;1736:293;1659:370;;;;:::o;2052:::-;2123:5;2172:3;2165:4;2157:6;2153:17;2149:27;2139:122;;2180:79;;:::i;:::-;2139:122;2297:6;2284:20;2322:94;2412:3;2404:6;2397:4;2389:6;2385:17;2322:94;:::i;:::-;2313:103;;2129:293;2052:370;;;;:::o;2428:133::-;2471:5;2509:6;2496:20;2487:29;;2525:30;2549:5;2525:30;:::i;:::-;2428:133;;;;:::o;2567:137::-;2612:5;2650:6;2637:20;2628:29;;2666:32;2692:5;2666:32;:::i;:::-;2567:137;;;;:::o;2710:141::-;2766:5;2797:6;2791:13;2782:22;;2813:32;2839:5;2813:32;:::i;:::-;2710:141;;;;:::o;2857:139::-;2903:5;2941:6;2928:20;2919:29;;2957:33;2984:5;2957:33;:::i;:::-;2857:139;;;;:::o;3002:474::-;3070:6;3078;3127:2;3115:9;3106:7;3102:23;3098:32;3095:119;;;3133:79;;:::i;:::-;3095:119;3253:1;3278:53;3323:7;3314:6;3303:9;3299:22;3278:53;:::i;:::-;3268:63;;3224:117;3380:2;3406:53;3451:7;3442:6;3431:9;3427:22;3406:53;:::i;:::-;3396:63;;3351:118;3002:474;;;;;:::o;3482:1039::-;3609:6;3617;3625;3674:2;3662:9;3653:7;3649:23;3645:32;3642:119;;;3680:79;;:::i;:::-;3642:119;3800:1;3825:53;3870:7;3861:6;3850:9;3846:22;3825:53;:::i;:::-;3815:63;;3771:117;3955:2;3944:9;3940:18;3927:32;3986:18;3978:6;3975:30;3972:117;;;4008:79;;:::i;:::-;3972:117;4113:78;4183:7;4174:6;4163:9;4159:22;4113:78;:::i;:::-;4103:88;;3898:303;4268:2;4257:9;4253:18;4240:32;4299:18;4291:6;4288:30;4285:117;;;4321:79;;:::i;:::-;4285:117;4426:78;4496:7;4487:6;4476:9;4472:22;4426:78;:::i;:::-;4416:88;;4211:303;3482:1039;;;;;:::o;4527:468::-;4592:6;4600;4649:2;4637:9;4628:7;4624:23;4620:32;4617:119;;;4655:79;;:::i;:::-;4617:119;4775:1;4800:53;4845:7;4836:6;4825:9;4821:22;4800:53;:::i;:::-;4790:63;;4746:117;4902:2;4928:50;4970:7;4961:6;4950:9;4946:22;4928:50;:::i;:::-;4918:60;;4873:115;4527:468;;;;;:::o;5001:474::-;5069:6;5077;5126:2;5114:9;5105:7;5101:23;5097:32;5094:119;;;5132:79;;:::i;:::-;5094:119;5252:1;5277:53;5322:7;5313:6;5302:9;5298:22;5277:53;:::i;:::-;5267:63;;5223:117;5379:2;5405:53;5450:7;5441:6;5430:9;5426:22;5405:53;:::i;:::-;5395:63;;5350:118;5001:474;;;;;:::o;5481:619::-;5558:6;5566;5574;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5876:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;:::i;:::-;5892:63;;5847:118;6004:2;6030:53;6075:7;6066:6;6055:9;6051:22;6030:53;:::i;:::-;6020:63;;5975:118;5481:619;;;;;:::o;6106:894::-;6224:6;6232;6281:2;6269:9;6260:7;6256:23;6252:32;6249:119;;;6287:79;;:::i;:::-;6249:119;6435:1;6424:9;6420:17;6407:31;6465:18;6457:6;6454:30;6451:117;;;6487:79;;:::i;:::-;6451:117;6592:78;6662:7;6653:6;6642:9;6638:22;6592:78;:::i;:::-;6582:88;;6378:302;6747:2;6736:9;6732:18;6719:32;6778:18;6770:6;6767:30;6764:117;;;6800:79;;:::i;:::-;6764:117;6905:78;6975:7;6966:6;6955:9;6951:22;6905:78;:::i;:::-;6895:88;;6690:303;6106:894;;;;;:::o;7006:327::-;7064:6;7113:2;7101:9;7092:7;7088:23;7084:32;7081:119;;;7119:79;;:::i;:::-;7081:119;7239:1;7264:52;7308:7;7299:6;7288:9;7284:22;7264:52;:::i;:::-;7254:62;;7210:116;7006:327;;;;:::o;7339:349::-;7408:6;7457:2;7445:9;7436:7;7432:23;7428:32;7425:119;;;7463:79;;:::i;:::-;7425:119;7583:1;7608:63;7663:7;7654:6;7643:9;7639:22;7608:63;:::i;:::-;7598:73;;7554:127;7339:349;;;;:::o;7694:329::-;7753:6;7802:2;7790:9;7781:7;7777:23;7773:32;7770:119;;;7808:79;;:::i;:::-;7770:119;7928:1;7953:53;7998:7;7989:6;7978:9;7974:22;7953:53;:::i;:::-;7943:63;;7899:117;7694:329;;;;:::o;8029:179::-;8098:10;8119:46;8161:3;8153:6;8119:46;:::i;:::-;8197:4;8192:3;8188:14;8174:28;;8029:179;;;;:::o;8214:142::-;8317:32;8343:5;8317:32;:::i;:::-;8312:3;8305:45;8214:142;;:::o;8362:118::-;8449:24;8467:5;8449:24;:::i;:::-;8444:3;8437:37;8362:118;;:::o;8486:157::-;8591:45;8611:24;8629:5;8611:24;:::i;:::-;8591:45;:::i;:::-;8586:3;8579:58;8486:157;;:::o;8679:732::-;8798:3;8827:54;8875:5;8827:54;:::i;:::-;8897:86;8976:6;8971:3;8897:86;:::i;:::-;8890:93;;9007:56;9057:5;9007:56;:::i;:::-;9086:7;9117:1;9102:284;9127:6;9124:1;9121:13;9102:284;;;9203:6;9197:13;9230:63;9289:3;9274:13;9230:63;:::i;:::-;9223:70;;9316:60;9369:6;9316:60;:::i;:::-;9306:70;;9162:224;9149:1;9146;9142:9;9137:14;;9102:284;;;9106:14;9402:3;9395:10;;8803:608;;;8679:732;;;;:::o;9417:109::-;9498:21;9513:5;9498:21;:::i;:::-;9493:3;9486:34;9417:109;;:::o;9532:360::-;9618:3;9646:38;9678:5;9646:38;:::i;:::-;9700:70;9763:6;9758:3;9700:70;:::i;:::-;9693:77;;9779:52;9824:6;9819:3;9812:4;9805:5;9801:16;9779:52;:::i;:::-;9856:29;9878:6;9856:29;:::i;:::-;9851:3;9847:39;9840:46;;9622:270;9532:360;;;;:::o;9898:149::-;9994:46;10034:5;9994:46;:::i;:::-;9989:3;9982:59;9898:149;;:::o;10053:364::-;10141:3;10169:39;10202:5;10169:39;:::i;:::-;10224:71;10288:6;10283:3;10224:71;:::i;:::-;10217:78;;10304:52;10349:6;10344:3;10337:4;10330:5;10326:16;10304:52;:::i;:::-;10381:29;10403:6;10381:29;:::i;:::-;10376:3;10372:39;10365:46;;10145:272;10053:364;;;;:::o;10423:366::-;10565:3;10586:67;10650:2;10645:3;10586:67;:::i;:::-;10579:74;;10662:93;10751:3;10662:93;:::i;:::-;10780:2;10775:3;10771:12;10764:19;;10423:366;;;:::o;10795:::-;10937:3;10958:67;11022:2;11017:3;10958:67;:::i;:::-;10951:74;;11034:93;11123:3;11034:93;:::i;:::-;11152:2;11147:3;11143:12;11136:19;;10795:366;;;:::o;11167:::-;11309:3;11330:67;11394:2;11389:3;11330:67;:::i;:::-;11323:74;;11406:93;11495:3;11406:93;:::i;:::-;11524:2;11519:3;11515:12;11508:19;;11167:366;;;:::o;11539:::-;11681:3;11702:67;11766:2;11761:3;11702:67;:::i;:::-;11695:74;;11778:93;11867:3;11778:93;:::i;:::-;11896:2;11891:3;11887:12;11880:19;;11539:366;;;:::o;11911:::-;12053:3;12074:67;12138:2;12133:3;12074:67;:::i;:::-;12067:74;;12150:93;12239:3;12150:93;:::i;:::-;12268:2;12263:3;12259:12;12252:19;;11911:366;;;:::o;12283:::-;12425:3;12446:67;12510:2;12505:3;12446:67;:::i;:::-;12439:74;;12522:93;12611:3;12522:93;:::i;:::-;12640:2;12635:3;12631:12;12624:19;;12283:366;;;:::o;12655:::-;12797:3;12818:67;12882:2;12877:3;12818:67;:::i;:::-;12811:74;;12894:93;12983:3;12894:93;:::i;:::-;13012:2;13007:3;13003:12;12996:19;;12655:366;;;:::o;13027:::-;13169:3;13190:67;13254:2;13249:3;13190:67;:::i;:::-;13183:74;;13266:93;13355:3;13266:93;:::i;:::-;13384:2;13379:3;13375:12;13368:19;;13027:366;;;:::o;13399:::-;13541:3;13562:67;13626:2;13621:3;13562:67;:::i;:::-;13555:74;;13638:93;13727:3;13638:93;:::i;:::-;13756:2;13751:3;13747:12;13740:19;;13399:366;;;:::o;13771:::-;13913:3;13934:67;13998:2;13993:3;13934:67;:::i;:::-;13927:74;;14010:93;14099:3;14010:93;:::i;:::-;14128:2;14123:3;14119:12;14112:19;;13771:366;;;:::o;14143:::-;14285:3;14306:67;14370:2;14365:3;14306:67;:::i;:::-;14299:74;;14382:93;14471:3;14382:93;:::i;:::-;14500:2;14495:3;14491:12;14484:19;;14143:366;;;:::o;14515:108::-;14592:24;14610:5;14592:24;:::i;:::-;14587:3;14580:37;14515:108;;:::o;14629:118::-;14716:24;14734:5;14716:24;:::i;:::-;14711:3;14704:37;14629:118;;:::o;14753:157::-;14858:45;14878:24;14896:5;14878:24;:::i;:::-;14858:45;:::i;:::-;14853:3;14846:58;14753:157;;:::o;14916:538::-;15084:3;15099:75;15170:3;15161:6;15099:75;:::i;:::-;15199:2;15194:3;15190:12;15183:19;;15212:75;15283:3;15274:6;15212:75;:::i;:::-;15312:2;15307:3;15303:12;15296:19;;15325:75;15396:3;15387:6;15325:75;:::i;:::-;15425:2;15420:3;15416:12;15409:19;;15445:3;15438:10;;14916:538;;;;;;:::o;15460:254::-;15569:4;15607:2;15596:9;15592:18;15584:26;;15620:87;15704:1;15693:9;15689:17;15680:6;15620:87;:::i;:::-;15460:254;;;;:::o;15720:751::-;15943:4;15981:3;15970:9;15966:19;15958:27;;15995:71;16063:1;16052:9;16048:17;16039:6;15995:71;:::i;:::-;16076:72;16144:2;16133:9;16129:18;16120:6;16076:72;:::i;:::-;16158;16226:2;16215:9;16211:18;16202:6;16158:72;:::i;:::-;16240;16308:2;16297:9;16293:18;16284:6;16240:72;:::i;:::-;16360:9;16354:4;16350:20;16344:3;16333:9;16329:19;16322:49;16388:76;16459:4;16450:6;16388:76;:::i;:::-;16380:84;;15720:751;;;;;;;;:::o;16477:373::-;16620:4;16658:2;16647:9;16643:18;16635:26;;16707:9;16701:4;16697:20;16693:1;16682:9;16678:17;16671:47;16735:108;16838:4;16829:6;16735:108;:::i;:::-;16727:116;;16477:373;;;;:::o;16856:634::-;17077:4;17115:2;17104:9;17100:18;17092:26;;17164:9;17158:4;17154:20;17150:1;17139:9;17135:17;17128:47;17192:108;17295:4;17286:6;17192:108;:::i;:::-;17184:116;;17347:9;17341:4;17337:20;17332:2;17321:9;17317:18;17310:48;17375:108;17478:4;17469:6;17375:108;:::i;:::-;17367:116;;16856:634;;;;;:::o;17496:210::-;17583:4;17621:2;17610:9;17606:18;17598:26;;17634:65;17696:1;17685:9;17681:17;17672:6;17634:65;:::i;:::-;17496:210;;;;:::o;17712:240::-;17814:4;17852:2;17841:9;17837:18;17829:26;;17865:80;17942:1;17931:9;17927:17;17918:6;17865:80;:::i;:::-;17712:240;;;;:::o;17958:313::-;18071:4;18109:2;18098:9;18094:18;18086:26;;18158:9;18152:4;18148:20;18144:1;18133:9;18129:17;18122:47;18186:78;18259:4;18250:6;18186:78;:::i;:::-;18178:86;;17958:313;;;;:::o;18277:419::-;18443:4;18481:2;18470:9;18466:18;18458:26;;18530:9;18524:4;18520:20;18516:1;18505:9;18501:17;18494:47;18558:131;18684:4;18558:131;:::i;:::-;18550:139;;18277:419;;;:::o;18702:::-;18868:4;18906:2;18895:9;18891:18;18883:26;;18955:9;18949:4;18945:20;18941:1;18930:9;18926:17;18919:47;18983:131;19109:4;18983:131;:::i;:::-;18975:139;;18702:419;;;:::o;19127:::-;19293:4;19331:2;19320:9;19316:18;19308:26;;19380:9;19374:4;19370:20;19366:1;19355:9;19351:17;19344:47;19408:131;19534:4;19408:131;:::i;:::-;19400:139;;19127:419;;;:::o;19552:::-;19718:4;19756:2;19745:9;19741:18;19733:26;;19805:9;19799:4;19795:20;19791:1;19780:9;19776:17;19769:47;19833:131;19959:4;19833:131;:::i;:::-;19825:139;;19552:419;;;:::o;19977:::-;20143:4;20181:2;20170:9;20166:18;20158:26;;20230:9;20224:4;20220:20;20216:1;20205:9;20201:17;20194:47;20258:131;20384:4;20258:131;:::i;:::-;20250:139;;19977:419;;;:::o;20402:::-;20568:4;20606:2;20595:9;20591:18;20583:26;;20655:9;20649:4;20645:20;20641:1;20630:9;20626:17;20619:47;20683:131;20809:4;20683:131;:::i;:::-;20675:139;;20402:419;;;:::o;20827:::-;20993:4;21031:2;21020:9;21016:18;21008:26;;21080:9;21074:4;21070:20;21066:1;21055:9;21051:17;21044:47;21108:131;21234:4;21108:131;:::i;:::-;21100:139;;20827:419;;;:::o;21252:::-;21418:4;21456:2;21445:9;21441:18;21433:26;;21505:9;21499:4;21495:20;21491:1;21480:9;21476:17;21469:47;21533:131;21659:4;21533:131;:::i;:::-;21525:139;;21252:419;;;:::o;21677:::-;21843:4;21881:2;21870:9;21866:18;21858:26;;21930:9;21924:4;21920:20;21916:1;21905:9;21901:17;21894:47;21958:131;22084:4;21958:131;:::i;:::-;21950:139;;21677:419;;;:::o;22102:::-;22268:4;22306:2;22295:9;22291:18;22283:26;;22355:9;22349:4;22345:20;22341:1;22330:9;22326:17;22319:47;22383:131;22509:4;22383:131;:::i;:::-;22375:139;;22102:419;;;:::o;22527:::-;22693:4;22731:2;22720:9;22716:18;22708:26;;22780:9;22774:4;22770:20;22766:1;22755:9;22751:17;22744:47;22808:131;22934:4;22808:131;:::i;:::-;22800:139;;22527:419;;;:::o;22952:222::-;23045:4;23083:2;23072:9;23068:18;23060:26;;23096:71;23164:1;23153:9;23149:17;23140:6;23096:71;:::i;:::-;22952:222;;;;:::o;23180:332::-;23301:4;23339:2;23328:9;23324:18;23316:26;;23352:71;23420:1;23409:9;23405:17;23396:6;23352:71;:::i;:::-;23433:72;23501:2;23490:9;23486:18;23477:6;23433:72;:::i;:::-;23180:332;;;;;:::o;23518:129::-;23552:6;23579:20;;:::i;:::-;23569:30;;23608:33;23636:4;23628:6;23608:33;:::i;:::-;23518:129;;;:::o;23653:75::-;23686:6;23719:2;23713:9;23703:19;;23653:75;:::o;23734:311::-;23811:4;23901:18;23893:6;23890:30;23887:56;;;23923:18;;:::i;:::-;23887:56;23973:4;23965:6;23961:17;23953:25;;24033:4;24027;24023:15;24015:23;;23734:311;;;:::o;24051:::-;24128:4;24218:18;24210:6;24207:30;24204:56;;;24240:18;;:::i;:::-;24204:56;24290:4;24282:6;24278:17;24270:25;;24350:4;24344;24340:15;24332:23;;24051:311;;;:::o;24368:132::-;24435:4;24458:3;24450:11;;24488:4;24483:3;24479:14;24471:22;;24368:132;;;:::o;24506:114::-;24573:6;24607:5;24601:12;24591:22;;24506:114;;;:::o;24626:98::-;24677:6;24711:5;24705:12;24695:22;;24626:98;;;:::o;24730:99::-;24782:6;24816:5;24810:12;24800:22;;24730:99;;;:::o;24835:113::-;24905:4;24937;24932:3;24928:14;24920:22;;24835:113;;;:::o;24954:184::-;25053:11;25087:6;25082:3;25075:19;25127:4;25122:3;25118:14;25103:29;;24954:184;;;;:::o;25144:168::-;25227:11;25261:6;25256:3;25249:19;25301:4;25296:3;25292:14;25277:29;;25144:168;;;;:::o;25318:169::-;25402:11;25436:6;25431:3;25424:19;25476:4;25471:3;25467:14;25452:29;;25318:169;;;;:::o;25493:305::-;25533:3;25552:20;25570:1;25552:20;:::i;:::-;25547:25;;25586:20;25604:1;25586:20;:::i;:::-;25581:25;;25740:1;25672:66;25668:74;25665:1;25662:81;25659:107;;;25746:18;;:::i;:::-;25659:107;25790:1;25787;25783:9;25776:16;;25493:305;;;;:::o;25804:185::-;25844:1;25861:20;25879:1;25861:20;:::i;:::-;25856:25;;25895:20;25913:1;25895:20;:::i;:::-;25890:25;;25934:1;25924:35;;25939:18;;:::i;:::-;25924:35;25981:1;25978;25974:9;25969:14;;25804:185;;;;:::o;25995:348::-;26035:7;26058:20;26076:1;26058:20;:::i;:::-;26053:25;;26092:20;26110:1;26092:20;:::i;:::-;26087:25;;26280:1;26212:66;26208:74;26205:1;26202:81;26197:1;26190:9;26183:17;26179:105;26176:131;;;26287:18;;:::i;:::-;26176:131;26335:1;26332;26328:9;26317:20;;25995:348;;;;:::o;26349:96::-;26386:7;26415:24;26433:5;26415:24;:::i;:::-;26404:35;;26349:96;;;:::o;26451:104::-;26496:7;26525:24;26543:5;26525:24;:::i;:::-;26514:35;;26451:104;;;:::o;26561:90::-;26595:7;26638:5;26631:13;26624:21;26613:32;;26561:90;;;:::o;26657:149::-;26693:7;26733:66;26726:5;26722:78;26711:89;;26657:149;;;:::o;26812:133::-;26860:7;26889:5;26878:16;;26895:44;26933:5;26895:44;:::i;:::-;26812:133;;;:::o;26951:126::-;26988:7;27028:42;27021:5;27017:54;27006:65;;26951:126;;;:::o;27083:77::-;27120:7;27149:5;27138:16;;27083:77;;;:::o;27166:133::-;27225:9;27258:35;27287:5;27258:35;:::i;:::-;27245:48;;27166:133;;;:::o;27305:307::-;27373:1;27383:113;27397:6;27394:1;27391:13;27383:113;;;27482:1;27477:3;27473:11;27467:18;27463:1;27458:3;27454:11;27447:39;27419:2;27416:1;27412:10;27407:15;;27383:113;;;27514:6;27511:1;27508:13;27505:101;;;27594:1;27585:6;27580:3;27576:16;27569:27;27505:101;27354:258;27305:307;;;:::o;27618:320::-;27662:6;27699:1;27693:4;27689:12;27679:22;;27746:1;27740:4;27736:12;27767:18;27757:81;;27823:4;27815:6;27811:17;27801:27;;27757:81;27885:2;27877:6;27874:14;27854:18;27851:38;27848:84;;;27904:18;;:::i;:::-;27848:84;27669:269;27618:320;;;:::o;27944:281::-;28027:27;28049:4;28027:27;:::i;:::-;28019:6;28015:40;28157:6;28145:10;28142:22;28121:18;28109:10;28106:34;28103:62;28100:88;;;28168:18;;:::i;:::-;28100:88;28208:10;28204:2;28197:22;27987:238;27944:281;;:::o;28231:233::-;28270:3;28293:24;28311:5;28293:24;:::i;:::-;28284:33;;28339:66;28332:5;28329:77;28326:103;;;28409:18;;:::i;:::-;28326:103;28456:1;28449:5;28445:13;28438:20;;28231:233;;;:::o;28470:100::-;28509:7;28538:26;28558:5;28538:26;:::i;:::-;28527:37;;28470:100;;;:::o;28576:94::-;28615:7;28644:20;28658:5;28644:20;:::i;:::-;28633:31;;28576:94;;;:::o;28676:79::-;28715:7;28744:5;28733:16;;28676:79;;;:::o;28761:176::-;28793:1;28810:20;28828:1;28810:20;:::i;:::-;28805:25;;28844:20;28862:1;28844:20;:::i;:::-;28839:25;;28883:1;28873:35;;28888:18;;:::i;:::-;28873:35;28929:1;28926;28922:9;28917:14;;28761:176;;;;:::o;28943:180::-;28991:77;28988:1;28981:88;29088:4;29085:1;29078:15;29112:4;29109:1;29102:15;29129:180;29177:77;29174:1;29167:88;29274:4;29271:1;29264:15;29298:4;29295:1;29288:15;29315:180;29363:77;29360:1;29353:88;29460:4;29457:1;29450:15;29484:4;29481:1;29474:15;29501:180;29549:77;29546:1;29539:88;29646:4;29643:1;29636:15;29670:4;29667:1;29660:15;29687:180;29735:77;29732:1;29725:88;29832:4;29829:1;29822:15;29856:4;29853:1;29846:15;29873:180;29921:77;29918:1;29911:88;30018:4;30015:1;30008:15;30042:4;30039:1;30032:15;30059:183;30094:3;30132:1;30114:16;30111:23;30108:128;;;30170:1;30167;30164;30149:23;30192:34;30223:1;30217:8;30192:34;:::i;:::-;30185:41;;30108:128;30059:183;:::o;30248:117::-;30357:1;30354;30347:12;30371:117;30480:1;30477;30470:12;30494:117;30603:1;30600;30593:12;30617:117;30726:1;30723;30716:12;30740:102;30781:6;30832:2;30828:7;30823:2;30816:5;30812:14;30808:28;30798:38;;30740:102;;;:::o;30848:94::-;30881:8;30929:5;30925:2;30921:14;30900:35;;30848:94;;;:::o;30948:106::-;30992:8;31041:5;31036:3;31032:15;31011:36;;30948:106;;;:::o;31060:239::-;31200:34;31196:1;31188:6;31184:14;31177:58;31269:22;31264:2;31256:6;31252:15;31245:47;31060:239;:::o;31305:227::-;31445:34;31441:1;31433:6;31429:14;31422:58;31514:10;31509:2;31501:6;31497:15;31490:35;31305:227;:::o;31538:230::-;31678:34;31674:1;31666:6;31662:14;31655:58;31747:13;31742:2;31734:6;31730:15;31723:38;31538:230;:::o;31774:223::-;31914:34;31910:1;31902:6;31898:14;31891:58;31983:6;31978:2;31970:6;31966:15;31959:31;31774:223;:::o;32003:231::-;32143:34;32139:1;32131:6;32127:14;32120:58;32212:14;32207:2;32199:6;32195:15;32188:39;32003:231;:::o;32240:228::-;32380:34;32376:1;32368:6;32364:14;32357:58;32449:11;32444:2;32436:6;32432:15;32425:36;32240:228;:::o;32474:222::-;32614:34;32610:1;32602:6;32598:14;32591:58;32683:5;32678:2;32670:6;32666:15;32659:30;32474:222;:::o;32702:228::-;32842:34;32838:1;32830:6;32826:14;32819:58;32911:11;32906:2;32898:6;32894:15;32887:36;32702:228;:::o;32936:::-;33076:34;33072:1;33064:6;33060:14;33053:58;33145:11;33140:2;33132:6;33128:15;33121:36;32936:228;:::o;33170:227::-;33310:34;33306:1;33298:6;33294:14;33287:58;33379:10;33374:2;33366:6;33362:15;33355:35;33170:227;:::o;33403:220::-;33543:34;33539:1;33531:6;33527:14;33520:58;33612:3;33607:2;33599:6;33595:15;33588:28;33403:220;:::o;33629:711::-;33668:3;33706:4;33688:16;33685:26;33682:39;;;33714:5;;33682:39;33743:20;;:::i;:::-;33818:1;33800:16;33796:24;33793:1;33787:4;33772:49;33851:4;33845:11;33950:16;33943:4;33935:6;33931:17;33928:39;33895:18;33887:6;33884:30;33868:113;33865:146;;;33996:5;;;;33865:146;34042:6;34036:4;34032:17;34078:3;34072:10;34105:18;34097:6;34094:30;34091:43;;;34127:5;;;;;;34091:43;34175:6;34168:4;34163:3;34159:14;34155:27;34234:1;34216:16;34212:24;34206:4;34202:35;34197:3;34194:44;34191:57;;;34241:5;;;;;;;34191:57;34258;34306:6;34300:4;34296:17;34288:6;34284:30;34278:4;34258:57;:::i;:::-;34331:3;34324:10;;33672:668;;;;;33629:711;;:::o;34346:116::-;34430:1;34423:5;34420:12;34410:46;;34436:18;;:::i;:::-;34410:46;34346:116;:::o;34468:122::-;34541:24;34559:5;34541:24;:::i;:::-;34534:5;34531:35;34521:63;;34580:1;34577;34570:12;34521:63;34468:122;:::o;34596:116::-;34666:21;34681:5;34666:21;:::i;:::-;34659:5;34656:32;34646:60;;34702:1;34699;34692:12;34646:60;34596:116;:::o;34718:120::-;34790:23;34807:5;34790:23;:::i;:::-;34783:5;34780:34;34770:62;;34828:1;34825;34818:12;34770:62;34718:120;:::o;34844:122::-;34917:24;34935:5;34917:24;:::i;:::-;34910:5;34907:35;34897:63;;34956:1;34953;34946:12;34897:63;34844:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2111600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CheckNftStatus(address,uint256)": "3318",
								"CurrentStatus()": "2604",
								"IsPaused()": "2516",
								"Owner()": "2631",
								"_deductOnyxNftFee(uint256)": "infinite",
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"randomMint()": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "661"
							},
							"internal": {
								"random()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 518,
									"end": 533,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 518,
									"end": 533,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 556,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 580,
									"end": 581,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 563,
									"end": 581,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 563,
									"end": 581,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1078,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1078,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1200,
									"end": 1204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1197,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1230,
									"end": 1240,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1219,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1214,
									"end": 1219,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1214,
									"end": 1241,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1150,
									"end": 1248,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 1919,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207feecb8d27367b39482b1ab1c745515ab3058cdf6174218e0a38e3763f88f80864736f6c63430008070033",
									".code": [
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "7E1EAABF"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "D206B944"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "D206B944"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "E3306A6F"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "F5298ACA"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "7E1EAABF"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "B4A99A4E"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "1309A563"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "67C510C9"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "6B20C454"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 1919,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 392,
											"end": 710,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1538,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1708,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1758,
											"end": 1766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3353,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 886,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 886,
											"end": 898,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 898,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 886,
											"end": 898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 875,
											"end": 882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 875,
											"end": 898,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 875,
											"end": 941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 875,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 875,
											"end": 941,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 875,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 928,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 928,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 928,
											"end": 940,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 928,
											"end": 940,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 928,
											"end": 940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 875,
											"end": 941,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 875,
											"end": 941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 854,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1042,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1711,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1711,
											"end": 1719,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1719,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1711,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1735,
											"end": 1740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "506C6174696E756D000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1788,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "476F6C6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "53696C7665720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1827,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1777,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1732,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1873,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1873,
											"end": 1884,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1846,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1916,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1429,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 537,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 526,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 526,
											"end": 549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 526,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 526,
											"end": 549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 526,
											"end": 549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 526,
											"end": 592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 526,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 526,
											"end": 592,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 526,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 553,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 570,
											"end": 577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 579,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 579,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 579,
											"end": 591,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 579,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 553,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 553,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 553,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 526,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 526,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 505,
											"end": 659,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 505,
											"end": 659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 684,
											"end": 691,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 693,
											"end": 695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 678,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 678,
											"end": 703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 678,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 392,
											"end": 710,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6908,
											"end": 7775,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6908,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7059,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 7047,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7145,
											"end": 7152,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7145,
											"end": 7159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7134,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7141,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7159,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7123,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 7234,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7234,
											"end": 7246,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7234,
											"end": 7246,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 7234,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7278,
											"end": 7286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7292,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7311,
											"end": 7318,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7257,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7368,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7446,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7464,
											"end": 7483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7498,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7499,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7504,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7464,
											"end": 7505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7464,
											"end": 7505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7548,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7548,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7519,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7673,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7673,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7751,
											"end": 7752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7741,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH",
											"source": 3,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7713,
											"end": 7768,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 7775,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1442,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1442,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1542,
											"end": 1557,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1569,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1581,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1571,
											"end": 1581,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1583,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1510,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1639,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5431,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5504,
											"end": 5520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5504,
											"end": 5535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5504,
											"end": 5535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5567,
											"end": 5575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5593,
											"end": 5614,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5593,
											"end": 5614,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5593,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5616,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5616,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5616,
											"end": 5641,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5616,
											"end": 5641,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5616,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5647,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5546,
											"end": 5648,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 5648,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5546,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5670,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5715,
											"end": 5723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH",
											"source": 3,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5741,
											"end": 5743,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5752,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5793,
											"end": 5801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5762,
											"end": 5836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5762,
											"end": 5836,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5762,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5843,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8060,
											"end": 8068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8162,
											"end": 8170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8205,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 8217,
											"end": 8225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6084,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6084,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6198,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6294,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6294,
											"end": 6306,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6294,
											"end": 6306,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6294,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6338,
											"end": 6346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6352,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6317,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6465,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6489,
											"end": 6500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6489,
											"end": 6510,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6489,
											"end": 6510,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6481,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6621,
											"end": 6627,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6627,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6595,
											"end": 6597,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6598,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6627,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6682,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6668,
											"end": 6676,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6706,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6707,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6714,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9381,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10917,
											"end": 11110,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10917,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10983,
											"end": 10999,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 11011,
											"end": 11033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11051,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11036,
											"end": 11052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11011,
											"end": 11052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11011,
											"end": 11052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11098,
											"end": 11103,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11091,
											"end": 11103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11091,
											"end": 11103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11091,
											"end": 11103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10917,
											"end": 11110,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10917,
											"end": 11110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10917,
											"end": 11110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10917,
											"end": 11110,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9594,
											"end": 9596,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9594,
											"end": 9609,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9594,
											"end": 9609,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9594,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9590,
											"end": 10106,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9590,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9590,
											"end": 10106,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9646,
											"end": 9648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9667,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9629,
											"end": 9667,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9667,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 9668,
											"end": 9676,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9696,
											"end": 9700,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 9629,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A0"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9972,
											"end": 9978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10081,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 9625,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9762,
											"end": 9805,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 9762,
											"end": 9805,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9762,
											"end": 9805,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9805,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9746,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9829,
											"end": 9879,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9746,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9590,
											"end": 10106,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9590,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 10112,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "119"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "253"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "253"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "257"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "258"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "257"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "258"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "260"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "260"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1568,
											"end": 1588,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1730,
											"end": 1735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2019,
											"end": 2022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2008,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2549,
											"end": 2554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2637,
											"end": 2657,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2919,
											"end": 2948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2919,
											"end": 2948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3127,
											"end": 3129,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3124,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3214,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3095,
											"end": 3214,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3133,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3133,
											"end": 3212,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3212,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3133,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3214,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3095,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3331,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3382,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3440,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3351,
											"end": 3469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3476,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3662,
											"end": 3671,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3660,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3649,
											"end": 3672,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3677,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3761,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3642,
											"end": 3761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3680,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3680,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3680,
											"end": 3759,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3759,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 3680,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3761,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3642,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3870,
											"end": 3877,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 3859,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3825,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3825,
											"end": 3878,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3825,
											"end": 3878,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3825,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 3878,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 3878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3771,
											"end": 3888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3959,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3975,
											"end": 4005,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3972,
											"end": 4089,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3972,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3972,
											"end": 4089,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3972,
											"end": 4089,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3972,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4183,
											"end": 4190,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4180,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4163,
											"end": 4172,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4113,
											"end": 4191,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4113,
											"end": 4191,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4113,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 4201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4270,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4266,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4272,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4291,
											"end": 4297,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4318,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4402,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4285,
											"end": 4402,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4321,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4321,
											"end": 4400,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4321,
											"end": 4400,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4321,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4285,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4426,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4426,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4426,
											"end": 4504,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4426,
											"end": 4504,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4426,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4416,
											"end": 4504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4416,
											"end": 4504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3482,
											"end": 4521,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4592,
											"end": 4598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4651,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 4635,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4624,
											"end": 4647,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4652,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4736,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4617,
											"end": 4736,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4655,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4655,
											"end": 4734,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4655,
											"end": 4734,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4655,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4736,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4617,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4834,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4800,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4800,
											"end": 4853,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4800,
											"end": 4853,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4800,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4970,
											"end": 4977,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4959,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4946,
											"end": 4968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4928,
											"end": 4978,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4928,
											"end": 4978,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4928,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 4988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4995,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5123,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5101,
											"end": 5124,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5129,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5213,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 5094,
											"end": 5213,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5132,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 5132,
											"end": 5211,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5132,
											"end": 5211,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5132,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5213,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 5094,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5322,
											"end": 5329,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5313,
											"end": 5319,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5311,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5277,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 5277,
											"end": 5330,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5330,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5277,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5330,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5223,
											"end": 5340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5426,
											"end": 5448,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5405,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5405,
											"end": 5458,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5405,
											"end": 5458,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5405,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5458,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5350,
											"end": 5468,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5475,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5572,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 5878,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5947,
											"end": 5954,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5927,
											"end": 5936,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 5945,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5902,
											"end": 5955,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5902,
											"end": 5955,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5902,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5955,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6006,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 6075,
											"end": 6082,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 6093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5481,
											"end": 6100,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6224,
											"end": 6230,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6283,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6269,
											"end": 6278,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6260,
											"end": 6267,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6256,
											"end": 6279,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6284,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6249,
											"end": 6368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6249,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 6249,
											"end": 6368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6287,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6287,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6287,
											"end": 6366,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6287,
											"end": 6366,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6287,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6249,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 6249,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6407,
											"end": 6438,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6457,
											"end": 6463,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6454,
											"end": 6484,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6568,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 6451,
											"end": 6568,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6487,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 6487,
											"end": 6566,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6487,
											"end": 6566,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6487,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6568,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 6451,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6662,
											"end": 6669,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6638,
											"end": 6660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6670,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6378,
											"end": 6680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6719,
											"end": 6751,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6770,
											"end": 6776,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6797,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6764,
											"end": 6881,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6764,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6764,
											"end": 6881,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6800,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6764,
											"end": 6881,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6764,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 6972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6955,
											"end": 6964,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6951,
											"end": 6973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6905,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6983,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 7000,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7111,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7116,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7239,
											"end": 7240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7264,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 7264,
											"end": 7316,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7264,
											"end": 7316,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7264,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7006,
											"end": 7333,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7408,
											"end": 7414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7436,
											"end": 7443,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7432,
											"end": 7455,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7428,
											"end": 7460,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7544,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 7425,
											"end": 7544,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7463,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 7463,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 7463,
											"end": 7542,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7463,
											"end": 7542,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 7463,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7544,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 7425,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7663,
											"end": 7670,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7654,
											"end": 7660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 7652,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 7608,
											"end": 7671,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7608,
											"end": 7671,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7608,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7598,
											"end": 7671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7598,
											"end": 7671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7554,
											"end": 7681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7688,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7777,
											"end": 7800,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7773,
											"end": 7805,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7889,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7770,
											"end": 7889,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7808,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7808,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 7808,
											"end": 7887,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7808,
											"end": 7887,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7808,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7889,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7770,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 7998,
											"end": 8005,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7978,
											"end": 7987,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 7996,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 7953,
											"end": 8006,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7953,
											"end": 8006,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 7953,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7943,
											"end": 8006,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7943,
											"end": 8006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7899,
											"end": 8016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7694,
											"end": 8023,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8098,
											"end": 8108,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 8119,
											"end": 8165,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8119,
											"end": 8165,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 8119,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8197,
											"end": 8201,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8195,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8188,
											"end": 8202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8174,
											"end": 8202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8174,
											"end": 8202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8208,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8214,
											"end": 8356,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8214,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8343,
											"end": 8348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8317,
											"end": 8349,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8317,
											"end": 8349,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8317,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8312,
											"end": 8315,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8305,
											"end": 8350,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8214,
											"end": 8356,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8362,
											"end": 8480,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8362,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8467,
											"end": 8472,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8449,
											"end": 8473,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8449,
											"end": 8473,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8449,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8444,
											"end": 8447,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8474,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8480,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8486,
											"end": 8643,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 8486,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8591,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 8611,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 8629,
											"end": 8634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8611,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8611,
											"end": 8635,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8611,
											"end": 8635,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 8611,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8591,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 8591,
											"end": 8636,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8591,
											"end": 8636,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 8591,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8586,
											"end": 8589,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8579,
											"end": 8637,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8486,
											"end": 8643,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8486,
											"end": 8643,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8486,
											"end": 8643,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 8976,
											"end": 8982,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 8897,
											"end": 8983,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8897,
											"end": 8983,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 8897,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8890,
											"end": 8983,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8890,
											"end": 8983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 9057,
											"end": 9062,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 9007,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9086,
											"end": 9093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9127,
											"end": 9133,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9124,
											"end": 9125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9121,
											"end": 9134,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9210,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 9289,
											"end": 9292,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9274,
											"end": 9287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 9230,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9293,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 9369,
											"end": 9375,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 9316,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9306,
											"end": 9376,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9306,
											"end": 9376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9162,
											"end": 9386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9149,
											"end": 9150,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9146,
											"end": 9147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 9102,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9106,
											"end": 9120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9405,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8803,
											"end": 9411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8803,
											"end": 9411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8803,
											"end": 9411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8679,
											"end": 9411,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9417,
											"end": 9526,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9417,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9498,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9513,
											"end": 9518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9498,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 9498,
											"end": 9519,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9498,
											"end": 9519,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9498,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9493,
											"end": 9496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9520,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9417,
											"end": 9526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9417,
											"end": 9526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9417,
											"end": 9526,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9646,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9678,
											"end": 9683,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9646,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 9646,
											"end": 9684,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9646,
											"end": 9684,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9646,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9700,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9758,
											"end": 9761,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9700,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9700,
											"end": 9770,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9700,
											"end": 9770,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 9700,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 9770,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 9770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9819,
											"end": 9822,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9812,
											"end": 9816,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9810,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 9779,
											"end": 9831,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9779,
											"end": 9831,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9779,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9856,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9878,
											"end": 9884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9856,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 9856,
											"end": 9885,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9856,
											"end": 9885,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9856,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9851,
											"end": 9854,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9847,
											"end": 9886,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9622,
											"end": 9892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9892,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9898,
											"end": 10047,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 9898,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9994,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10034,
											"end": 10039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9994,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 9994,
											"end": 10040,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9994,
											"end": 10040,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 9994,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9989,
											"end": 9992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9982,
											"end": 10041,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9898,
											"end": 10047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9898,
											"end": 10047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9898,
											"end": 10047,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10141,
											"end": 10144,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10169,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 10202,
											"end": 10207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10169,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 10169,
											"end": 10208,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10169,
											"end": 10208,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 10169,
											"end": 10208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10224,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 10288,
											"end": 10294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10283,
											"end": 10286,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10224,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 10224,
											"end": 10295,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10224,
											"end": 10295,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 10224,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10217,
											"end": 10295,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10217,
											"end": 10295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10304,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 10349,
											"end": 10355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10344,
											"end": 10347,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10337,
											"end": 10341,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10330,
											"end": 10335,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10342,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10304,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 10304,
											"end": 10356,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10304,
											"end": 10356,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 10304,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10381,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 10403,
											"end": 10409,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10381,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 10381,
											"end": 10410,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10381,
											"end": 10410,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 10381,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10379,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10365,
											"end": 10411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10365,
											"end": 10411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10145,
											"end": 10417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10053,
											"end": 10417,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10423,
											"end": 10789,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 10423,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10565,
											"end": 10568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10650,
											"end": 10652,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 10645,
											"end": 10648,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10586,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 10586,
											"end": 10653,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10586,
											"end": 10653,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10586,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10579,
											"end": 10653,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10579,
											"end": 10653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10662,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10751,
											"end": 10754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10662,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10662,
											"end": 10755,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10662,
											"end": 10755,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10662,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10780,
											"end": 10782,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10775,
											"end": 10778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10789,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10795,
											"end": 11161,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10795,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10937,
											"end": 10940,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 11022,
											"end": 11024,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 11017,
											"end": 11020,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10958,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 10958,
											"end": 11025,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10958,
											"end": 11025,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10958,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11034,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 11123,
											"end": 11126,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11034,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 11034,
											"end": 11127,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11034,
											"end": 11127,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 11034,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11154,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11147,
											"end": 11150,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11136,
											"end": 11155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11136,
											"end": 11155,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 11161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 11161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 11161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 11161,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 11394,
											"end": 11396,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 11389,
											"end": 11392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 11330,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11323,
											"end": 11397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11323,
											"end": 11397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11495,
											"end": 11498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11406,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11515,
											"end": 11527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11533,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11539,
											"end": 11905,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 11539,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11681,
											"end": 11684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11766,
											"end": 11768,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11761,
											"end": 11764,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11702,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11702,
											"end": 11769,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11702,
											"end": 11769,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 11702,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11695,
											"end": 11769,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11695,
											"end": 11769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11778,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 11867,
											"end": 11870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11778,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11778,
											"end": 11871,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11778,
											"end": 11871,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 11778,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11898,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11891,
											"end": 11894,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11887,
											"end": 11899,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11880,
											"end": 11899,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11880,
											"end": 11899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11539,
											"end": 11905,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11539,
											"end": 11905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11539,
											"end": 11905,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11539,
											"end": 11905,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11911,
											"end": 12277,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11911,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12053,
											"end": 12056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 12138,
											"end": 12140,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 12133,
											"end": 12136,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12074,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 12074,
											"end": 12141,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12074,
											"end": 12141,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 12074,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12141,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12150,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 12239,
											"end": 12242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12150,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 12150,
											"end": 12243,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12150,
											"end": 12243,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 12150,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12268,
											"end": 12270,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12263,
											"end": 12266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12259,
											"end": 12271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12277,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12277,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12277,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12283,
											"end": 12649,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 12283,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12425,
											"end": 12428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12446,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 12510,
											"end": 12512,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 12505,
											"end": 12508,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12446,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 12446,
											"end": 12513,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12446,
											"end": 12513,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 12446,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12439,
											"end": 12513,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12439,
											"end": 12513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12522,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 12611,
											"end": 12614,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12522,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 12522,
											"end": 12615,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12522,
											"end": 12615,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 12522,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12640,
											"end": 12642,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12635,
											"end": 12638,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 12643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12624,
											"end": 12643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12624,
											"end": 12643,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12283,
											"end": 12649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12283,
											"end": 12649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12283,
											"end": 12649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12283,
											"end": 12649,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12655,
											"end": 13021,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 12655,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12797,
											"end": 12800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12818,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 12882,
											"end": 12884,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 12877,
											"end": 12880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 12818,
											"end": 12885,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12818,
											"end": 12885,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 12818,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12811,
											"end": 12885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12811,
											"end": 12885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12894,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 12983,
											"end": 12986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12894,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 12894,
											"end": 12987,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12894,
											"end": 12987,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 12894,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13012,
											"end": 13014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13007,
											"end": 13010,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13003,
											"end": 13015,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 13015,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 13015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12655,
											"end": 13021,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12655,
											"end": 13021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12655,
											"end": 13021,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12655,
											"end": 13021,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13027,
											"end": 13393,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 13027,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13169,
											"end": 13172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 13254,
											"end": 13256,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 13249,
											"end": 13252,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13190,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13190,
											"end": 13257,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13190,
											"end": 13257,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 13190,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13257,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 13266,
											"end": 13359,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13266,
											"end": 13359,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 13266,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13384,
											"end": 13386,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13379,
											"end": 13382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13375,
											"end": 13387,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13368,
											"end": 13387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13368,
											"end": 13387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13027,
											"end": 13393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13027,
											"end": 13393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13027,
											"end": 13393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13027,
											"end": 13393,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13541,
											"end": 13544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 13621,
											"end": 13624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13555,
											"end": 13629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13555,
											"end": 13629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 13727,
											"end": 13730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13756,
											"end": 13758,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13751,
											"end": 13754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13747,
											"end": 13759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13771,
											"end": 14137,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 13771,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13913,
											"end": 13916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13934,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 13998,
											"end": 14000,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 13993,
											"end": 13996,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13934,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13934,
											"end": 14001,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13934,
											"end": 14001,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 13934,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13927,
											"end": 14001,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13927,
											"end": 14001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14010,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 14099,
											"end": 14102,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14010,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 14010,
											"end": 14103,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14010,
											"end": 14103,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 14010,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14128,
											"end": 14130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14123,
											"end": 14126,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14119,
											"end": 14131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14112,
											"end": 14131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14112,
											"end": 14131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13771,
											"end": 14137,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13771,
											"end": 14137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13771,
											"end": 14137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13771,
											"end": 14137,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14143,
											"end": 14509,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 14143,
											"end": 14509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14285,
											"end": 14288,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14306,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 14370,
											"end": 14372,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14306,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 14306,
											"end": 14373,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14306,
											"end": 14373,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 14306,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14299,
											"end": 14373,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14299,
											"end": 14373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14382,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 14471,
											"end": 14474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14382,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 14382,
											"end": 14475,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14382,
											"end": 14475,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 14382,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14500,
											"end": 14502,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14495,
											"end": 14498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14491,
											"end": 14503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14484,
											"end": 14503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14484,
											"end": 14503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14509,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14509,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14509,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14515,
											"end": 14623,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 14515,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14592,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 14610,
											"end": 14615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14592,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 14592,
											"end": 14616,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14592,
											"end": 14616,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 14592,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14587,
											"end": 14590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14580,
											"end": 14617,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14515,
											"end": 14623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14515,
											"end": 14623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14515,
											"end": 14623,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14629,
											"end": 14747,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 14629,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14716,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14734,
											"end": 14739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14716,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 14716,
											"end": 14740,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14716,
											"end": 14740,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14716,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14711,
											"end": 14714,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14741,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14629,
											"end": 14747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14629,
											"end": 14747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14629,
											"end": 14747,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14753,
											"end": 14910,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 14753,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 14878,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 14896,
											"end": 14901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14878,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 14878,
											"end": 14902,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14878,
											"end": 14902,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 14878,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 14858,
											"end": 14903,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14858,
											"end": 14903,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 14858,
											"end": 14903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14853,
											"end": 14856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14846,
											"end": 14904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14753,
											"end": 14910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14753,
											"end": 14910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14753,
											"end": 14910,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15084,
											"end": 15087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 15170,
											"end": 15173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15161,
											"end": 15167,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15099,
											"end": 15174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 15099,
											"end": 15174,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15099,
											"end": 15174,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 15099,
											"end": 15174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15199,
											"end": 15201,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15194,
											"end": 15197,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15190,
											"end": 15202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15183,
											"end": 15202,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15183,
											"end": 15202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15212,
											"end": 15287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 15283,
											"end": 15286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15274,
											"end": 15280,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15212,
											"end": 15287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 15212,
											"end": 15287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15212,
											"end": 15287,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 15212,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15314,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 15307,
											"end": 15310,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15315,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15296,
											"end": 15315,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15296,
											"end": 15315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15325,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 15396,
											"end": 15399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15387,
											"end": 15393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15325,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 15325,
											"end": 15400,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15325,
											"end": 15400,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 15325,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15425,
											"end": 15427,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15416,
											"end": 15428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15409,
											"end": 15428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15409,
											"end": 15428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15438,
											"end": 15448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15438,
											"end": 15448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14916,
											"end": 15454,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15569,
											"end": 15573,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15607,
											"end": 15609,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15592,
											"end": 15610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15584,
											"end": 15610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15584,
											"end": 15610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15620,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 15704,
											"end": 15705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15693,
											"end": 15702,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15689,
											"end": 15706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15680,
											"end": 15686,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15620,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 15620,
											"end": 15707,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15620,
											"end": 15707,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 15620,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15460,
											"end": 15714,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15943,
											"end": 15947,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15984,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 15970,
											"end": 15979,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15966,
											"end": 15985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15958,
											"end": 15985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15958,
											"end": 15985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 16063,
											"end": 16064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16048,
											"end": 16065,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16039,
											"end": 16045,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 15995,
											"end": 16066,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15995,
											"end": 16066,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 15995,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16076,
											"end": 16148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 16144,
											"end": 16146,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16133,
											"end": 16142,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16129,
											"end": 16147,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16120,
											"end": 16126,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 16076,
											"end": 16148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 16076,
											"end": 16148,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16076,
											"end": 16148,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 16076,
											"end": 16148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16158,
											"end": 16230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 16226,
											"end": 16228,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16215,
											"end": 16224,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16211,
											"end": 16229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16202,
											"end": 16208,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16158,
											"end": 16230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 16158,
											"end": 16230,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16158,
											"end": 16230,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 16158,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16240,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 16308,
											"end": 16310,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16297,
											"end": 16306,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16284,
											"end": 16290,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16240,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 16240,
											"end": 16312,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16240,
											"end": 16312,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 16240,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16360,
											"end": 16369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16354,
											"end": 16358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16350,
											"end": 16370,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16344,
											"end": 16347,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16333,
											"end": 16342,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16329,
											"end": 16348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16322,
											"end": 16371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16388,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 16459,
											"end": 16463,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16450,
											"end": 16456,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16388,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 16388,
											"end": 16464,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16388,
											"end": 16464,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 16388,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16380,
											"end": 16464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16380,
											"end": 16464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 16471,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16620,
											"end": 16624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16658,
											"end": 16660,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16643,
											"end": 16661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16635,
											"end": 16661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16635,
											"end": 16661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16707,
											"end": 16716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16701,
											"end": 16705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16697,
											"end": 16717,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16693,
											"end": 16694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16678,
											"end": 16695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16671,
											"end": 16718,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16735,
											"end": 16843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 16838,
											"end": 16842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16829,
											"end": 16835,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16735,
											"end": 16843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 16735,
											"end": 16843,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16735,
											"end": 16843,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 16735,
											"end": 16843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16727,
											"end": 16843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16727,
											"end": 16843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16850,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17077,
											"end": 17081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17115,
											"end": 17117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17104,
											"end": 17113,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17100,
											"end": 17118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17092,
											"end": 17118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17092,
											"end": 17118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17164,
											"end": 17173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17158,
											"end": 17162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17154,
											"end": 17174,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17150,
											"end": 17151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17139,
											"end": 17148,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17135,
											"end": 17152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17128,
											"end": 17175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17192,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 17295,
											"end": 17299,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17286,
											"end": 17292,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17192,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 17192,
											"end": 17300,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17192,
											"end": 17300,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 17192,
											"end": 17300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17184,
											"end": 17300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17184,
											"end": 17300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17347,
											"end": 17356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17337,
											"end": 17357,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17332,
											"end": 17334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17321,
											"end": 17330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17317,
											"end": 17335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17310,
											"end": 17358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17375,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 17478,
											"end": 17482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17469,
											"end": 17475,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17375,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 17375,
											"end": 17483,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17375,
											"end": 17483,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 17375,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17367,
											"end": 17483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17367,
											"end": 17483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17490,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17583,
											"end": 17587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17623,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17610,
											"end": 17619,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17606,
											"end": 17624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17598,
											"end": 17624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17598,
											"end": 17624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17634,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17696,
											"end": 17697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17694,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17681,
											"end": 17698,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17672,
											"end": 17678,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17634,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 17634,
											"end": 17699,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17634,
											"end": 17699,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17634,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17496,
											"end": 17706,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17814,
											"end": 17818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17852,
											"end": 17854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17841,
											"end": 17850,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17837,
											"end": 17855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17829,
											"end": 17855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17829,
											"end": 17855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17865,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 17942,
											"end": 17943,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17931,
											"end": 17940,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17927,
											"end": 17944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17918,
											"end": 17924,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17865,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 17865,
											"end": 17945,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17865,
											"end": 17945,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 17865,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17712,
											"end": 17952,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18071,
											"end": 18075,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18109,
											"end": 18111,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18098,
											"end": 18107,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18094,
											"end": 18112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18086,
											"end": 18112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18086,
											"end": 18112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18158,
											"end": 18167,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18152,
											"end": 18156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18148,
											"end": 18168,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18144,
											"end": 18145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18133,
											"end": 18142,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18129,
											"end": 18146,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18122,
											"end": 18169,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18186,
											"end": 18264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 18259,
											"end": 18263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18250,
											"end": 18256,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18186,
											"end": 18264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 18186,
											"end": 18264,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18186,
											"end": 18264,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 18186,
											"end": 18264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18178,
											"end": 18264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18178,
											"end": 18264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 18271,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 18277,
											"end": 18696,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 18277,
											"end": 18696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18443,
											"end": 18447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18481,
											"end": 18483,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18470,
											"end": 18479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18458,
											"end": 18484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18458,
											"end": 18484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18530,
											"end": 18539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18524,
											"end": 18528,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18520,
											"end": 18540,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18516,
											"end": 18517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18501,
											"end": 18518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18494,
											"end": 18541,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18558,
											"end": 18689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 18684,
											"end": 18688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18558,
											"end": 18689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 18558,
											"end": 18689,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18558,
											"end": 18689,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 18558,
											"end": 18689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18550,
											"end": 18689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18550,
											"end": 18689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18277,
											"end": 18696,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18277,
											"end": 18696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18277,
											"end": 18696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18277,
											"end": 18696,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 18702,
											"end": 19121,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 18702,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18868,
											"end": 18872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18906,
											"end": 18908,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18895,
											"end": 18904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18891,
											"end": 18909,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18883,
											"end": 18909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18883,
											"end": 18909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18955,
											"end": 18964,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18949,
											"end": 18953,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18945,
											"end": 18965,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18941,
											"end": 18942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18930,
											"end": 18939,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18926,
											"end": 18943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18919,
											"end": 18966,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18983,
											"end": 19114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 19109,
											"end": 19113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18983,
											"end": 19114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 18983,
											"end": 19114,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18983,
											"end": 19114,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 18983,
											"end": 19114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18975,
											"end": 19114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18975,
											"end": 19114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18702,
											"end": 19121,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18702,
											"end": 19121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18702,
											"end": 19121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18702,
											"end": 19121,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19127,
											"end": 19546,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 19127,
											"end": 19546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19293,
											"end": 19297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19331,
											"end": 19333,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19320,
											"end": 19329,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19316,
											"end": 19334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19308,
											"end": 19334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19308,
											"end": 19334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19380,
											"end": 19389,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19374,
											"end": 19378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19370,
											"end": 19390,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19366,
											"end": 19367,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19355,
											"end": 19364,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19351,
											"end": 19368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19344,
											"end": 19391,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19408,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 19534,
											"end": 19538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19408,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 19408,
											"end": 19539,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19408,
											"end": 19539,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 19408,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19400,
											"end": 19539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19400,
											"end": 19539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19127,
											"end": 19546,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19127,
											"end": 19546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19127,
											"end": 19546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19127,
											"end": 19546,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19718,
											"end": 19722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19756,
											"end": 19758,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19745,
											"end": 19754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19741,
											"end": 19759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19733,
											"end": 19759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19733,
											"end": 19759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19805,
											"end": 19814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19799,
											"end": 19803,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19795,
											"end": 19815,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19791,
											"end": 19792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19780,
											"end": 19789,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19776,
											"end": 19793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19769,
											"end": 19816,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 19959,
											"end": 19963,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19825,
											"end": 19964,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19825,
											"end": 19964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20147,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20181,
											"end": 20183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20170,
											"end": 20179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20166,
											"end": 20184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20158,
											"end": 20184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20158,
											"end": 20184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20230,
											"end": 20239,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20224,
											"end": 20228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20220,
											"end": 20240,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20216,
											"end": 20217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20205,
											"end": 20214,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20201,
											"end": 20218,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20194,
											"end": 20241,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 20384,
											"end": 20388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20250,
											"end": 20389,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20250,
											"end": 20389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 20402,
											"end": 20821,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 20402,
											"end": 20821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20568,
											"end": 20572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20606,
											"end": 20608,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20595,
											"end": 20604,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20591,
											"end": 20609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20583,
											"end": 20609,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20583,
											"end": 20609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20655,
											"end": 20664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20649,
											"end": 20653,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20645,
											"end": 20665,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20641,
											"end": 20642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20630,
											"end": 20639,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20626,
											"end": 20643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20619,
											"end": 20666,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20683,
											"end": 20814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 20809,
											"end": 20813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20683,
											"end": 20814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 20683,
											"end": 20814,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20683,
											"end": 20814,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 20683,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20675,
											"end": 20814,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20675,
											"end": 20814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20402,
											"end": 20821,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20402,
											"end": 20821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20402,
											"end": 20821,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20402,
											"end": 20821,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 20827,
											"end": 21246,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 20827,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20993,
											"end": 20997,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21031,
											"end": 21033,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21020,
											"end": 21029,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21016,
											"end": 21034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21008,
											"end": 21034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21008,
											"end": 21034,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21080,
											"end": 21089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21074,
											"end": 21078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21070,
											"end": 21090,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21066,
											"end": 21067,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21064,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21051,
											"end": 21068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21044,
											"end": 21091,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21108,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 21234,
											"end": 21238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21108,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 21108,
											"end": 21239,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21108,
											"end": 21239,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 21108,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21100,
											"end": 21239,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21100,
											"end": 21239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20827,
											"end": 21246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20827,
											"end": 21246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20827,
											"end": 21246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20827,
											"end": 21246,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 21252,
											"end": 21671,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 21252,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21418,
											"end": 21422,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21456,
											"end": 21458,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21445,
											"end": 21454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21441,
											"end": 21459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21433,
											"end": 21459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21433,
											"end": 21459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21505,
											"end": 21514,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21499,
											"end": 21503,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21495,
											"end": 21515,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21491,
											"end": 21492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21480,
											"end": 21489,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21476,
											"end": 21493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21469,
											"end": 21516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21533,
											"end": 21664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 21659,
											"end": 21663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21533,
											"end": 21664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 21533,
											"end": 21664,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21533,
											"end": 21664,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 21533,
											"end": 21664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21525,
											"end": 21664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21525,
											"end": 21664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21252,
											"end": 21671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21252,
											"end": 21671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21252,
											"end": 21671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21252,
											"end": 21671,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 21677,
											"end": 22096,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 21677,
											"end": 22096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21843,
											"end": 21847,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21881,
											"end": 21883,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21870,
											"end": 21879,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21866,
											"end": 21884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21930,
											"end": 21939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21924,
											"end": 21928,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21920,
											"end": 21940,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21916,
											"end": 21917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21901,
											"end": 21918,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21894,
											"end": 21941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21958,
											"end": 22089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 22084,
											"end": 22088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21958,
											"end": 22089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 21958,
											"end": 22089,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21958,
											"end": 22089,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 21958,
											"end": 22089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21950,
											"end": 22089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21950,
											"end": 22089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21677,
											"end": 22096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21677,
											"end": 22096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21677,
											"end": 22096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21677,
											"end": 22096,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 22102,
											"end": 22521,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 22102,
											"end": 22521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22268,
											"end": 22272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22306,
											"end": 22308,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22295,
											"end": 22304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22291,
											"end": 22309,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22283,
											"end": 22309,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22283,
											"end": 22309,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22355,
											"end": 22364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22349,
											"end": 22353,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22345,
											"end": 22365,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22341,
											"end": 22342,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22330,
											"end": 22339,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22326,
											"end": 22343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22319,
											"end": 22366,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22383,
											"end": 22514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 22509,
											"end": 22513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22383,
											"end": 22514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 22383,
											"end": 22514,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 22383,
											"end": 22514,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 22383,
											"end": 22514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22375,
											"end": 22514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22375,
											"end": 22514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22521,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22521,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 22527,
											"end": 22946,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 22527,
											"end": 22946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 22697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22731,
											"end": 22733,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22720,
											"end": 22729,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22716,
											"end": 22734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22708,
											"end": 22734,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22708,
											"end": 22734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22780,
											"end": 22789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22774,
											"end": 22778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22766,
											"end": 22767,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22755,
											"end": 22764,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22751,
											"end": 22768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22744,
											"end": 22791,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22808,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 22934,
											"end": 22938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22808,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 22808,
											"end": 22939,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 22808,
											"end": 22939,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 22808,
											"end": 22939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22800,
											"end": 22939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22800,
											"end": 22939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22527,
											"end": 22946,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22527,
											"end": 22946,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22527,
											"end": 22946,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22527,
											"end": 22946,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23045,
											"end": 23049,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23083,
											"end": 23085,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23072,
											"end": 23081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23068,
											"end": 23086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23060,
											"end": 23086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23060,
											"end": 23086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23096,
											"end": 23167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 23164,
											"end": 23165,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23153,
											"end": 23162,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23149,
											"end": 23166,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23140,
											"end": 23146,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23096,
											"end": 23167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 23096,
											"end": 23167,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 23096,
											"end": 23167,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 23096,
											"end": 23167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23174,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23301,
											"end": 23305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23339,
											"end": 23341,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23328,
											"end": 23337,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23324,
											"end": 23342,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23316,
											"end": 23342,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23316,
											"end": 23342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 23420,
											"end": 23421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23409,
											"end": 23418,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23405,
											"end": 23422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23396,
											"end": 23402,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23433,
											"end": 23505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 23501,
											"end": 23503,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23490,
											"end": 23499,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23486,
											"end": 23504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23477,
											"end": 23483,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23433,
											"end": 23505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 23433,
											"end": 23505,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 23433,
											"end": 23505,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 23433,
											"end": 23505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23180,
											"end": 23512,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 23518,
											"end": 23647,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 23518,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23552,
											"end": 23558,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23579,
											"end": 23599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 23579,
											"end": 23599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 23579,
											"end": 23599,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 23579,
											"end": 23599,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 23579,
											"end": 23599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23569,
											"end": 23599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23569,
											"end": 23599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23608,
											"end": 23641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 23636,
											"end": 23640,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23628,
											"end": 23634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23608,
											"end": 23641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 23608,
											"end": 23641,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 23608,
											"end": 23641,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 23608,
											"end": 23641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23518,
											"end": 23647,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23518,
											"end": 23647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23518,
											"end": 23647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23518,
											"end": 23647,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 23653,
											"end": 23728,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 23653,
											"end": 23728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23686,
											"end": 23692,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23719,
											"end": 23721,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23713,
											"end": 23722,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 23703,
											"end": 23722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23703,
											"end": 23722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23653,
											"end": 23728,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23653,
											"end": 23728,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 23734,
											"end": 24045,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 23734,
											"end": 24045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23811,
											"end": 23815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23901,
											"end": 23919,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23893,
											"end": 23899,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23890,
											"end": 23920,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 23887,
											"end": 23943,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 23887,
											"end": 23943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 23887,
											"end": 23943,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23887,
											"end": 23943,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 23887,
											"end": 23943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23973,
											"end": 23977,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23965,
											"end": 23971,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23961,
											"end": 23978,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24033,
											"end": 24037,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24027,
											"end": 24031,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24023,
											"end": 24038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24015,
											"end": 24038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24015,
											"end": 24038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23734,
											"end": 24045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23734,
											"end": 24045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23734,
											"end": 24045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23734,
											"end": 24045,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24051,
											"end": 24362,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 24051,
											"end": 24362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24128,
											"end": 24132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24218,
											"end": 24236,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24210,
											"end": 24216,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24207,
											"end": 24237,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 24204,
											"end": 24260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 24204,
											"end": 24260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 24204,
											"end": 24260,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 24240,
											"end": 24258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 24240,
											"end": 24258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 24240,
											"end": 24258,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 24240,
											"end": 24258,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 24240,
											"end": 24258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24204,
											"end": 24260,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 24204,
											"end": 24260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24290,
											"end": 24294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24282,
											"end": 24288,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24278,
											"end": 24295,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 24270,
											"end": 24295,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24270,
											"end": 24295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24350,
											"end": 24354,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24344,
											"end": 24348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24340,
											"end": 24355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24332,
											"end": 24355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24332,
											"end": 24355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24051,
											"end": 24362,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24051,
											"end": 24362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24051,
											"end": 24362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24051,
											"end": 24362,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24368,
											"end": 24500,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 24368,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24435,
											"end": 24439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24458,
											"end": 24461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24450,
											"end": 24461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24450,
											"end": 24461,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24488,
											"end": 24492,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24483,
											"end": 24486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24479,
											"end": 24493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24471,
											"end": 24493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24471,
											"end": 24493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24368,
											"end": 24500,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24368,
											"end": 24500,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24368,
											"end": 24500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24368,
											"end": 24500,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24506,
											"end": 24620,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 24506,
											"end": 24620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24573,
											"end": 24579,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24607,
											"end": 24612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24601,
											"end": 24613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 24591,
											"end": 24613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24591,
											"end": 24613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24506,
											"end": 24620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24506,
											"end": 24620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24506,
											"end": 24620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24506,
											"end": 24620,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24626,
											"end": 24724,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 24626,
											"end": 24724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24677,
											"end": 24683,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24711,
											"end": 24716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24705,
											"end": 24717,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 24695,
											"end": 24717,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24695,
											"end": 24717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24626,
											"end": 24724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24626,
											"end": 24724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24626,
											"end": 24724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24626,
											"end": 24724,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24730,
											"end": 24829,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 24730,
											"end": 24829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24782,
											"end": 24788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24816,
											"end": 24821,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24810,
											"end": 24822,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 24800,
											"end": 24822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24800,
											"end": 24822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24730,
											"end": 24829,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24730,
											"end": 24829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24730,
											"end": 24829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24730,
											"end": 24829,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24835,
											"end": 24948,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 24835,
											"end": 24948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24905,
											"end": 24909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24937,
											"end": 24941,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24932,
											"end": 24935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24928,
											"end": 24942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24920,
											"end": 24942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24920,
											"end": 24942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24835,
											"end": 24948,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24835,
											"end": 24948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24835,
											"end": 24948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24835,
											"end": 24948,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25087,
											"end": 25093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25082,
											"end": 25085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25075,
											"end": 25094,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25127,
											"end": 25131,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25122,
											"end": 25125,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25118,
											"end": 25132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25103,
											"end": 25132,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25103,
											"end": 25132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24954,
											"end": 25138,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25227,
											"end": 25238,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25261,
											"end": 25267,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25256,
											"end": 25259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25249,
											"end": 25268,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25301,
											"end": 25305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25296,
											"end": 25299,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25292,
											"end": 25306,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25277,
											"end": 25306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25277,
											"end": 25306,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25144,
											"end": 25312,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25402,
											"end": 25413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25436,
											"end": 25442,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25431,
											"end": 25434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25424,
											"end": 25443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25476,
											"end": 25480,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25471,
											"end": 25474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25467,
											"end": 25481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25452,
											"end": 25481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25452,
											"end": 25481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25318,
											"end": 25487,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25533,
											"end": 25536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25552,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 25570,
											"end": 25571,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25552,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 25552,
											"end": 25572,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 25552,
											"end": 25572,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 25552,
											"end": 25572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25547,
											"end": 25572,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25547,
											"end": 25572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25586,
											"end": 25606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 25604,
											"end": 25605,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25586,
											"end": 25606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 25586,
											"end": 25606,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 25586,
											"end": 25606,
											"name": "tag",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 25586,
											"end": 25606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25581,
											"end": 25606,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25581,
											"end": 25606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25740,
											"end": 25741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25672,
											"end": 25738,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25668,
											"end": 25742,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25665,
											"end": 25666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25662,
											"end": 25743,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 25659,
											"end": 25766,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 25659,
											"end": 25766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 25659,
											"end": 25766,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25746,
											"end": 25764,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 25746,
											"end": 25764,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 25746,
											"end": 25764,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 25746,
											"end": 25764,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 25746,
											"end": 25764,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25659,
											"end": 25766,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 25659,
											"end": 25766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25790,
											"end": 25791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25787,
											"end": 25788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25783,
											"end": 25792,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25776,
											"end": 25792,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25776,
											"end": 25792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25493,
											"end": 25798,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25844,
											"end": 25845,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25861,
											"end": 25881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 25879,
											"end": 25880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25861,
											"end": 25881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 25861,
											"end": 25881,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 25861,
											"end": 25881,
											"name": "tag",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 25861,
											"end": 25881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25856,
											"end": 25881,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25856,
											"end": 25881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25895,
											"end": 25915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 25913,
											"end": 25914,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25895,
											"end": 25915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 25895,
											"end": 25915,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 25895,
											"end": 25915,
											"name": "tag",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 25895,
											"end": 25915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25890,
											"end": 25915,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25890,
											"end": 25915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25934,
											"end": 25935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25924,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 25924,
											"end": 25959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25939,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 25939,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 25939,
											"end": 25957,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 25939,
											"end": 25957,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 25939,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25924,
											"end": 25959,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 25924,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25981,
											"end": 25982,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25978,
											"end": 25979,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25974,
											"end": 25983,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 25969,
											"end": 25983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25969,
											"end": 25983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25804,
											"end": 25989,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26035,
											"end": 26042,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26058,
											"end": 26078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 26076,
											"end": 26077,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26058,
											"end": 26078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 26058,
											"end": 26078,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 26058,
											"end": 26078,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 26058,
											"end": 26078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26053,
											"end": 26078,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26053,
											"end": 26078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 26110,
											"end": 26111,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26087,
											"end": 26112,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 26087,
											"end": 26112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26280,
											"end": 26281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26212,
											"end": 26278,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26208,
											"end": 26282,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 26205,
											"end": 26206,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26202,
											"end": 26283,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 26197,
											"end": 26198,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26190,
											"end": 26199,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 26183,
											"end": 26200,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 26179,
											"end": 26284,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 26176,
											"end": 26307,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 26176,
											"end": 26307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 26176,
											"end": 26307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26176,
											"end": 26307,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 26176,
											"end": 26307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26335,
											"end": 26336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26332,
											"end": 26333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26317,
											"end": 26337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25995,
											"end": 26343,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 26349,
											"end": 26445,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 26349,
											"end": 26445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26386,
											"end": 26393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26415,
											"end": 26439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 26433,
											"end": 26438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26415,
											"end": 26439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 26415,
											"end": 26439,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 26415,
											"end": 26439,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 26415,
											"end": 26439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26404,
											"end": 26439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26404,
											"end": 26439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26445,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26349,
											"end": 26445,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 26451,
											"end": 26555,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 26451,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26496,
											"end": 26503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26525,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 26543,
											"end": 26548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26525,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 26525,
											"end": 26549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 26525,
											"end": 26549,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 26525,
											"end": 26549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26514,
											"end": 26549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26514,
											"end": 26549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26451,
											"end": 26555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26451,
											"end": 26555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26451,
											"end": 26555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26451,
											"end": 26555,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 26561,
											"end": 26651,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 26561,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26595,
											"end": 26602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26638,
											"end": 26643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26631,
											"end": 26644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 26624,
											"end": 26645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 26613,
											"end": 26645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26613,
											"end": 26645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26561,
											"end": 26651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26561,
											"end": 26651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26561,
											"end": 26651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26561,
											"end": 26651,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 26657,
											"end": 26806,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 26657,
											"end": 26806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26693,
											"end": 26700,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26733,
											"end": 26799,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26726,
											"end": 26731,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26722,
											"end": 26800,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 26711,
											"end": 26800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26711,
											"end": 26800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26657,
											"end": 26806,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26657,
											"end": 26806,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26657,
											"end": 26806,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26657,
											"end": 26806,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 26812,
											"end": 26945,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 26812,
											"end": 26945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26860,
											"end": 26867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26889,
											"end": 26894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26878,
											"end": 26894,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26878,
											"end": 26894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26895,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 26933,
											"end": 26938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26895,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 26895,
											"end": 26939,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 26895,
											"end": 26939,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 26895,
											"end": 26939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26812,
											"end": 26945,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26812,
											"end": 26945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26812,
											"end": 26945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26812,
											"end": 26945,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 26951,
											"end": 27077,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 26951,
											"end": 27077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26988,
											"end": 26995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27028,
											"end": 27070,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27021,
											"end": 27026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27017,
											"end": 27071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 27006,
											"end": 27071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27006,
											"end": 27071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26951,
											"end": 27077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26951,
											"end": 27077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26951,
											"end": 27077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26951,
											"end": 27077,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 27083,
											"end": 27160,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 27083,
											"end": 27160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27120,
											"end": 27127,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27149,
											"end": 27154,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27138,
											"end": 27154,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27138,
											"end": 27154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27083,
											"end": 27160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27083,
											"end": 27160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27083,
											"end": 27160,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27083,
											"end": 27160,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 27166,
											"end": 27299,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 27166,
											"end": 27299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27225,
											"end": 27234,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27258,
											"end": 27293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 27287,
											"end": 27292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27258,
											"end": 27293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 27258,
											"end": 27293,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 27258,
											"end": 27293,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 27258,
											"end": 27293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27245,
											"end": 27293,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27245,
											"end": 27293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27166,
											"end": 27299,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27166,
											"end": 27299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27166,
											"end": 27299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27166,
											"end": 27299,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 27305,
											"end": 27612,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 27305,
											"end": 27612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27373,
											"end": 27374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "tag",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27397,
											"end": 27403,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27394,
											"end": 27395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27391,
											"end": 27404,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 27482,
											"end": 27483,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 27477,
											"end": 27480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27473,
											"end": 27484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27467,
											"end": 27485,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 27463,
											"end": 27464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27458,
											"end": 27461,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 27454,
											"end": 27465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27447,
											"end": 27486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27419,
											"end": 27421,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27416,
											"end": 27417,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27412,
											"end": 27422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27407,
											"end": 27422,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27407,
											"end": 27422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 27383,
											"end": 27496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27514,
											"end": 27520,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27511,
											"end": 27512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27508,
											"end": 27521,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 27505,
											"end": 27606,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 27505,
											"end": 27606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 27505,
											"end": 27606,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 27594,
											"end": 27595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27585,
											"end": 27591,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 27580,
											"end": 27583,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 27576,
											"end": 27592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27569,
											"end": 27596,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27505,
											"end": 27606,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 27505,
											"end": 27606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27354,
											"end": 27612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27305,
											"end": 27612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27305,
											"end": 27612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27305,
											"end": 27612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27305,
											"end": 27612,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 27618,
											"end": 27938,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 27618,
											"end": 27938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27662,
											"end": 27668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27699,
											"end": 27700,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 27693,
											"end": 27697,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27689,
											"end": 27701,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 27679,
											"end": 27701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27679,
											"end": 27701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27746,
											"end": 27747,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 27740,
											"end": 27744,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27736,
											"end": 27748,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 27767,
											"end": 27785,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 27757,
											"end": 27838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 27757,
											"end": 27838,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 27823,
											"end": 27827,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 27815,
											"end": 27821,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27811,
											"end": 27828,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 27801,
											"end": 27828,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27801,
											"end": 27828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27757,
											"end": 27838,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 27757,
											"end": 27838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27885,
											"end": 27887,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27877,
											"end": 27883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27874,
											"end": 27888,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 27854,
											"end": 27872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27851,
											"end": 27889,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 27848,
											"end": 27932,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 27848,
											"end": 27932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 27848,
											"end": 27932,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 27904,
											"end": 27922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 27904,
											"end": 27922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 27904,
											"end": 27922,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 27904,
											"end": 27922,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 27904,
											"end": 27922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27848,
											"end": 27932,
											"name": "tag",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 27848,
											"end": 27932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27669,
											"end": 27938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27618,
											"end": 27938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27618,
											"end": 27938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27618,
											"end": 27938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27618,
											"end": 27938,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 27944,
											"end": 28225,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 27944,
											"end": 28225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28027,
											"end": 28054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "609"
										},
										{
											"begin": 28049,
											"end": 28053,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28027,
											"end": 28054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 28027,
											"end": 28054,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28027,
											"end": 28054,
											"name": "tag",
											"source": 11,
											"value": "609"
										},
										{
											"begin": 28027,
											"end": 28054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28019,
											"end": 28025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28015,
											"end": 28055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28157,
											"end": 28163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28145,
											"end": 28155,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28142,
											"end": 28164,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28109,
											"end": 28119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28106,
											"end": 28140,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 28103,
											"end": 28165,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 28100,
											"end": 28188,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 28100,
											"end": 28188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 28100,
											"end": 28188,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 28168,
											"end": 28186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 28168,
											"end": 28186,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28168,
											"end": 28186,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 28168,
											"end": 28186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28100,
											"end": 28188,
											"name": "tag",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 28100,
											"end": 28188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28208,
											"end": 28218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 28204,
											"end": 28206,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 28197,
											"end": 28219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27987,
											"end": 28225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27944,
											"end": 28225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27944,
											"end": 28225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27944,
											"end": 28225,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 28231,
											"end": 28464,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 28231,
											"end": 28464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28270,
											"end": 28273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28293,
											"end": 28317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 28311,
											"end": 28316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28293,
											"end": 28317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 28293,
											"end": 28317,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28293,
											"end": 28317,
											"name": "tag",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 28293,
											"end": 28317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28284,
											"end": 28317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28284,
											"end": 28317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28339,
											"end": 28405,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28332,
											"end": 28337,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28329,
											"end": 28406,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 28326,
											"end": 28429,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 28326,
											"end": 28429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 28326,
											"end": 28429,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 28409,
											"end": 28427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 28409,
											"end": 28427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 28409,
											"end": 28427,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28409,
											"end": 28427,
											"name": "tag",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 28409,
											"end": 28427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28326,
											"end": 28429,
											"name": "tag",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 28326,
											"end": 28429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28456,
											"end": 28457,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 28449,
											"end": 28454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28445,
											"end": 28458,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28438,
											"end": 28458,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28438,
											"end": 28458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28231,
											"end": 28464,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28231,
											"end": 28464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28231,
											"end": 28464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28231,
											"end": 28464,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 28470,
											"end": 28570,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 28470,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28509,
											"end": 28516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28538,
											"end": 28564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 28558,
											"end": 28563,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28538,
											"end": 28564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 28538,
											"end": 28564,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28538,
											"end": 28564,
											"name": "tag",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 28538,
											"end": 28564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28527,
											"end": 28564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28527,
											"end": 28564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28470,
											"end": 28570,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28470,
											"end": 28570,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28470,
											"end": 28570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28470,
											"end": 28570,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 28576,
											"end": 28670,
											"name": "tag",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 28576,
											"end": 28670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28615,
											"end": 28622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28644,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 28658,
											"end": 28663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28644,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 28644,
											"end": 28664,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28644,
											"end": 28664,
											"name": "tag",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 28644,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28633,
											"end": 28664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28633,
											"end": 28664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28576,
											"end": 28670,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28576,
											"end": 28670,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28576,
											"end": 28670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28576,
											"end": 28670,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 28676,
											"end": 28755,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 28676,
											"end": 28755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28715,
											"end": 28722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28744,
											"end": 28749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28733,
											"end": 28749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28733,
											"end": 28749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28755,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28755,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28676,
											"end": 28755,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28793,
											"end": 28794,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28810,
											"end": 28830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 28828,
											"end": 28829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28810,
											"end": 28830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 28810,
											"end": 28830,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28810,
											"end": 28830,
											"name": "tag",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 28810,
											"end": 28830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28805,
											"end": 28830,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28805,
											"end": 28830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28844,
											"end": 28864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 28862,
											"end": 28863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28844,
											"end": 28864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 28844,
											"end": 28864,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28844,
											"end": 28864,
											"name": "tag",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 28844,
											"end": 28864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28839,
											"end": 28864,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28839,
											"end": 28864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28883,
											"end": 28884,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28873,
											"end": 28908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 28873,
											"end": 28908,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 28888,
											"end": 28906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 28888,
											"end": 28906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 28888,
											"end": 28906,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 28888,
											"end": 28906,
											"name": "tag",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 28888,
											"end": 28906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28873,
											"end": 28908,
											"name": "tag",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 28873,
											"end": 28908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28929,
											"end": 28930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28926,
											"end": 28927,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28922,
											"end": 28931,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 28917,
											"end": 28931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28917,
											"end": 28931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28761,
											"end": 28937,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 28943,
											"end": 29123,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 28943,
											"end": 29123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28991,
											"end": 29068,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28988,
											"end": 28989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28981,
											"end": 29069,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29088,
											"end": 29092,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 29085,
											"end": 29086,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 29078,
											"end": 29093,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29112,
											"end": 29116,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 29109,
											"end": 29110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29102,
											"end": 29117,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 29129,
											"end": 29309,
											"name": "tag",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 29129,
											"end": 29309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29177,
											"end": 29254,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29174,
											"end": 29175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29167,
											"end": 29255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29274,
											"end": 29278,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 29271,
											"end": 29272,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 29264,
											"end": 29279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29298,
											"end": 29302,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 29295,
											"end": 29296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29288,
											"end": 29303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 29315,
											"end": 29495,
											"name": "tag",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 29315,
											"end": 29495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29363,
											"end": 29440,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29360,
											"end": 29361,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29353,
											"end": 29441,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29460,
											"end": 29464,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 29457,
											"end": 29458,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 29450,
											"end": 29465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29484,
											"end": 29488,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 29481,
											"end": 29482,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29474,
											"end": 29489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 29501,
											"end": 29681,
											"name": "tag",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 29501,
											"end": 29681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29549,
											"end": 29626,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29546,
											"end": 29547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29539,
											"end": 29627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29646,
											"end": 29650,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 29643,
											"end": 29644,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 29636,
											"end": 29651,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29670,
											"end": 29674,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 29667,
											"end": 29668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29660,
											"end": 29675,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 29687,
											"end": 29867,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 29687,
											"end": 29867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29735,
											"end": 29812,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29732,
											"end": 29733,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29725,
											"end": 29813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29832,
											"end": 29836,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 29829,
											"end": 29830,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 29822,
											"end": 29837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29856,
											"end": 29860,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 29853,
											"end": 29854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29846,
											"end": 29861,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 29873,
											"end": 30053,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 29873,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29921,
											"end": 29998,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29918,
											"end": 29919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29911,
											"end": 29999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 30018,
											"end": 30022,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 30015,
											"end": 30016,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 30008,
											"end": 30023,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 30042,
											"end": 30046,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 30039,
											"end": 30040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30032,
											"end": 30047,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 30059,
											"end": 30242,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 30059,
											"end": 30242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30094,
											"end": 30097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30132,
											"end": 30133,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 30114,
											"end": 30130,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 30111,
											"end": 30134,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30108,
											"end": 30236,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 30108,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 30108,
											"end": 30236,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30170,
											"end": 30171,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 30167,
											"end": 30168,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30164,
											"end": 30165,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30149,
											"end": 30172,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 30192,
											"end": 30226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 30223,
											"end": 30224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30217,
											"end": 30225,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 30192,
											"end": 30226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 30192,
											"end": 30226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 30192,
											"end": 30226,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 30192,
											"end": 30226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30185,
											"end": 30226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30185,
											"end": 30226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30108,
											"end": 30236,
											"name": "tag",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 30108,
											"end": 30236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30059,
											"end": 30242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30059,
											"end": 30242,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 30248,
											"end": 30365,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 30248,
											"end": 30365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30357,
											"end": 30358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30354,
											"end": 30355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30347,
											"end": 30359,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 30371,
											"end": 30488,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 30371,
											"end": 30488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30480,
											"end": 30481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30477,
											"end": 30478,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30470,
											"end": 30482,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 30494,
											"end": 30611,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 30494,
											"end": 30611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30603,
											"end": 30604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30600,
											"end": 30601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30593,
											"end": 30605,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 30617,
											"end": 30734,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 30617,
											"end": 30734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30726,
											"end": 30727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30723,
											"end": 30724,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30716,
											"end": 30728,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 30740,
											"end": 30842,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 30740,
											"end": 30842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30781,
											"end": 30787,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30832,
											"end": 30834,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 30828,
											"end": 30835,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 30823,
											"end": 30825,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 30816,
											"end": 30821,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 30812,
											"end": 30826,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30808,
											"end": 30836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 30798,
											"end": 30836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30798,
											"end": 30836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30740,
											"end": 30842,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30740,
											"end": 30842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30740,
											"end": 30842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30740,
											"end": 30842,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 30848,
											"end": 30942,
											"name": "tag",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 30848,
											"end": 30942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30881,
											"end": 30889,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30929,
											"end": 30934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30925,
											"end": 30927,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 30921,
											"end": 30935,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 30900,
											"end": 30935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30900,
											"end": 30935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30848,
											"end": 30942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30848,
											"end": 30942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30848,
											"end": 30942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30848,
											"end": 30942,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 30948,
											"end": 31054,
											"name": "tag",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 30948,
											"end": 31054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30992,
											"end": 31000,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31041,
											"end": 31046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31036,
											"end": 31039,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 31032,
											"end": 31047,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 31011,
											"end": 31047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31011,
											"end": 31047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30948,
											"end": 31054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30948,
											"end": 31054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30948,
											"end": 31054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30948,
											"end": 31054,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 31060,
											"end": 31299,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 31060,
											"end": 31299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31200,
											"end": 31234,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 31196,
											"end": 31197,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31188,
											"end": 31194,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31184,
											"end": 31198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31177,
											"end": 31235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31269,
											"end": 31291,
											"name": "PUSH",
											"source": 11,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 31264,
											"end": 31266,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31256,
											"end": 31262,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31252,
											"end": 31267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31245,
											"end": 31292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31060,
											"end": 31299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31060,
											"end": 31299,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 31305,
											"end": 31532,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 31305,
											"end": 31532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31445,
											"end": 31479,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 31441,
											"end": 31442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31433,
											"end": 31439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31429,
											"end": 31443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31422,
											"end": 31480,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31514,
											"end": 31524,
											"name": "PUSH",
											"source": 11,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31509,
											"end": 31511,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31501,
											"end": 31507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31497,
											"end": 31512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31490,
											"end": 31525,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31305,
											"end": 31532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31305,
											"end": 31532,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 31538,
											"end": 31768,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 31538,
											"end": 31768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31678,
											"end": 31712,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 31674,
											"end": 31675,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31666,
											"end": 31672,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31662,
											"end": 31676,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31655,
											"end": 31713,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31747,
											"end": 31760,
											"name": "PUSH",
											"source": 11,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 31742,
											"end": 31744,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31734,
											"end": 31740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31730,
											"end": 31745,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31723,
											"end": 31761,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31538,
											"end": 31768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31538,
											"end": 31768,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 31774,
											"end": 31997,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 31774,
											"end": 31997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31914,
											"end": 31948,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 31910,
											"end": 31911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31902,
											"end": 31908,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31898,
											"end": 31912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31891,
											"end": 31949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31983,
											"end": 31989,
											"name": "PUSH",
											"source": 11,
											"value": "616E636500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31978,
											"end": 31980,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31970,
											"end": 31976,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31966,
											"end": 31981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31959,
											"end": 31990,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31774,
											"end": 31997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31774,
											"end": 31997,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 32003,
											"end": 32234,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 32003,
											"end": 32234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32143,
											"end": 32177,
											"name": "PUSH",
											"source": 11,
											"value": "4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72"
										},
										{
											"begin": 32139,
											"end": 32140,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32131,
											"end": 32137,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32127,
											"end": 32141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32120,
											"end": 32178,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32212,
											"end": 32226,
											"name": "PUSH",
											"source": 11,
											"value": "20696E20446563696D616C730000000000000000000000000000000000000000"
										},
										{
											"begin": 32207,
											"end": 32209,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32199,
											"end": 32205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32195,
											"end": 32210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32188,
											"end": 32227,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32003,
											"end": 32234,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32003,
											"end": 32234,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 32240,
											"end": 32468,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 32240,
											"end": 32468,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32380,
											"end": 32414,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 32376,
											"end": 32377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32368,
											"end": 32374,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32364,
											"end": 32378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32357,
											"end": 32415,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32449,
											"end": 32460,
											"name": "PUSH",
											"source": 11,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32444,
											"end": 32446,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32436,
											"end": 32442,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32432,
											"end": 32447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32425,
											"end": 32461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32240,
											"end": 32468,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32240,
											"end": 32468,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 32474,
											"end": 32696,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 32474,
											"end": 32696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32614,
											"end": 32648,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 32610,
											"end": 32611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32602,
											"end": 32608,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32598,
											"end": 32612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32591,
											"end": 32649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32683,
											"end": 32688,
											"name": "PUSH",
											"source": 11,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32678,
											"end": 32680,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32670,
											"end": 32676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32666,
											"end": 32681,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32659,
											"end": 32689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32474,
											"end": 32696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32474,
											"end": 32696,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 32702,
											"end": 32930,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 32702,
											"end": 32930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32842,
											"end": 32876,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 32838,
											"end": 32839,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32830,
											"end": 32836,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32826,
											"end": 32840,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32819,
											"end": 32877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH",
											"source": 11,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32906,
											"end": 32908,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32898,
											"end": 32904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32894,
											"end": 32909,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32887,
											"end": 32923,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32702,
											"end": 32930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32702,
											"end": 32930,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 32936,
											"end": 33164,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 32936,
											"end": 33164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33076,
											"end": 33110,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 33072,
											"end": 33073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33064,
											"end": 33070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33060,
											"end": 33074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33053,
											"end": 33111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33145,
											"end": 33156,
											"name": "PUSH",
											"source": 11,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33140,
											"end": 33142,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 33132,
											"end": 33138,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33128,
											"end": 33143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33121,
											"end": 33157,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32936,
											"end": 33164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32936,
											"end": 33164,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 33170,
											"end": 33397,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 33170,
											"end": 33397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33310,
											"end": 33344,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 33306,
											"end": 33307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33298,
											"end": 33304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33294,
											"end": 33308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33287,
											"end": 33345,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33379,
											"end": 33389,
											"name": "PUSH",
											"source": 11,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33374,
											"end": 33376,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 33366,
											"end": 33372,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33362,
											"end": 33377,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33355,
											"end": 33390,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33170,
											"end": 33397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33170,
											"end": 33397,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 33403,
											"end": 33623,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 33403,
											"end": 33623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33543,
											"end": 33577,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 33539,
											"end": 33540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33531,
											"end": 33537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33527,
											"end": 33541,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33520,
											"end": 33578,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33612,
											"end": 33615,
											"name": "PUSH",
											"source": 11,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33607,
											"end": 33609,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 33599,
											"end": 33605,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33595,
											"end": 33610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33588,
											"end": 33616,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33403,
											"end": 33623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33403,
											"end": 33623,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 33629,
											"end": 34340,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 33629,
											"end": 34340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33668,
											"end": 33671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33706,
											"end": 33710,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 33688,
											"end": 33704,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 33685,
											"end": 33711,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 33682,
											"end": 33721,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 33682,
											"end": 33721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 33682,
											"end": 33721,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 33714,
											"end": 33719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 33714,
											"end": 33719,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33682,
											"end": 33721,
											"name": "tag",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 33682,
											"end": 33721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33743,
											"end": 33763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "659"
										},
										{
											"begin": 33743,
											"end": 33763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 33743,
											"end": 33763,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 33743,
											"end": 33763,
											"name": "tag",
											"source": 11,
											"value": "659"
										},
										{
											"begin": 33743,
											"end": 33763,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33818,
											"end": 33819,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 33800,
											"end": 33816,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 33796,
											"end": 33820,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 33793,
											"end": 33794,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 33787,
											"end": 33791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33772,
											"end": 33821,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 33851,
											"end": 33855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 33845,
											"end": 33856,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 33950,
											"end": 33966,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 33943,
											"end": 33947,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 33935,
											"end": 33941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33931,
											"end": 33948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33928,
											"end": 33967,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 33895,
											"end": 33913,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33887,
											"end": 33893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33884,
											"end": 33914,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 33868,
											"end": 33981,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 33865,
											"end": 34011,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 33865,
											"end": 34011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 33865,
											"end": 34011,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 33996,
											"end": 34001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33996,
											"end": 34001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33996,
											"end": 34001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 33996,
											"end": 34001,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33865,
											"end": 34011,
											"name": "tag",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 33865,
											"end": 34011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34042,
											"end": 34048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34036,
											"end": 34040,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34032,
											"end": 34049,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34078,
											"end": 34081,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34072,
											"end": 34082,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 34105,
											"end": 34123,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34097,
											"end": 34103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34094,
											"end": 34124,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34091,
											"end": 34134,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34091,
											"end": 34134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "661"
										},
										{
											"begin": 34091,
											"end": 34134,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34127,
											"end": 34132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34127,
											"end": 34132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34127,
											"end": 34132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34127,
											"end": 34132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34127,
											"end": 34132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 34127,
											"end": 34132,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34091,
											"end": 34134,
											"name": "tag",
											"source": 11,
											"value": "661"
										},
										{
											"begin": 34091,
											"end": 34134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34175,
											"end": 34181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34168,
											"end": 34172,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 34163,
											"end": 34166,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 34159,
											"end": 34173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34155,
											"end": 34182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34234,
											"end": 34235,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 34216,
											"end": 34232,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 34212,
											"end": 34236,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 34206,
											"end": 34210,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 34202,
											"end": 34237,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34197,
											"end": 34200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34194,
											"end": 34238,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34191,
											"end": 34248,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34191,
											"end": 34248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 34191,
											"end": 34248,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 34241,
											"end": 34246,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34191,
											"end": 34248,
											"name": "tag",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 34191,
											"end": 34248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34258,
											"end": 34315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 34306,
											"end": 34312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34300,
											"end": 34304,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 34296,
											"end": 34313,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34288,
											"end": 34294,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 34284,
											"end": 34314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34278,
											"end": 34282,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 34258,
											"end": 34315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 34258,
											"end": 34315,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 34258,
											"end": 34315,
											"name": "tag",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 34258,
											"end": 34315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34331,
											"end": 34334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34324,
											"end": 34334,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 34324,
											"end": 34334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33672,
											"end": 34340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33672,
											"end": 34340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33672,
											"end": 34340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33672,
											"end": 34340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33672,
											"end": 34340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33629,
											"end": 34340,
											"name": "tag",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 33629,
											"end": 34340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33629,
											"end": 34340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33629,
											"end": 34340,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 34346,
											"end": 34462,
											"name": "tag",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 34346,
											"end": 34462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34430,
											"end": 34431,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 34423,
											"end": 34428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34420,
											"end": 34432,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 34410,
											"end": 34456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 34410,
											"end": 34456,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "tag",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34410,
											"end": 34456,
											"name": "tag",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 34410,
											"end": 34456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34346,
											"end": 34462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34346,
											"end": 34462,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 34468,
											"end": 34590,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 34468,
											"end": 34590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34541,
											"end": 34565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "668"
										},
										{
											"begin": 34559,
											"end": 34564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34541,
											"end": 34565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 34541,
											"end": 34565,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 34541,
											"end": 34565,
											"name": "tag",
											"source": 11,
											"value": "668"
										},
										{
											"begin": 34541,
											"end": 34565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34534,
											"end": 34539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34531,
											"end": 34566,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 34521,
											"end": 34584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 34521,
											"end": 34584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34580,
											"end": 34581,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34577,
											"end": 34578,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34570,
											"end": 34582,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 34521,
											"end": 34584,
											"name": "tag",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 34521,
											"end": 34584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34468,
											"end": 34590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34468,
											"end": 34590,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 34596,
											"end": 34712,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 34596,
											"end": 34712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34666,
											"end": 34687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "671"
										},
										{
											"begin": 34681,
											"end": 34686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34666,
											"end": 34687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 34666,
											"end": 34687,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 34666,
											"end": 34687,
											"name": "tag",
											"source": 11,
											"value": "671"
										},
										{
											"begin": 34666,
											"end": 34687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34659,
											"end": 34664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34656,
											"end": 34688,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 34646,
											"end": 34706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "672"
										},
										{
											"begin": 34646,
											"end": 34706,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34702,
											"end": 34703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34699,
											"end": 34700,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34692,
											"end": 34704,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 34646,
											"end": 34706,
											"name": "tag",
											"source": 11,
											"value": "672"
										},
										{
											"begin": 34646,
											"end": 34706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34596,
											"end": 34712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34596,
											"end": 34712,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 34718,
											"end": 34838,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 34718,
											"end": 34838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34790,
											"end": 34813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "674"
										},
										{
											"begin": 34807,
											"end": 34812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34790,
											"end": 34813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 34790,
											"end": 34813,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 34790,
											"end": 34813,
											"name": "tag",
											"source": 11,
											"value": "674"
										},
										{
											"begin": 34790,
											"end": 34813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34783,
											"end": 34788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34780,
											"end": 34814,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 34770,
											"end": 34832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "675"
										},
										{
											"begin": 34770,
											"end": 34832,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34828,
											"end": 34829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34825,
											"end": 34826,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34818,
											"end": 34830,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 34770,
											"end": 34832,
											"name": "tag",
											"source": 11,
											"value": "675"
										},
										{
											"begin": 34770,
											"end": 34832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34718,
											"end": 34838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34718,
											"end": 34838,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 34844,
											"end": 34966,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 34844,
											"end": 34966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34917,
											"end": 34941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 34935,
											"end": 34940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34917,
											"end": 34941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 34917,
											"end": 34941,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 34917,
											"end": 34941,
											"name": "tag",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 34917,
											"end": 34941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34910,
											"end": 34915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34907,
											"end": 34942,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 34897,
											"end": 34960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 34897,
											"end": 34960,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34956,
											"end": 34957,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34953,
											"end": 34954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34946,
											"end": 34958,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 34897,
											"end": 34960,
											"name": "tag",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 34897,
											"end": 34960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34844,
											"end": 34966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34844,
											"end": 34966,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CheckNftStatus(address,uint256)": "67c510c9",
							"CurrentStatus()": "e3306a6f",
							"IsPaused()": "1309a563",
							"Owner()": "b4a99a4e",
							"_deductOnyxNftFee(uint256)": "d206b944",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"randomMint()": "7e1eaabf",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"availableForBids\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"removeFormSale\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"CheckNftStatus\",\"outputs\":[{\"internalType\":\"enum OnyxNft1155Auction.status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CurrentStatus\",\"outputs\":[{\"internalType\":\"enum OnyxNft1155Auction.status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"_deductOnyxNftFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dropsite.sol\":\"Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"Dropsite.sol\":{\"keccak256\":\"0x5bb49a8ece1e0be59235fa26e1f9c11ccc9cc2810acaf1b5321020a96adf04ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064e5e9c1d2eee90b73dee012b3e6afb9997601b8ea9c9377ab4f0ca4a802ee3\",\"dweb:/ipfs/QmVyuUZ4DxN8P5XvEakGrj1d3iShNFkmRaDYY5TAFDwZQA\"]},\"ERC1155.sol\":{\"keccak256\":\"0x31f8bc91c81a75610da8b7d241fca7fbe49d0ec717f2c9a7e4e772b176e5e99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f75046955c35d1f9391dea268bc26e1932953ddbac37df509a3c29b6aea13\",\"dweb:/ipfs/QmXKeAYA11csdhiw1x8gh4fVUUAqxW5xmzfCYxHCucfL5d\"]},\"ERC1155Burnable.sol\":{\"keccak256\":\"0x8f0eaf8d0d8ab25da29572257231e55dadf6ade602a27f12c643eec3cac3b5d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49eb05bd8deac6529db5275052762fce41b3a26f16fe05220b27b1710885808\",\"dweb:/ipfs/QmYGFhSJrSuasrFGVPSCNrdqePkfEfe5LSK5wRWZLfYGnW\"]},\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]},\"OnyxNft1155Auctions.sol\":{\"keccak256\":\"0x9ee13388664f86c6026dab541f0d9dfdaff53622081ebfe2d1e9c07c3a99b2b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f10fc7133c21d37836b7abe071c161f760bfb591df625f071d3a1f820042ffbb\",\"dweb:/ipfs/QmNhQfnLqWHkJGnvLXsFub7L1Z7pj7PDnVJfaeWu5k44n9\"]},\"OnyxNft1155Royalties.sol\":{\"keccak256\":\"0xeec794cb546dc7546deb5b39e4b9bf9df69d1f755cc3debf80a95762d5ec1d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9c6c906532cf1a6ef029b41d98613f12209ae0a746cf5b26d5cbd2c59546cb6\",\"dweb:/ipfs/QmSrgHGk811mkkvYUMoH1P7Pu9BRVUsiRR8K8KsRFE79oh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155.sol\":463:11112  contract ERC1155 is Context, ERC165, IERC1155 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155.sol\":463:11112  contract ERC1155 is Context, ERC165, IERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_11:\n        /* \"ERC1155.sol\":1019:1026  uint256 */\n      0x00\n        /* \"ERC1155.sol\":1065:1066  0 */\n      dup1\n        /* \"ERC1155.sol\":1046:1067  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":1046:1053  account */\n      dup4\n        /* \"ERC1155.sol\":1046:1067  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":1038:1115  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"ERC1155.sol\":1132:1141  _balances */\n      0x00\n        /* \"ERC1155.sol\":1132:1145  _balances[id] */\n      dup1\n        /* \"ERC1155.sol\":1142:1144  id */\n      dup4\n        /* \"ERC1155.sol\":1132:1145  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":1132:1154  _balances[id][account] */\n      0x00\n        /* \"ERC1155.sol\":1146:1153  account */\n      dup5\n        /* \"ERC1155.sol\":1132:1154  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":1125:1154  return _balances[id][account] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_17:\n        /* \"ERC165.sol\":914:918  bool */\n      0x00\n        /* \"ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_23:\n        /* \"ERC1155.sol\":1469:1485  uint256[] memory */\n      0x60\n        /* \"ERC1155.sol\":1528:1531  ids */\n      dup2\n        /* \"ERC1155.sol\":1528:1538  ids.length */\n      mload\n        /* \"ERC1155.sol\":1509:1517  accounts */\n      dup4\n        /* \"ERC1155.sol\":1509:1524  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1509:1538  accounts.length == ids.length */\n      eq\n        /* \"ERC1155.sol\":1501:1584  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"ERC1155.sol\":1595:1625  uint256[] memory batchBalances */\n      0x00\n        /* \"ERC1155.sol\":1642:1650  accounts */\n      dup4\n        /* \"ERC1155.sol\":1642:1657  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1628:1658  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n    tag_44:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_47:\n      pop\n        /* \"ERC1155.sol\":1595:1658  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":1674:1683  uint256 i */\n      0x00\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_48:\n        /* \"ERC1155.sol\":1693:1701  accounts */\n      dup5\n        /* \"ERC1155.sol\":1693:1708  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1689:1690  i */\n      dup2\n        /* \"ERC1155.sol\":1689:1708  i < accounts.length */\n      lt\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"ERC1155.sol\":1748:1778  balanceOf(accounts[i], ids[i]) */\n      tag_51\n        /* \"ERC1155.sol\":1758:1766  accounts */\n      dup6\n        /* \"ERC1155.sol\":1767:1768  i */\n      dup3\n        /* \"ERC1155.sol\":1758:1769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_52\n      jumpi\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n    tag_52:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":1771:1774  ids */\n      dup6\n        /* \"ERC1155.sol\":1775:1776  i */\n      dup4\n        /* \"ERC1155.sol\":1771:1777  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_55\n      jumpi\n      tag_56\n      tag_54\n      jump\t// in\n    tag_56:\n    tag_55:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":1748:1757  balanceOf */\n      tag_11\n        /* \"ERC1155.sol\":1748:1778  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_51:\n        /* \"ERC1155.sol\":1729:1742  batchBalances */\n      dup3\n        /* \"ERC1155.sol\":1743:1744  i */\n      dup3\n        /* \"ERC1155.sol\":1729:1745  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_58\n      tag_54\n      jump\t// in\n    tag_58:\n    tag_57:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155.sol\":1729:1778  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155.sol\":1710:1713  ++i */\n      dup1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap1\n      pop\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_48)\n    tag_49:\n      pop\n        /* \"ERC1155.sol\":1806:1819  batchBalances */\n      dup1\n        /* \"ERC1155.sol\":1799:1819  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_29:\n        /* \"ERC1155.sol\":1988:2040  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_62\n        /* \"ERC1155.sol\":2007:2019  _msgSender() */\n      tag_63\n        /* \"ERC1155.sol\":2007:2017  _msgSender */\n      tag_64\n        /* \"ERC1155.sol\":2007:2019  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"ERC1155.sol\":2021:2029  operator */\n      dup4\n        /* \"ERC1155.sol\":2031:2039  approved */\n      dup4\n        /* \"ERC1155.sol\":1988:2006  _setApprovalForAll */\n      tag_65\n        /* \"ERC1155.sol\":1988:2040  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_62:\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_33:\n        /* \"ERC1155.sol\":2213:2217  bool */\n      0x00\n        /* \"ERC1155.sol\":2236:2254  _operatorApprovals */\n      0x01\n        /* \"ERC1155.sol\":2236:2263  _operatorApprovals[account] */\n      0x00\n        /* \"ERC1155.sol\":2255:2262  account */\n      dup5\n        /* \"ERC1155.sol\":2236:2263  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":2236:2273  _operatorApprovals[account][operator] */\n      0x00\n        /* \"ERC1155.sol\":2264:2272  operator */\n      dup4\n        /* \"ERC1155.sol\":2236:2273  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1155.sol\":2229:2273  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1155.sol\":7910:8233  function _setApprovalForAll(... */\n    tag_65:\n        /* \"ERC1155.sol\":8060:8068  operator */\n      dup2\n        /* \"ERC1155.sol\":8051:8068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":8051:8056  owner */\n      dup4\n        /* \"ERC1155.sol\":8051:8068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":8043:8114  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"ERC1155.sol\":8162:8170  approved */\n      dup1\n        /* \"ERC1155.sol\":8124:8142  _operatorApprovals */\n      0x01\n        /* \"ERC1155.sol\":8124:8149  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC1155.sol\":8143:8148  owner */\n      dup6\n        /* \"ERC1155.sol\":8124:8149  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":8124:8159  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC1155.sol\":8150:8158  operator */\n      dup5\n        /* \"ERC1155.sol\":8124:8159  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":8124:8170  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":8207:8215  operator */\n      dup2\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":8200:8205  owner */\n      dup4\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC1155.sol\":8217:8225  approved */\n      dup4\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1155.sol\":7910:8233  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_74:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_76\n        /* \"#utility.yul\":161:225   */\n      tag_77\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":145:226   */\n      tag_79\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":350:493   */\n    tag_80:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_83:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_86\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_83)\n    tag_85:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_88:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_90\n        /* \"#utility.yul\":906:970   */\n      tag_91\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":890:971   */\n      tag_79\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_94\n      tag_82\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1095:1238   */\n    tag_93:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_95:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_98\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_95)\n    tag_97:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1636   */\n    tag_87:\n        /* \"#utility.yul\":1543:1548   */\n      0x00\n        /* \"#utility.yul\":1581:1587   */\n      dup2\n        /* \"#utility.yul\":1568:1588   */\n      calldataload\n        /* \"#utility.yul\":1559:1588   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1630   */\n      tag_101\n        /* \"#utility.yul\":1624:1629   */\n      dup2\n        /* \"#utility.yul\":1597:1630   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1497:1636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:2029   */\n    tag_103:\n        /* \"#utility.yul\":1730:1735   */\n      0x00\n        /* \"#utility.yul\":1779:1782   */\n      dup3\n        /* \"#utility.yul\":1772:1776   */\n      0x1f\n        /* \"#utility.yul\":1764:1770   */\n      dup4\n        /* \"#utility.yul\":1760:1777   */\n      add\n        /* \"#utility.yul\":1756:1783   */\n      slt\n        /* \"#utility.yul\":1746:1868   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1787:1866   */\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1746:1868   */\n    tag_105:\n        /* \"#utility.yul\":1904:1910   */\n      dup2\n        /* \"#utility.yul\":1891:1911   */\n      calldataload\n        /* \"#utility.yul\":1929:2023   */\n      tag_108\n        /* \"#utility.yul\":2019:2022   */\n      dup5\n        /* \"#utility.yul\":2011:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2008   */\n      0x20\n        /* \"#utility.yul\":1996:2002   */\n      dup7\n        /* \"#utility.yul\":1992:2009   */\n      add\n        /* \"#utility.yul\":1929:2023   */\n      tag_74\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1920:2023   */\n      swap2\n      pop\n        /* \"#utility.yul\":1736:2029   */\n      pop\n        /* \"#utility.yul\":1659:2029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2422   */\n    tag_109:\n        /* \"#utility.yul\":2123:2128   */\n      0x00\n        /* \"#utility.yul\":2172:2175   */\n      dup3\n        /* \"#utility.yul\":2165:2169   */\n      0x1f\n        /* \"#utility.yul\":2157:2163   */\n      dup4\n        /* \"#utility.yul\":2153:2170   */\n      add\n        /* \"#utility.yul\":2149:2176   */\n      slt\n        /* \"#utility.yul\":2139:2261   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":2180:2259   */\n      tag_112\n      tag_107\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2139:2261   */\n    tag_111:\n        /* \"#utility.yul\":2297:2303   */\n      dup2\n        /* \"#utility.yul\":2284:2304   */\n      calldataload\n        /* \"#utility.yul\":2322:2416   */\n      tag_113\n        /* \"#utility.yul\":2412:2415   */\n      dup5\n        /* \"#utility.yul\":2404:2410   */\n      dup3\n        /* \"#utility.yul\":2397:2401   */\n      0x20\n        /* \"#utility.yul\":2389:2395   */\n      dup7\n        /* \"#utility.yul\":2385:2402   */\n      add\n        /* \"#utility.yul\":2322:2416   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2313:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2129:2422   */\n      pop\n        /* \"#utility.yul\":2052:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2561   */\n    tag_114:\n        /* \"#utility.yul\":2471:2476   */\n      0x00\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2496:2516   */\n      calldataload\n        /* \"#utility.yul\":2487:2516   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2555   */\n      tag_116\n        /* \"#utility.yul\":2549:2554   */\n      dup2\n        /* \"#utility.yul\":2525:2555   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2428:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2704   */\n    tag_118:\n        /* \"#utility.yul\":2612:2617   */\n      0x00\n        /* \"#utility.yul\":2650:2656   */\n      dup2\n        /* \"#utility.yul\":2637:2657   */\n      calldataload\n        /* \"#utility.yul\":2628:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2666:2698   */\n      tag_120\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2666:2698   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2567:2704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2849   */\n    tag_99:\n        /* \"#utility.yul\":2756:2761   */\n      0x00\n        /* \"#utility.yul\":2794:2800   */\n      dup2\n        /* \"#utility.yul\":2781:2801   */\n      calldataload\n        /* \"#utility.yul\":2772:2801   */\n      swap1\n      pop\n        /* \"#utility.yul\":2810:2843   */\n      tag_123\n        /* \"#utility.yul\":2837:2842   */\n      dup2\n        /* \"#utility.yul\":2810:2843   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2710:2849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:3329   */\n    tag_32:\n        /* \"#utility.yul\":2923:2929   */\n      0x00\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2980:2982   */\n      0x40\n        /* \"#utility.yul\":2968:2977   */\n      dup4\n        /* \"#utility.yul\":2959:2966   */\n      dup6\n        /* \"#utility.yul\":2955:2978   */\n      sub\n        /* \"#utility.yul\":2951:2983   */\n      slt\n        /* \"#utility.yul\":2948:3067   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2986:3065   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2948:3067   */\n    tag_126:\n        /* \"#utility.yul\":3106:3107   */\n      0x00\n        /* \"#utility.yul\":3131:3184   */\n      tag_129\n        /* \"#utility.yul\":3176:3183   */\n      dup6\n        /* \"#utility.yul\":3167:3173   */\n      dup3\n        /* \"#utility.yul\":3156:3165   */\n      dup7\n        /* \"#utility.yul\":3152:3174   */\n      add\n        /* \"#utility.yul\":3131:3184   */\n      tag_87\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3121:3184   */\n      swap3\n      pop\n        /* \"#utility.yul\":3077:3194   */\n      pop\n        /* \"#utility.yul\":3233:3235   */\n      0x20\n        /* \"#utility.yul\":3259:3312   */\n      tag_130\n        /* \"#utility.yul\":3304:3311   */\n      dup6\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup7\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3249:3312   */\n      swap2\n      pop\n        /* \"#utility.yul\":3204:3322   */\n      pop\n        /* \"#utility.yul\":2855:3329   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3335:3803   */\n    tag_28:\n        /* \"#utility.yul\":3400:3406   */\n      0x00\n        /* \"#utility.yul\":3408:3414   */\n      dup1\n        /* \"#utility.yul\":3457:3459   */\n      0x40\n        /* \"#utility.yul\":3445:3454   */\n      dup4\n        /* \"#utility.yul\":3436:3443   */\n      dup6\n        /* \"#utility.yul\":3432:3455   */\n      sub\n        /* \"#utility.yul\":3428:3460   */\n      slt\n        /* \"#utility.yul\":3425:3544   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3463:3542   */\n      tag_133\n      tag_128\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3425:3544   */\n    tag_132:\n        /* \"#utility.yul\":3583:3584   */\n      0x00\n        /* \"#utility.yul\":3608:3661   */\n      tag_134\n        /* \"#utility.yul\":3653:3660   */\n      dup6\n        /* \"#utility.yul\":3644:3650   */\n      dup3\n        /* \"#utility.yul\":3633:3642   */\n      dup7\n        /* \"#utility.yul\":3629:3651   */\n      add\n        /* \"#utility.yul\":3608:3661   */\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3598:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3554:3671   */\n      pop\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3736:3786   */\n      tag_135\n        /* \"#utility.yul\":3778:3785   */\n      dup6\n        /* \"#utility.yul\":3769:3775   */\n      dup3\n        /* \"#utility.yul\":3758:3767   */\n      dup7\n        /* \"#utility.yul\":3754:3776   */\n      add\n        /* \"#utility.yul\":3736:3786   */\n      tag_114\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3726:3786   */\n      swap2\n      pop\n        /* \"#utility.yul\":3681:3796   */\n      pop\n        /* \"#utility.yul\":3335:3803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3809:4283   */\n    tag_10:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3934:3936   */\n      0x40\n        /* \"#utility.yul\":3922:3931   */\n      dup4\n        /* \"#utility.yul\":3913:3920   */\n      dup6\n        /* \"#utility.yul\":3909:3932   */\n      sub\n        /* \"#utility.yul\":3905:3937   */\n      slt\n        /* \"#utility.yul\":3902:4021   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3940:4019   */\n      tag_138\n      tag_128\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3902:4021   */\n    tag_137:\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4085:4138   */\n      tag_139\n        /* \"#utility.yul\":4130:4137   */\n      dup6\n        /* \"#utility.yul\":4121:4127   */\n      dup3\n        /* \"#utility.yul\":4110:4119   */\n      dup7\n        /* \"#utility.yul\":4106:4128   */\n      add\n        /* \"#utility.yul\":4085:4138   */\n      tag_87\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4075:4138   */\n      swap3\n      pop\n        /* \"#utility.yul\":4031:4148   */\n      pop\n        /* \"#utility.yul\":4187:4189   */\n      0x20\n        /* \"#utility.yul\":4213:4266   */\n      tag_140\n        /* \"#utility.yul\":4258:4265   */\n      dup6\n        /* \"#utility.yul\":4249:4255   */\n      dup3\n        /* \"#utility.yul\":4238:4247   */\n      dup7\n        /* \"#utility.yul\":4234:4256   */\n      add\n        /* \"#utility.yul\":4213:4266   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4203:4266   */\n      swap2\n      pop\n        /* \"#utility.yul\":4158:4276   */\n      pop\n        /* \"#utility.yul\":3809:4283   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4289:5183   */\n    tag_22:\n        /* \"#utility.yul\":4407:4413   */\n      0x00\n        /* \"#utility.yul\":4415:4421   */\n      dup1\n        /* \"#utility.yul\":4464:4466   */\n      0x40\n        /* \"#utility.yul\":4452:4461   */\n      dup4\n        /* \"#utility.yul\":4443:4450   */\n      dup6\n        /* \"#utility.yul\":4439:4462   */\n      sub\n        /* \"#utility.yul\":4435:4467   */\n      slt\n        /* \"#utility.yul\":4432:4551   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":4470:4549   */\n      tag_143\n      tag_128\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4432:4551   */\n    tag_142:\n        /* \"#utility.yul\":4618:4619   */\n      0x00\n        /* \"#utility.yul\":4607:4616   */\n      dup4\n        /* \"#utility.yul\":4603:4620   */\n      add\n        /* \"#utility.yul\":4590:4621   */\n      calldataload\n        /* \"#utility.yul\":4648:4666   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4640:4646   */\n      dup2\n        /* \"#utility.yul\":4637:4667   */\n      gt\n        /* \"#utility.yul\":4634:4751   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":4670:4749   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4634:4751   */\n    tag_144:\n        /* \"#utility.yul\":4775:4853   */\n      tag_147\n        /* \"#utility.yul\":4845:4852   */\n      dup6\n        /* \"#utility.yul\":4836:4842   */\n      dup3\n        /* \"#utility.yul\":4825:4834   */\n      dup7\n        /* \"#utility.yul\":4821:4843   */\n      add\n        /* \"#utility.yul\":4775:4853   */\n      tag_103\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4765:4853   */\n      swap3\n      pop\n        /* \"#utility.yul\":4561:4863   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4919:4928   */\n      dup4\n        /* \"#utility.yul\":4915:4933   */\n      add\n        /* \"#utility.yul\":4902:4934   */\n      calldataload\n        /* \"#utility.yul\":4961:4979   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4953:4959   */\n      dup2\n        /* \"#utility.yul\":4950:4980   */\n      gt\n        /* \"#utility.yul\":4947:5064   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":4983:5062   */\n      tag_149\n      tag_146\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4947:5064   */\n    tag_148:\n        /* \"#utility.yul\":5088:5166   */\n      tag_150\n        /* \"#utility.yul\":5158:5165   */\n      dup6\n        /* \"#utility.yul\":5149:5155   */\n      dup3\n        /* \"#utility.yul\":5138:5147   */\n      dup7\n        /* \"#utility.yul\":5134:5156   */\n      add\n        /* \"#utility.yul\":5088:5166   */\n      tag_109\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5078:5166   */\n      swap2\n      pop\n        /* \"#utility.yul\":4873:5176   */\n      pop\n        /* \"#utility.yul\":4289:5183   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5189:5516   */\n    tag_16:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_153\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5264:5383   */\n    tag_152:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5499   */\n      tag_154\n        /* \"#utility.yul\":5491:5498   */\n      dup5\n        /* \"#utility.yul\":5482:5488   */\n      dup3\n        /* \"#utility.yul\":5471:5480   */\n      dup6\n        /* \"#utility.yul\":5467:5489   */\n      add\n        /* \"#utility.yul\":5447:5499   */\n      tag_118\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5437:5499   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5509   */\n      pop\n        /* \"#utility.yul\":5189:5516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5522:5701   */\n    tag_155:\n        /* \"#utility.yul\":5591:5601   */\n      0x00\n        /* \"#utility.yul\":5612:5658   */\n      tag_157\n        /* \"#utility.yul\":5654:5657   */\n      dup4\n        /* \"#utility.yul\":5646:5652   */\n      dup4\n        /* \"#utility.yul\":5612:5658   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5690:5694   */\n      0x20\n        /* \"#utility.yul\":5685:5688   */\n      dup4\n        /* \"#utility.yul\":5681:5695   */\n      add\n        /* \"#utility.yul\":5667:5695   */\n      swap1\n      pop\n        /* \"#utility.yul\":5522:5701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:6469   */\n    tag_159:\n        /* \"#utility.yul\":5856:5859   */\n      0x00\n        /* \"#utility.yul\":5885:5939   */\n      tag_161\n        /* \"#utility.yul\":5933:5938   */\n      dup3\n        /* \"#utility.yul\":5885:5939   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5955:6041   */\n      tag_163\n        /* \"#utility.yul\":6034:6040   */\n      dup2\n        /* \"#utility.yul\":6029:6032   */\n      dup6\n        /* \"#utility.yul\":5955:6041   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5948:6041   */\n      swap4\n      pop\n        /* \"#utility.yul\":6065:6121   */\n      tag_165\n        /* \"#utility.yul\":6115:6120   */\n      dup4\n        /* \"#utility.yul\":6065:6121   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6144:6151   */\n      dup1\n        /* \"#utility.yul\":6175:6176   */\n      0x00\n        /* \"#utility.yul\":6160:6444   */\n    tag_167:\n        /* \"#utility.yul\":6185:6191   */\n      dup4\n        /* \"#utility.yul\":6182:6183   */\n      dup2\n        /* \"#utility.yul\":6179:6192   */\n      lt\n        /* \"#utility.yul\":6160:6444   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":6261:6267   */\n      dup2\n        /* \"#utility.yul\":6255:6268   */\n      mload\n        /* \"#utility.yul\":6288:6351   */\n      tag_170\n        /* \"#utility.yul\":6347:6350   */\n      dup9\n        /* \"#utility.yul\":6332:6345   */\n      dup3\n        /* \"#utility.yul\":6288:6351   */\n      tag_155\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6281:6351   */\n      swap8\n      pop\n        /* \"#utility.yul\":6374:6434   */\n      tag_171\n        /* \"#utility.yul\":6427:6433   */\n      dup4\n        /* \"#utility.yul\":6374:6434   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6364:6434   */\n      swap3\n      pop\n        /* \"#utility.yul\":6220:6444   */\n      pop\n        /* \"#utility.yul\":6207:6208   */\n      0x01\n        /* \"#utility.yul\":6204:6205   */\n      dup2\n        /* \"#utility.yul\":6200:6209   */\n      add\n        /* \"#utility.yul\":6195:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6160:6444   */\n      jump(tag_167)\n    tag_169:\n        /* \"#utility.yul\":6164:6178   */\n      pop\n        /* \"#utility.yul\":6460:6463   */\n      dup6\n        /* \"#utility.yul\":6453:6463   */\n      swap4\n      pop\n        /* \"#utility.yul\":5861:6469   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5737:6469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6475:6584   */\n    tag_173:\n        /* \"#utility.yul\":6556:6577   */\n      tag_175\n        /* \"#utility.yul\":6571:6576   */\n      dup2\n        /* \"#utility.yul\":6556:6577   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6551:6554   */\n      dup3\n        /* \"#utility.yul\":6544:6578   */\n      mstore\n        /* \"#utility.yul\":6475:6584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6956   */\n    tag_177:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6753:6820   */\n      tag_179\n        /* \"#utility.yul\":6817:6819   */\n      0x2b\n        /* \"#utility.yul\":6812:6815   */\n      dup4\n        /* \"#utility.yul\":6753:6820   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6746:6820   */\n      swap2\n      pop\n        /* \"#utility.yul\":6829:6922   */\n      tag_181\n        /* \"#utility.yul\":6918:6921   */\n      dup3\n        /* \"#utility.yul\":6829:6922   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6947:6949   */\n      0x40\n        /* \"#utility.yul\":6942:6945   */\n      dup3\n        /* \"#utility.yul\":6938:6950   */\n      add\n        /* \"#utility.yul\":6931:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6962:7328   */\n    tag_183:\n        /* \"#utility.yul\":7104:7107   */\n      0x00\n        /* \"#utility.yul\":7125:7192   */\n      tag_185\n        /* \"#utility.yul\":7189:7191   */\n      0x29\n        /* \"#utility.yul\":7184:7187   */\n      dup4\n        /* \"#utility.yul\":7125:7192   */\n      tag_180\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7118:7192   */\n      swap2\n      pop\n        /* \"#utility.yul\":7201:7294   */\n      tag_186\n        /* \"#utility.yul\":7290:7293   */\n      dup3\n        /* \"#utility.yul\":7201:7294   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7319:7321   */\n      0x40\n        /* \"#utility.yul\":7314:7317   */\n      dup3\n        /* \"#utility.yul\":7310:7322   */\n      add\n        /* \"#utility.yul\":7303:7322   */\n      swap1\n      pop\n        /* \"#utility.yul\":6962:7328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7334:7700   */\n    tag_188:\n        /* \"#utility.yul\":7476:7479   */\n      0x00\n        /* \"#utility.yul\":7497:7564   */\n      tag_190\n        /* \"#utility.yul\":7561:7563   */\n      0x29\n        /* \"#utility.yul\":7556:7559   */\n      dup4\n        /* \"#utility.yul\":7497:7564   */\n      tag_180\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7490:7564   */\n      swap2\n      pop\n        /* \"#utility.yul\":7573:7666   */\n      tag_191\n        /* \"#utility.yul\":7662:7665   */\n      dup3\n        /* \"#utility.yul\":7573:7666   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7691:7693   */\n      0x40\n        /* \"#utility.yul\":7686:7689   */\n      dup3\n        /* \"#utility.yul\":7682:7694   */\n      add\n        /* \"#utility.yul\":7675:7694   */\n      swap1\n      pop\n        /* \"#utility.yul\":7334:7700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7706:7814   */\n    tag_158:\n        /* \"#utility.yul\":7783:7807   */\n      tag_194\n        /* \"#utility.yul\":7801:7806   */\n      dup2\n        /* \"#utility.yul\":7783:7807   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7778:7781   */\n      dup3\n        /* \"#utility.yul\":7771:7808   */\n      mstore\n        /* \"#utility.yul\":7706:7814   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7820:7938   */\n    tag_196:\n        /* \"#utility.yul\":7907:7931   */\n      tag_198\n        /* \"#utility.yul\":7925:7930   */\n      dup2\n        /* \"#utility.yul\":7907:7931   */\n      tag_195\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7902:7905   */\n      dup3\n        /* \"#utility.yul\":7895:7932   */\n      mstore\n        /* \"#utility.yul\":7820:7938   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7944:8317   */\n    tag_25:\n        /* \"#utility.yul\":8087:8091   */\n      0x00\n        /* \"#utility.yul\":8125:8127   */\n      0x20\n        /* \"#utility.yul\":8114:8123   */\n      dup3\n        /* \"#utility.yul\":8110:8128   */\n      add\n        /* \"#utility.yul\":8102:8128   */\n      swap1\n      pop\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8160:8161   */\n      0x00\n        /* \"#utility.yul\":8149:8158   */\n      dup4\n        /* \"#utility.yul\":8145:8162   */\n      add\n        /* \"#utility.yul\":8138:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8310   */\n      tag_200\n        /* \"#utility.yul\":8305:8309   */\n      dup2\n        /* \"#utility.yul\":8296:8302   */\n      dup5\n        /* \"#utility.yul\":8202:8310   */\n      tag_159\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8194:8310   */\n      swap1\n      pop\n        /* \"#utility.yul\":7944:8317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8323:8533   */\n    tag_19:\n        /* \"#utility.yul\":8410:8414   */\n      0x00\n        /* \"#utility.yul\":8448:8450   */\n      0x20\n        /* \"#utility.yul\":8437:8446   */\n      dup3\n        /* \"#utility.yul\":8433:8451   */\n      add\n        /* \"#utility.yul\":8425:8451   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8526   */\n      tag_202\n        /* \"#utility.yul\":8523:8524   */\n      0x00\n        /* \"#utility.yul\":8512:8521   */\n      dup4\n        /* \"#utility.yul\":8508:8525   */\n      add\n        /* \"#utility.yul\":8499:8505   */\n      dup5\n        /* \"#utility.yul\":8461:8526   */\n      tag_173\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8323:8533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8539:8958   */\n    tag_38:\n        /* \"#utility.yul\":8705:8709   */\n      0x00\n        /* \"#utility.yul\":8743:8745   */\n      0x20\n        /* \"#utility.yul\":8732:8741   */\n      dup3\n        /* \"#utility.yul\":8728:8746   */\n      add\n        /* \"#utility.yul\":8720:8746   */\n      swap1\n      pop\n        /* \"#utility.yul\":8792:8801   */\n      dup2\n        /* \"#utility.yul\":8786:8790   */\n      dup2\n        /* \"#utility.yul\":8782:8802   */\n      sub\n        /* \"#utility.yul\":8778:8779   */\n      0x00\n        /* \"#utility.yul\":8767:8776   */\n      dup4\n        /* \"#utility.yul\":8763:8780   */\n      add\n        /* \"#utility.yul\":8756:8803   */\n      mstore\n        /* \"#utility.yul\":8820:8951   */\n      tag_204\n        /* \"#utility.yul\":8946:8950   */\n      dup2\n        /* \"#utility.yul\":8820:8951   */\n      tag_177\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8812:8951   */\n      swap1\n      pop\n        /* \"#utility.yul\":8539:8958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8964:9383   */\n    tag_71:\n        /* \"#utility.yul\":9130:9134   */\n      0x00\n        /* \"#utility.yul\":9168:9170   */\n      0x20\n        /* \"#utility.yul\":9157:9166   */\n      dup3\n        /* \"#utility.yul\":9153:9171   */\n      add\n        /* \"#utility.yul\":9145:9171   */\n      swap1\n      pop\n        /* \"#utility.yul\":9217:9226   */\n      dup2\n        /* \"#utility.yul\":9211:9215   */\n      dup2\n        /* \"#utility.yul\":9207:9227   */\n      sub\n        /* \"#utility.yul\":9203:9204   */\n      0x00\n        /* \"#utility.yul\":9192:9201   */\n      dup4\n        /* \"#utility.yul\":9188:9205   */\n      add\n        /* \"#utility.yul\":9181:9228   */\n      mstore\n        /* \"#utility.yul\":9245:9376   */\n      tag_206\n        /* \"#utility.yul\":9371:9375   */\n      dup2\n        /* \"#utility.yul\":9245:9376   */\n      tag_183\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9237:9376   */\n      swap1\n      pop\n        /* \"#utility.yul\":8964:9383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9389:9808   */\n    tag_43:\n        /* \"#utility.yul\":9555:9559   */\n      0x00\n        /* \"#utility.yul\":9593:9595   */\n      0x20\n        /* \"#utility.yul\":9582:9591   */\n      dup3\n        /* \"#utility.yul\":9578:9596   */\n      add\n        /* \"#utility.yul\":9570:9596   */\n      swap1\n      pop\n        /* \"#utility.yul\":9642:9651   */\n      dup2\n        /* \"#utility.yul\":9636:9640   */\n      dup2\n        /* \"#utility.yul\":9632:9652   */\n      sub\n        /* \"#utility.yul\":9628:9629   */\n      0x00\n        /* \"#utility.yul\":9617:9626   */\n      dup4\n        /* \"#utility.yul\":9613:9630   */\n      add\n        /* \"#utility.yul\":9606:9653   */\n      mstore\n        /* \"#utility.yul\":9670:9801   */\n      tag_208\n        /* \"#utility.yul\":9796:9800   */\n      dup2\n        /* \"#utility.yul\":9670:9801   */\n      tag_188\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9662:9801   */\n      swap1\n      pop\n        /* \"#utility.yul\":9389:9808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9814:10036   */\n    tag_13:\n        /* \"#utility.yul\":9907:9911   */\n      0x00\n        /* \"#utility.yul\":9945:9947   */\n      0x20\n        /* \"#utility.yul\":9934:9943   */\n      dup3\n        /* \"#utility.yul\":9930:9948   */\n      add\n        /* \"#utility.yul\":9922:9948   */\n      swap1\n      pop\n        /* \"#utility.yul\":9958:10029   */\n      tag_210\n        /* \"#utility.yul\":10026:10027   */\n      0x00\n        /* \"#utility.yul\":10015:10024   */\n      dup4\n        /* \"#utility.yul\":10011:10028   */\n      add\n        /* \"#utility.yul\":10002:10008   */\n      dup5\n        /* \"#utility.yul\":9958:10029   */\n      tag_196\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":9814:10036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10042:10171   */\n    tag_79:\n        /* \"#utility.yul\":10076:10082   */\n      0x00\n        /* \"#utility.yul\":10103:10123   */\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10093:10123   */\n      swap1\n      pop\n        /* \"#utility.yul\":10132:10165   */\n      tag_214\n        /* \"#utility.yul\":10160:10164   */\n      dup3\n        /* \"#utility.yul\":10152:10158   */\n      dup3\n        /* \"#utility.yul\":10132:10165   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":10042:10171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10177:10252   */\n    tag_213:\n        /* \"#utility.yul\":10210:10216   */\n      0x00\n        /* \"#utility.yul\":10243:10245   */\n      0x40\n        /* \"#utility.yul\":10237:10246   */\n      mload\n        /* \"#utility.yul\":10227:10246   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10252   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10258:10569   */\n    tag_78:\n        /* \"#utility.yul\":10335:10339   */\n      0x00\n        /* \"#utility.yul\":10425:10443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10417:10423   */\n      dup3\n        /* \"#utility.yul\":10414:10444   */\n      gt\n        /* \"#utility.yul\":10411:10467   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":10447:10465   */\n      tag_219\n      tag_46\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10411:10467   */\n    tag_218:\n        /* \"#utility.yul\":10497:10501   */\n      0x20\n        /* \"#utility.yul\":10489:10495   */\n      dup3\n        /* \"#utility.yul\":10485:10502   */\n      mul\n        /* \"#utility.yul\":10477:10502   */\n      swap1\n      pop\n        /* \"#utility.yul\":10557:10561   */\n      0x20\n        /* \"#utility.yul\":10551:10555   */\n      dup2\n        /* \"#utility.yul\":10547:10562   */\n      add\n        /* \"#utility.yul\":10539:10562   */\n      swap1\n      pop\n        /* \"#utility.yul\":10258:10569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10575:10886   */\n    tag_92:\n        /* \"#utility.yul\":10652:10656   */\n      0x00\n        /* \"#utility.yul\":10742:10760   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10734:10740   */\n      dup3\n        /* \"#utility.yul\":10731:10761   */\n      gt\n        /* \"#utility.yul\":10728:10784   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":10764:10782   */\n      tag_222\n      tag_46\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10728:10784   */\n    tag_221:\n        /* \"#utility.yul\":10814:10818   */\n      0x20\n        /* \"#utility.yul\":10806:10812   */\n      dup3\n        /* \"#utility.yul\":10802:10819   */\n      mul\n        /* \"#utility.yul\":10794:10819   */\n      swap1\n      pop\n        /* \"#utility.yul\":10874:10878   */\n      0x20\n        /* \"#utility.yul\":10868:10872   */\n      dup2\n        /* \"#utility.yul\":10864:10879   */\n      add\n        /* \"#utility.yul\":10856:10879   */\n      swap1\n      pop\n        /* \"#utility.yul\":10575:10886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10892:11024   */\n    tag_166:\n        /* \"#utility.yul\":10959:10963   */\n      0x00\n        /* \"#utility.yul\":10982:10985   */\n      dup2\n        /* \"#utility.yul\":10974:10985   */\n      swap1\n      pop\n        /* \"#utility.yul\":11012:11016   */\n      0x20\n        /* \"#utility.yul\":11007:11010   */\n      dup3\n        /* \"#utility.yul\":11003:11017   */\n      add\n        /* \"#utility.yul\":10995:11017   */\n      swap1\n      pop\n        /* \"#utility.yul\":10892:11024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11030:11144   */\n    tag_162:\n        /* \"#utility.yul\":11097:11103   */\n      0x00\n        /* \"#utility.yul\":11131:11136   */\n      dup2\n        /* \"#utility.yul\":11125:11137   */\n      mload\n        /* \"#utility.yul\":11115:11137   */\n      swap1\n      pop\n        /* \"#utility.yul\":11030:11144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11150:11263   */\n    tag_172:\n        /* \"#utility.yul\":11220:11224   */\n      0x00\n        /* \"#utility.yul\":11252:11256   */\n      0x20\n        /* \"#utility.yul\":11247:11250   */\n      dup3\n        /* \"#utility.yul\":11243:11257   */\n      add\n        /* \"#utility.yul\":11235:11257   */\n      swap1\n      pop\n        /* \"#utility.yul\":11150:11263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11269:11453   */\n    tag_164:\n        /* \"#utility.yul\":11368:11379   */\n      0x00\n        /* \"#utility.yul\":11402:11408   */\n      dup3\n        /* \"#utility.yul\":11397:11400   */\n      dup3\n        /* \"#utility.yul\":11390:11409   */\n      mstore\n        /* \"#utility.yul\":11442:11446   */\n      0x20\n        /* \"#utility.yul\":11437:11440   */\n      dup3\n        /* \"#utility.yul\":11433:11447   */\n      add\n        /* \"#utility.yul\":11418:11447   */\n      swap1\n      pop\n        /* \"#utility.yul\":11269:11453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11459:11628   */\n    tag_180:\n        /* \"#utility.yul\":11543:11554   */\n      0x00\n        /* \"#utility.yul\":11577:11583   */\n      dup3\n        /* \"#utility.yul\":11572:11575   */\n      dup3\n        /* \"#utility.yul\":11565:11584   */\n      mstore\n        /* \"#utility.yul\":11617:11621   */\n      0x20\n        /* \"#utility.yul\":11612:11615   */\n      dup3\n        /* \"#utility.yul\":11608:11622   */\n      add\n        /* \"#utility.yul\":11593:11622   */\n      swap1\n      pop\n        /* \"#utility.yul\":11459:11628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11634:11730   */\n    tag_228:\n        /* \"#utility.yul\":11671:11678   */\n      0x00\n        /* \"#utility.yul\":11700:11724   */\n      tag_230\n        /* \"#utility.yul\":11718:11723   */\n      dup3\n        /* \"#utility.yul\":11700:11724   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":11689:11724   */\n      swap1\n      pop\n        /* \"#utility.yul\":11634:11730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11736:11826   */\n    tag_176:\n        /* \"#utility.yul\":11770:11777   */\n      0x00\n        /* \"#utility.yul\":11813:11818   */\n      dup2\n        /* \"#utility.yul\":11806:11819   */\n      iszero\n        /* \"#utility.yul\":11799:11820   */\n      iszero\n        /* \"#utility.yul\":11788:11820   */\n      swap1\n      pop\n        /* \"#utility.yul\":11736:11826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11832:11981   */\n    tag_233:\n        /* \"#utility.yul\":11868:11875   */\n      0x00\n        /* \"#utility.yul\":11908:11974   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11901:11906   */\n      dup3\n        /* \"#utility.yul\":11897:11975   */\n      and\n        /* \"#utility.yul\":11886:11975   */\n      swap1\n      pop\n        /* \"#utility.yul\":11832:11981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11987:12113   */\n    tag_231:\n        /* \"#utility.yul\":12024:12031   */\n      0x00\n        /* \"#utility.yul\":12064:12106   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12057:12062   */\n      dup3\n        /* \"#utility.yul\":12053:12107   */\n      and\n        /* \"#utility.yul\":12042:12107   */\n      swap1\n      pop\n        /* \"#utility.yul\":11987:12113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12119:12196   */\n    tag_195:\n        /* \"#utility.yul\":12156:12163   */\n      0x00\n        /* \"#utility.yul\":12185:12190   */\n      dup2\n        /* \"#utility.yul\":12174:12190   */\n      swap1\n      pop\n        /* \"#utility.yul\":12119:12196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12202:12483   */\n    tag_215:\n        /* \"#utility.yul\":12285:12312   */\n      tag_238\n        /* \"#utility.yul\":12307:12311   */\n      dup3\n        /* \"#utility.yul\":12285:12312   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12277:12283   */\n      dup2\n        /* \"#utility.yul\":12273:12313   */\n      add\n        /* \"#utility.yul\":12415:12421   */\n      dup2\n        /* \"#utility.yul\":12403:12413   */\n      dup2\n        /* \"#utility.yul\":12400:12422   */\n      lt\n        /* \"#utility.yul\":12379:12397   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12367:12377   */\n      dup3\n        /* \"#utility.yul\":12364:12398   */\n      gt\n        /* \"#utility.yul\":12361:12423   */\n      or\n        /* \"#utility.yul\":12358:12446   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":12426:12444   */\n      tag_241\n      tag_46\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":12358:12446   */\n    tag_240:\n        /* \"#utility.yul\":12466:12476   */\n      dup1\n        /* \"#utility.yul\":12462:12464   */\n      0x40\n        /* \"#utility.yul\":12455:12477   */\n      mstore\n        /* \"#utility.yul\":12245:12483   */\n      pop\n        /* \"#utility.yul\":12202:12483   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12489:12722   */\n    tag_60:\n        /* \"#utility.yul\":12528:12531   */\n      0x00\n        /* \"#utility.yul\":12551:12575   */\n      tag_243\n        /* \"#utility.yul\":12569:12574   */\n      dup3\n        /* \"#utility.yul\":12551:12575   */\n      tag_195\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":12542:12575   */\n      swap2\n      pop\n        /* \"#utility.yul\":12597:12663   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12590:12595   */\n      dup3\n        /* \"#utility.yul\":12587:12664   */\n      eq\n        /* \"#utility.yul\":12584:12687   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":12667:12685   */\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":12584:12687   */\n    tag_244:\n        /* \"#utility.yul\":12714:12715   */\n      0x01\n        /* \"#utility.yul\":12707:12712   */\n      dup3\n        /* \"#utility.yul\":12703:12716   */\n      add\n        /* \"#utility.yul\":12696:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12489:12722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12728:12908   */\n    tag_246:\n        /* \"#utility.yul\":12776:12853   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12773:12774   */\n      0x00\n        /* \"#utility.yul\":12766:12854   */\n      mstore\n        /* \"#utility.yul\":12873:12877   */\n      0x11\n        /* \"#utility.yul\":12870:12871   */\n      0x04\n        /* \"#utility.yul\":12863:12878   */\n      mstore\n        /* \"#utility.yul\":12897:12901   */\n      0x24\n        /* \"#utility.yul\":12894:12895   */\n      0x00\n        /* \"#utility.yul\":12887:12902   */\n      revert\n        /* \"#utility.yul\":12914:13094   */\n    tag_54:\n        /* \"#utility.yul\":12962:13039   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12959:12960   */\n      0x00\n        /* \"#utility.yul\":12952:13040   */\n      mstore\n        /* \"#utility.yul\":13059:13063   */\n      0x32\n        /* \"#utility.yul\":13056:13057   */\n      0x04\n        /* \"#utility.yul\":13049:13064   */\n      mstore\n        /* \"#utility.yul\":13083:13087   */\n      0x24\n        /* \"#utility.yul\":13080:13081   */\n      0x00\n        /* \"#utility.yul\":13073:13088   */\n      revert\n        /* \"#utility.yul\":13100:13280   */\n    tag_46:\n        /* \"#utility.yul\":13148:13225   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13145:13146   */\n      0x00\n        /* \"#utility.yul\":13138:13226   */\n      mstore\n        /* \"#utility.yul\":13245:13249   */\n      0x41\n        /* \"#utility.yul\":13242:13243   */\n      0x04\n        /* \"#utility.yul\":13235:13250   */\n      mstore\n        /* \"#utility.yul\":13269:13273   */\n      0x24\n        /* \"#utility.yul\":13266:13267   */\n      0x00\n        /* \"#utility.yul\":13259:13274   */\n      revert\n        /* \"#utility.yul\":13286:13403   */\n    tag_107:\n        /* \"#utility.yul\":13395:13396   */\n      0x00\n        /* \"#utility.yul\":13392:13393   */\n      dup1\n        /* \"#utility.yul\":13385:13397   */\n      revert\n        /* \"#utility.yul\":13409:13526   */\n    tag_82:\n        /* \"#utility.yul\":13518:13519   */\n      0x00\n        /* \"#utility.yul\":13515:13516   */\n      dup1\n        /* \"#utility.yul\":13508:13520   */\n      revert\n        /* \"#utility.yul\":13532:13649   */\n    tag_146:\n        /* \"#utility.yul\":13641:13642   */\n      0x00\n        /* \"#utility.yul\":13638:13639   */\n      dup1\n        /* \"#utility.yul\":13631:13643   */\n      revert\n        /* \"#utility.yul\":13655:13772   */\n    tag_128:\n        /* \"#utility.yul\":13764:13765   */\n      0x00\n        /* \"#utility.yul\":13761:13762   */\n      dup1\n        /* \"#utility.yul\":13754:13766   */\n      revert\n        /* \"#utility.yul\":13778:13880   */\n    tag_239:\n        /* \"#utility.yul\":13819:13825   */\n      0x00\n        /* \"#utility.yul\":13870:13872   */\n      0x1f\n        /* \"#utility.yul\":13866:13873   */\n      not\n        /* \"#utility.yul\":13861:13863   */\n      0x1f\n        /* \"#utility.yul\":13854:13859   */\n      dup4\n        /* \"#utility.yul\":13850:13864   */\n      add\n        /* \"#utility.yul\":13846:13874   */\n      and\n        /* \"#utility.yul\":13836:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13778:13880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13886:14116   */\n    tag_182:\n        /* \"#utility.yul\":14026:14060   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":14022:14023   */\n      0x00\n        /* \"#utility.yul\":14014:14020   */\n      dup3\n        /* \"#utility.yul\":14010:14024   */\n      add\n        /* \"#utility.yul\":14003:14061   */\n      mstore\n        /* \"#utility.yul\":14095:14108   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14090:14092   */\n      0x20\n        /* \"#utility.yul\":14082:14088   */\n      dup3\n        /* \"#utility.yul\":14078:14093   */\n      add\n        /* \"#utility.yul\":14071:14109   */\n      mstore\n        /* \"#utility.yul\":13886:14116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14122:14350   */\n    tag_187:\n        /* \"#utility.yul\":14262:14296   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":14258:14259   */\n      0x00\n        /* \"#utility.yul\":14250:14256   */\n      dup3\n        /* \"#utility.yul\":14246:14260   */\n      add\n        /* \"#utility.yul\":14239:14297   */\n      mstore\n        /* \"#utility.yul\":14331:14342   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14326:14328   */\n      0x20\n        /* \"#utility.yul\":14318:14324   */\n      dup3\n        /* \"#utility.yul\":14314:14329   */\n      add\n        /* \"#utility.yul\":14307:14343   */\n      mstore\n        /* \"#utility.yul\":14122:14350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14356:14584   */\n    tag_192:\n        /* \"#utility.yul\":14496:14530   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":14492:14493   */\n      0x00\n        /* \"#utility.yul\":14484:14490   */\n      dup3\n        /* \"#utility.yul\":14480:14494   */\n      add\n        /* \"#utility.yul\":14473:14531   */\n      mstore\n        /* \"#utility.yul\":14565:14576   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14560:14562   */\n      0x20\n        /* \"#utility.yul\":14552:14558   */\n      dup3\n        /* \"#utility.yul\":14548:14563   */\n      add\n        /* \"#utility.yul\":14541:14577   */\n      mstore\n        /* \"#utility.yul\":14356:14584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14590:14712   */\n    tag_102:\n        /* \"#utility.yul\":14663:14687   */\n      tag_259\n        /* \"#utility.yul\":14681:14686   */\n      dup2\n        /* \"#utility.yul\":14663:14687   */\n      tag_228\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":14656:14661   */\n      dup2\n        /* \"#utility.yul\":14653:14688   */\n      eq\n        /* \"#utility.yul\":14643:14706   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":14702:14703   */\n      0x00\n        /* \"#utility.yul\":14699:14700   */\n      dup1\n        /* \"#utility.yul\":14692:14704   */\n      revert\n        /* \"#utility.yul\":14643:14706   */\n    tag_260:\n        /* \"#utility.yul\":14590:14712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:14834   */\n    tag_117:\n        /* \"#utility.yul\":14788:14809   */\n      tag_262\n        /* \"#utility.yul\":14803:14808   */\n      dup2\n        /* \"#utility.yul\":14788:14809   */\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":14781:14786   */\n      dup2\n        /* \"#utility.yul\":14778:14810   */\n      eq\n        /* \"#utility.yul\":14768:14828   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":14824:14825   */\n      0x00\n        /* \"#utility.yul\":14821:14822   */\n      dup1\n        /* \"#utility.yul\":14814:14826   */\n      revert\n        /* \"#utility.yul\":14768:14828   */\n    tag_263:\n        /* \"#utility.yul\":14718:14834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14840:14960   */\n    tag_121:\n        /* \"#utility.yul\":14912:14935   */\n      tag_265\n        /* \"#utility.yul\":14929:14934   */\n      dup2\n        /* \"#utility.yul\":14912:14935   */\n      tag_233\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":14905:14910   */\n      dup2\n        /* \"#utility.yul\":14902:14936   */\n      eq\n        /* \"#utility.yul\":14892:14954   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":14950:14951   */\n      0x00\n        /* \"#utility.yul\":14947:14948   */\n      dup1\n        /* \"#utility.yul\":14940:14952   */\n      revert\n        /* \"#utility.yul\":14892:14954   */\n    tag_266:\n        /* \"#utility.yul\":14840:14960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14966:15088   */\n    tag_124:\n        /* \"#utility.yul\":15039:15063   */\n      tag_268\n        /* \"#utility.yul\":15057:15062   */\n      dup2\n        /* \"#utility.yul\":15039:15063   */\n      tag_195\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":15032:15037   */\n      dup2\n        /* \"#utility.yul\":15029:15064   */\n      eq\n        /* \"#utility.yul\":15019:15082   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":15078:15079   */\n      0x00\n        /* \"#utility.yul\":15075:15076   */\n      dup1\n        /* \"#utility.yul\":15068:15080   */\n      revert\n        /* \"#utility.yul\":15019:15082   */\n    tag_269:\n        /* \"#utility.yul\":14966:15088   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610e41806100206000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b57806301ffc9a71461008b5780634e1273f4146100bb578063a22cb465146100eb578063e985e9c514610107575b600080fd5b610075600480360381019061007091906107b2565b610137565b6040516100829190610a40565b60405180910390f35b6100a560048036038101906100a0919061086a565b610200565b6040516100b291906109c5565b60405180910390f35b6100d560048036038101906100d091906107f2565b61026a565b6040516100e291906109a3565b60405180910390f35b61010560048036038101906101009190610772565b610383565b005b610121600480360381019061011c9190610732565b610399565b60405161012e91906109c5565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019f906109e0565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606081518351146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610a20565b60405180910390fd5b6000835167ffffffffffffffff8111156102cd576102cc610c6e565b5b6040519080825280602002602001820160405280156102fb5781602001602082028036833780820191505090505b50905060005b8451811015610378576103488582815181106103205761031f610c3f565b5b602002602001015185838151811061033b5761033a610c3f565b5b6020026020010151610137565b82828151811061035b5761035a610c3f565b5b6020026020010181815250508061037190610bc7565b9050610301565b508091505092915050565b61039561038e61042d565b8383610435565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610a00565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161059591906109c5565b60405180910390a3505050565b60006105b56105b084610a80565b610a5b565b905080838252602082019050828560208602820111156105d8576105d7610ca2565b5b60005b8581101561060857816105ee8882610682565b8452602084019350602083019250506001810190506105db565b5050509392505050565b600061062561062084610aac565b610a5b565b9050808382526020820190508285602086028201111561064857610647610ca2565b5b60005b85811015610678578161065e888261071d565b84526020840193506020830192505060018101905061064b565b5050509392505050565b60008135905061069181610daf565b92915050565b600082601f8301126106ac576106ab610c9d565b5b81356106bc8482602086016105a2565b91505092915050565b600082601f8301126106da576106d9610c9d565b5b81356106ea848260208601610612565b91505092915050565b60008135905061070281610dc6565b92915050565b60008135905061071781610ddd565b92915050565b60008135905061072c81610df4565b92915050565b6000806040838503121561074957610748610cac565b5b600061075785828601610682565b925050602061076885828601610682565b9150509250929050565b6000806040838503121561078957610788610cac565b5b600061079785828601610682565b92505060206107a8858286016106f3565b9150509250929050565b600080604083850312156107c9576107c8610cac565b5b60006107d785828601610682565b92505060206107e88582860161071d565b9150509250929050565b6000806040838503121561080957610808610cac565b5b600083013567ffffffffffffffff81111561082757610826610ca7565b5b61083385828601610697565b925050602083013567ffffffffffffffff81111561085457610853610ca7565b5b610860858286016106c5565b9150509250929050565b6000602082840312156108805761087f610cac565b5b600061088e84828501610708565b91505092915050565b60006108a38383610985565b60208301905092915050565b60006108ba82610ae8565b6108c48185610b00565b93506108cf83610ad8565b8060005b838110156109005781516108e78882610897565b97506108f283610af3565b9250506001810190506108d3565b5085935050505092915050565b61091681610b34565b82525050565b6000610929602b83610b11565b915061093482610cc2565b604082019050919050565b600061094c602983610b11565b915061095782610d11565b604082019050919050565b600061096f602983610b11565b915061097a82610d60565b604082019050919050565b61098e81610b8c565b82525050565b61099d81610b8c565b82525050565b600060208201905081810360008301526109bd81846108af565b905092915050565b60006020820190506109da600083018461090d565b92915050565b600060208201905081810360008301526109f98161091c565b9050919050565b60006020820190508181036000830152610a198161093f565b9050919050565b60006020820190508181036000830152610a3981610962565b9050919050565b6000602082019050610a556000830184610994565b92915050565b6000610a65610a76565b9050610a718282610b96565b919050565b6000604051905090565b600067ffffffffffffffff821115610a9b57610a9a610c6e565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ac757610ac6610c6e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b2d82610b6c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b9f82610cb1565b810181811067ffffffffffffffff82111715610bbe57610bbd610c6e565b5b80604052505050565b6000610bd282610b8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0557610c04610c10565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b610db881610b22565b8114610dc357600080fd5b50565b610dcf81610b34565b8114610dda57600080fd5b50565b610de681610b40565b8114610df157600080fd5b50565b610dfd81610b8c565b8114610e0857600080fd5b5056fea2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE41 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH2 0x348 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x33B JUMPI PUSH2 0x33A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x137 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x371 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x301 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x38E PUSH2 0x42D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x5B0 DUP5 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP2 PUSH2 0x5EE DUP9 DUP3 PUSH2 0x682 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x620 DUP5 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x678 JUMPI DUP2 PUSH2 0x65E DUP9 DUP3 PUSH2 0x71D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x64B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x691 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DA JUMPI PUSH2 0x6D9 PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x612 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x702 DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x717 DUP2 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72C DUP2 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH2 0x748 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x757 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x768 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x797 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7A8 DUP6 DUP3 DUP7 ADD PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E8 DUP6 DUP3 DUP7 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x833 DUP6 DUP3 DUP7 ADD PUSH2 0x697 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x860 DUP6 DUP3 DUP7 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x880 JUMPI PUSH2 0x87F PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x88E DUP5 DUP3 DUP6 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP4 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP3 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x8C4 DUP2 DUP6 PUSH2 0xB00 JUMP JUMPDEST SWAP4 POP PUSH2 0x8CF DUP4 PUSH2 0xAD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x900 JUMPI DUP2 MLOAD PUSH2 0x8E7 DUP9 DUP3 PUSH2 0x897 JUMP JUMPDEST SWAP8 POP PUSH2 0x8F2 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8D3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x929 PUSH1 0x2B DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x934 DUP3 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94C PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x957 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96F PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x97A DUP3 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98E DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x99D DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9BD DUP2 DUP5 PUSH2 0x8AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA19 DUP2 PUSH2 0x93F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH2 0xA71 DUP3 DUP3 PUSH2 0xB96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D DUP3 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9F DUP3 PUSH2 0xCB1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBBE JUMPI PUSH2 0xBBD PUSH2 0xC6E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 DUP3 PUSH2 0xB8C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xB22 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xB40 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xE08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x4A SLOAD 0xEE 0xA6 0xDC 0xC4 SWAP2 0x4E 0x4D RETURNDATASIZE 0x2B PUSH7 0x8CDB5948040853 0xE5 REVERT 0xCE SWAP15 0xC0 0x2B PUSH13 0x4E5451933564736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "463:10649:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_308": {
									"entryPoint": 1069,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1163": {
									"entryPoint": 1077,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_611": {
									"entryPoint": 618,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_547": {
									"entryPoint": 311,
									"id": 547,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_646": {
									"entryPoint": 921,
									"id": 646,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setApprovalForAll_628": {
									"entryPoint": 899,
									"id": 628,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1431": {
									"entryPoint": 512,
									"id": 1431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15091:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:11",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:11"
															},
															"nodeType": "YulIf",
															"src": "350:143:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:11",
														"type": ""
													}
												],
												"src": "24:722:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:11",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:11"
															},
															"nodeType": "YulIf",
															"src": "1095:143:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:11",
														"type": ""
													}
												],
												"src": "769:722:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1549:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1559:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1568:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1559:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1624:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1597:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1527:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1535:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1543:5:11",
														"type": ""
													}
												],
												"src": "1497:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1736:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1787:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1787:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1787:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1764:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1772:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1760:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1760:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1779:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1756:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:35:11"
															},
															"nodeType": "YulIf",
															"src": "1746:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1877:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1891:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1881:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1920:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2004:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1929:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1920:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1714:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1722:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1730:5:11",
														"type": ""
													}
												],
												"src": "1659:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2178:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2180:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2180:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2180:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2157:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2165:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2153:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2172:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:35:11"
															},
															"nodeType": "YulIf",
															"src": "2139:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2270:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2274:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2313:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2397:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2404:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2322:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2313:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2107:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2115:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2123:5:11",
														"type": ""
													}
												],
												"src": "2052:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2496:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2487:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2549:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2525:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2525:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2525:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2455:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2463:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2471:5:11",
														"type": ""
													}
												],
												"src": "2428:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2618:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2628:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2650:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2637:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2628:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2666:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2666:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2596:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2604:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2612:5:11",
														"type": ""
													}
												],
												"src": "2567:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2762:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2772:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2794:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2781:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2772:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2837:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2810:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2810:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2740:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2748:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2756:5:11",
														"type": ""
													}
												],
												"src": "2710:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2984:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2986:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2986:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2986:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2959:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2968:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2955:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2980:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:32:11"
															},
															"nodeType": "YulIf",
															"src": "2948:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3077:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3092:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3096:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3121:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3131:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3204:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3219:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3223:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2900:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2911:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2923:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2931:6:11",
														"type": ""
													}
												],
												"src": "2855:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3415:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3461:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3463:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3463:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3463:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3436:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3445:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:32:11"
															},
															"nodeType": "YulIf",
															"src": "3425:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3554:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3569:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3583:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3573:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3598:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3633:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3644:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3629:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3629:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3653:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3608:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3598:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3681:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3696:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3700:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3726:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3758:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3769:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3754:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3754:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3736:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3726:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3377:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3388:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3400:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3408:6:11",
														"type": ""
													}
												],
												"src": "3335:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3892:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3938:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3940:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3940:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3940:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3913:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3922:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3909:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3934:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:32:11"
															},
															"nodeType": "YulIf",
															"src": "3902:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4031:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4046:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4050:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4075:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4110:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4121:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4106:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4106:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4085:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4085:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4075:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4158:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4173:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4187:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4177:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4203:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4238:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4249:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4234:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4234:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4258:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4213:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4203:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3854:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3865:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3877:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3885:6:11",
														"type": ""
													}
												],
												"src": "3809:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4422:761:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4468:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4470:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4470:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4470:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4452:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4439:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:32:11"
															},
															"nodeType": "YulIf",
															"src": "4432:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4561:302:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4576:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4607:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4618:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4603:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4603:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4590:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4590:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4580:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4668:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4670:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4670:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4670:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4640:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4648:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4637:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4637:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "4634:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4765:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4825:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4836:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4821:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4821:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4845:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4775:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4775:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4765:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4873:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4919:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4930:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4915:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4915:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4902:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4902:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4981:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4983:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4983:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4983:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4953:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4961:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4950:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "4947:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5078:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5138:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5149:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5134:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5134:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5158:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5088:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5088:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5078:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4384:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4395:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4407:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4415:6:11",
														"type": ""
													}
												],
												"src": "4289:894:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:11"
															},
															"nodeType": "YulIf",
															"src": "5264:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5471:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5482:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5467:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5467:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5491:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5447:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:11",
														"type": ""
													}
												],
												"src": "5189:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5602:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5646:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5654:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5612:33:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5612:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5612:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5667:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5685:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5690:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5681:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5681:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "5667:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5575:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "5591:10:11",
														"type": ""
													}
												],
												"src": "5522:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5861:608:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5871:68:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5933:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5885:47:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:54:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5875:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6029:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6034:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5955:73:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6050:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6115:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6065:49:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:56:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "6054:7:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6130:21:11",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "6144:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6134:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6220:224:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6234:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6261:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6255:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6255:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "6238:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6281:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "6332:13:11"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6347:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6288:43:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6288:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6281:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6364:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6427:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "6374:52:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6374:60:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6182:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6185:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6179:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6193:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6195:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6204:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6207:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6200:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6200:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6195:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6164:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6166:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6175:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "6170:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6160:284:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6460:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5840:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5847:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5856:3:11",
														"type": ""
													}
												],
												"src": "5737:732:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6534:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6551:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6571:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6556:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6544:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6544:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6522:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6529:3:11",
														"type": ""
													}
												],
												"src": "6475:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6746:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6817:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6753:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6918:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "6829:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6829:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6931:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6942:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6938:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6724:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6732:3:11",
														"type": ""
													}
												],
												"src": "6590:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7108:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7118:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7189:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7125:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7118:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7290:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "7201:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7201:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7201:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7303:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7314:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7319:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7096:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7104:3:11",
														"type": ""
													}
												],
												"src": "6962:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7480:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7490:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7497:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7497:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7662:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "7573:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7573:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7675:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7686:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7691:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7682:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7468:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7476:3:11",
														"type": ""
													}
												],
												"src": "7334:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7761:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7778:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7801:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7783:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7783:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7771:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7749:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7756:3:11",
														"type": ""
													}
												],
												"src": "7706:108:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7885:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7902:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7925:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7907:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7907:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7895:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7873:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7880:3:11",
														"type": ""
													}
												],
												"src": "7820:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8092:225:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8102:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8114:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8125:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8110:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8102:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8160:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8145:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8145:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8194:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8296:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8305:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8202:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8064:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8076:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8087:4:11",
														"type": ""
													}
												],
												"src": "7944:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8415:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8425:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8437:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8433:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8425:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8499:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8512:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8523:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8508:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8461:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8461:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8387:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8399:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8410:4:11",
														"type": ""
													}
												],
												"src": "8323:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8710:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8720:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8732:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8743:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8728:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8728:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8720:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8767:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8778:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8763:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8786:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8792:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8782:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8756:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8756:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8756:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8812:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8946:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8820:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8820:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8812:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8690:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8705:4:11",
														"type": ""
													}
												],
												"src": "8539:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9135:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9145:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9157:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9168:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9145:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9192:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9203:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9188:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9211:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9217:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9207:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9181:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9181:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9237:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9371:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9245:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9245:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9237:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9115:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9130:4:11",
														"type": ""
													}
												],
												"src": "8964:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9560:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9570:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9582:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9593:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9578:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9578:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9570:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9617:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9628:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9613:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9613:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9636:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9642:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9606:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9606:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9606:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9662:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9796:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9670:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9662:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9540:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9555:4:11",
														"type": ""
													}
												],
												"src": "9389:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9912:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9922:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9934:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9945:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9930:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9922:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10002:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10015:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10026:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10011:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10011:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9958:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9958:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9884:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9896:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9907:4:11",
														"type": ""
													}
												],
												"src": "9814:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10083:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10093:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "10103:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10152:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10160:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "10132:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10132:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10067:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10076:6:11",
														"type": ""
													}
												],
												"src": "10042:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10217:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10243:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10237:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10237:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10210:6:11",
														"type": ""
													}
												],
												"src": "10177:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10340:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10445:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10447:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10447:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10447:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10417:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10425:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10414:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:30:11"
															},
															"nodeType": "YulIf",
															"src": "10411:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10477:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10489:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10497:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10485:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10477:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10539:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10551:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10557:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10547:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10539:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10324:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10335:4:11",
														"type": ""
													}
												],
												"src": "10258:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10657:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10762:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10764:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10764:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10764:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10734:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10742:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10731:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10731:30:11"
															},
															"nodeType": "YulIf",
															"src": "10728:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10794:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10814:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10802:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10802:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10794:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10856:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10868:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10874:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10864:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10856:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10641:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10652:4:11",
														"type": ""
													}
												],
												"src": "10575:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10964:60:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10974:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "10982:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10974:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10995:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11007:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11012:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10995:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10951:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10959:4:11",
														"type": ""
													}
												],
												"src": "10892:132:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11104:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11115:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11131:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11125:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11115:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11087:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11097:6:11",
														"type": ""
													}
												],
												"src": "11030:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11225:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11235:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11247:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11252:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11243:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "11235:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11212:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "11220:4:11",
														"type": ""
													}
												],
												"src": "11150:113:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11380:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11397:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11402:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11390:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11390:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11390:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11418:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11437:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11442:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11433:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11433:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11418:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11352:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11357:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11368:11:11",
														"type": ""
													}
												],
												"src": "11269:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11555:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11572:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11577:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11565:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11565:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11593:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11612:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11617:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11608:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11593:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11527:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11532:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11543:11:11",
														"type": ""
													}
												],
												"src": "11459:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11679:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11689:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11718:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11700:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11689:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11661:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11671:7:11",
														"type": ""
													}
												],
												"src": "11634:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11778:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11788:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11813:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11806:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11806:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11788:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11760:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11770:7:11",
														"type": ""
													}
												],
												"src": "11736:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11876:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11886:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11901:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11908:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11897:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11886:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11858:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11868:7:11",
														"type": ""
													}
												],
												"src": "11832:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12042:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12057:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12042:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12014:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12024:7:11",
														"type": ""
													}
												],
												"src": "11987:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12164:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12174:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12185:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12174:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12146:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12156:7:11",
														"type": ""
													}
												],
												"src": "12119:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12245:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12255:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12277:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12307:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12285:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12285:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12273:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12259:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12424:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12426:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12426:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12426:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12367:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12379:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12364:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12364:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12403:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12415:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12400:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12400:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12361:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12361:62:11"
															},
															"nodeType": "YulIf",
															"src": "12358:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12466:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12231:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12239:4:11",
														"type": ""
													}
												],
												"src": "12202:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12532:190:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12542:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12569:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12551:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12551:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12542:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12665:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12667:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12667:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12667:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12590:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12597:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12587:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12587:77:11"
															},
															"nodeType": "YulIf",
															"src": "12584:103:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12696:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12707:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12714:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12696:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12518:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12528:3:11",
														"type": ""
													}
												],
												"src": "12489:233:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12756:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12773:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12776:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12766:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12766:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12766:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12870:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12873:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12863:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12863:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12863:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12894:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12887:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12887:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12887:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12728:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12962:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12952:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13056:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13059:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13049:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13049:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13080:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13083:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13073:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13073:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13073:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12914:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13128:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13145:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13148:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13138:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13138:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13138:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13242:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13245:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13235:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13235:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13235:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13266:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13269:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13259:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13259:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13259:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13100:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13375:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13392:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13395:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13385:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13385:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13385:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13286:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13498:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13518:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13508:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13508:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13508:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "13409:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13621:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13638:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13641:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13631:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13631:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13631:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13532:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13744:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13761:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13764:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13754:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13754:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13655:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13826:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13836:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13854:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13861:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13850:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13850:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13870:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13866:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13866:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13846:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13836:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13809:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13819:6:11",
														"type": ""
													}
												],
												"src": "13778:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13992:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14014:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14022:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14010:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14010:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14026:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14003:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14003:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14082:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14090:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14078:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14078:15:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14095:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14071:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14071:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14071:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13984:6:11",
														"type": ""
													}
												],
												"src": "13886:230:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14228:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14250:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14258:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14246:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14246:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14262:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14239:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14318:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14326:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14314:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14314:15:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14331:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14307:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14307:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14220:6:11",
														"type": ""
													}
												],
												"src": "14122:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14462:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14484:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14492:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14480:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14480:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14496:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14473:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14473:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14473:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14552:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14560:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14548:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14548:15:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14565:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14541:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14541:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14541:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14454:6:11",
														"type": ""
													}
												],
												"src": "14356:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14633:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14690:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14699:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14702:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14692:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14692:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14692:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14656:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14681:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14663:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14663:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14653:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14653:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14646:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14646:43:11"
															},
															"nodeType": "YulIf",
															"src": "14643:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14626:5:11",
														"type": ""
													}
												],
												"src": "14590:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14758:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14814:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14814:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14781:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14803:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14788:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14788:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14778:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14778:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14771:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14771:40:11"
															},
															"nodeType": "YulIf",
															"src": "14768:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14751:5:11",
														"type": ""
													}
												],
												"src": "14718:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14882:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14938:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14947:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14950:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14940:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14940:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14940:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14905:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14929:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "14912:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14912:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14902:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14902:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14895:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14895:42:11"
															},
															"nodeType": "YulIf",
															"src": "14892:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14875:5:11",
														"type": ""
													}
												],
												"src": "14840:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15009:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15066:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15075:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15078:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15068:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15068:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15068:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15032:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15057:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15039:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15039:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15029:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15029:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15022:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:43:11"
															},
															"nodeType": "YulIf",
															"src": "15019:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15002:5:11",
														"type": ""
													}
												],
												"src": "14966:122:11"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b57806301ffc9a71461008b5780634e1273f4146100bb578063a22cb465146100eb578063e985e9c514610107575b600080fd5b610075600480360381019061007091906107b2565b610137565b6040516100829190610a40565b60405180910390f35b6100a560048036038101906100a0919061086a565b610200565b6040516100b291906109c5565b60405180910390f35b6100d560048036038101906100d091906107f2565b61026a565b6040516100e291906109a3565b60405180910390f35b61010560048036038101906101009190610772565b610383565b005b610121600480360381019061011c9190610732565b610399565b60405161012e91906109c5565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019f906109e0565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606081518351146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610a20565b60405180910390fd5b6000835167ffffffffffffffff8111156102cd576102cc610c6e565b5b6040519080825280602002602001820160405280156102fb5781602001602082028036833780820191505090505b50905060005b8451811015610378576103488582815181106103205761031f610c3f565b5b602002602001015185838151811061033b5761033a610c3f565b5b6020026020010151610137565b82828151811061035b5761035a610c3f565b5b6020026020010181815250508061037190610bc7565b9050610301565b508091505092915050565b61039561038e61042d565b8383610435565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610a00565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161059591906109c5565b60405180910390a3505050565b60006105b56105b084610a80565b610a5b565b905080838252602082019050828560208602820111156105d8576105d7610ca2565b5b60005b8581101561060857816105ee8882610682565b8452602084019350602083019250506001810190506105db565b5050509392505050565b600061062561062084610aac565b610a5b565b9050808382526020820190508285602086028201111561064857610647610ca2565b5b60005b85811015610678578161065e888261071d565b84526020840193506020830192505060018101905061064b565b5050509392505050565b60008135905061069181610daf565b92915050565b600082601f8301126106ac576106ab610c9d565b5b81356106bc8482602086016105a2565b91505092915050565b600082601f8301126106da576106d9610c9d565b5b81356106ea848260208601610612565b91505092915050565b60008135905061070281610dc6565b92915050565b60008135905061071781610ddd565b92915050565b60008135905061072c81610df4565b92915050565b6000806040838503121561074957610748610cac565b5b600061075785828601610682565b925050602061076885828601610682565b9150509250929050565b6000806040838503121561078957610788610cac565b5b600061079785828601610682565b92505060206107a8858286016106f3565b9150509250929050565b600080604083850312156107c9576107c8610cac565b5b60006107d785828601610682565b92505060206107e88582860161071d565b9150509250929050565b6000806040838503121561080957610808610cac565b5b600083013567ffffffffffffffff81111561082757610826610ca7565b5b61083385828601610697565b925050602083013567ffffffffffffffff81111561085457610853610ca7565b5b610860858286016106c5565b9150509250929050565b6000602082840312156108805761087f610cac565b5b600061088e84828501610708565b91505092915050565b60006108a38383610985565b60208301905092915050565b60006108ba82610ae8565b6108c48185610b00565b93506108cf83610ad8565b8060005b838110156109005781516108e78882610897565b97506108f283610af3565b9250506001810190506108d3565b5085935050505092915050565b61091681610b34565b82525050565b6000610929602b83610b11565b915061093482610cc2565b604082019050919050565b600061094c602983610b11565b915061095782610d11565b604082019050919050565b600061096f602983610b11565b915061097a82610d60565b604082019050919050565b61098e81610b8c565b82525050565b61099d81610b8c565b82525050565b600060208201905081810360008301526109bd81846108af565b905092915050565b60006020820190506109da600083018461090d565b92915050565b600060208201905081810360008301526109f98161091c565b9050919050565b60006020820190508181036000830152610a198161093f565b9050919050565b60006020820190508181036000830152610a3981610962565b9050919050565b6000602082019050610a556000830184610994565b92915050565b6000610a65610a76565b9050610a718282610b96565b919050565b6000604051905090565b600067ffffffffffffffff821115610a9b57610a9a610c6e565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ac757610ac6610c6e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b2d82610b6c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b9f82610cb1565b810181811067ffffffffffffffff82111715610bbe57610bbd610c6e565b5b80604052505050565b6000610bd282610b8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0557610c04610c10565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b610db881610b22565b8114610dc357600080fd5b50565b610dcf81610b34565b8114610dda57600080fd5b50565b610de681610b40565b8114610df157600080fd5b50565b610dfd81610b8c565b8114610e0857600080fd5b5056fea2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH2 0x348 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x33B JUMPI PUSH2 0x33A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x137 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x371 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x301 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x38E PUSH2 0x42D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x5B0 DUP5 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP2 PUSH2 0x5EE DUP9 DUP3 PUSH2 0x682 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x620 DUP5 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x678 JUMPI DUP2 PUSH2 0x65E DUP9 DUP3 PUSH2 0x71D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x64B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x691 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DA JUMPI PUSH2 0x6D9 PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x612 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x702 DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x717 DUP2 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72C DUP2 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH2 0x748 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x757 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x768 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x797 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7A8 DUP6 DUP3 DUP7 ADD PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E8 DUP6 DUP3 DUP7 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x833 DUP6 DUP3 DUP7 ADD PUSH2 0x697 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x860 DUP6 DUP3 DUP7 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x880 JUMPI PUSH2 0x87F PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x88E DUP5 DUP3 DUP6 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP4 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP3 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x8C4 DUP2 DUP6 PUSH2 0xB00 JUMP JUMPDEST SWAP4 POP PUSH2 0x8CF DUP4 PUSH2 0xAD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x900 JUMPI DUP2 MLOAD PUSH2 0x8E7 DUP9 DUP3 PUSH2 0x897 JUMP JUMPDEST SWAP8 POP PUSH2 0x8F2 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8D3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x929 PUSH1 0x2B DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x934 DUP3 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94C PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x957 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96F PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x97A DUP3 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98E DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x99D DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9BD DUP2 DUP5 PUSH2 0x8AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA19 DUP2 PUSH2 0x93F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH2 0xA71 DUP3 DUP3 PUSH2 0xB96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D DUP3 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9F DUP3 PUSH2 0xCB1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBBE JUMPI PUSH2 0xBBD PUSH2 0xC6E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 DUP3 PUSH2 0xB8C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xB22 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xB40 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xE08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x4A SLOAD 0xEE 0xA6 0xDC 0xC4 SWAP2 0x4E 0x4D RETURNDATASIZE 0x2B PUSH7 0x8CDB5948040853 0xE5 REVERT 0xCE SWAP15 0xC0 0x2B PUSH13 0x4E5451933564736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "463:10649:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;829:155:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:508:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1894:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2114:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:228;1019:7;1065:1;1046:21;;:7;:21;;;;1038:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1132:9;:13;1142:2;1132:13;;;;;;;;;;;:22;1146:7;1132:22;;;;;;;;;;;;;;;;1125:29;;933:228;;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;1318:508:3:-;1469:16;1528:3;:10;1509:8;:15;:29;1501:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1595:30;1642:8;:15;1628:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:63;;1674:9;1669:120;1693:8;:15;1689:1;:19;1669:120;;;1748:30;1758:8;1767:1;1758:11;;;;;;;;:::i;:::-;;;;;;;;1771:3;1775:1;1771:6;;;;;;;;:::i;:::-;;;;;;;;1748:9;:30::i;:::-;1729:13;1743:1;1729:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;1710:3;;;;:::i;:::-;;;1669:120;;;;1806:13;1799:20;;;1318:508;;;;:::o;1894:153::-;1988:52;2007:12;:10;:12::i;:::-;2021:8;2031;1988:18;:52::i;:::-;1894:153;;:::o;2114:166::-;2213:4;2236:18;:27;2255:7;2236:27;;;;;;;;;;;;;;;:37;2264:8;2236:37;;;;;;;;;;;;;;;;;;;;;;;;;2229:44;;2114:166;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7910:323:3:-;8060:8;8051:17;;:5;:17;;;;8043:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8162:8;8124:18;:25;8143:5;8124:25;;;;;;;;;;;;;;;:35;8150:8;8124:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;8207:8;8185:41;;8200:5;8185:41;;;8217:8;8185:41;;;;;;:::i;:::-;;;;;;;;7910:323;;;:::o;24:722:11:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:139::-;1543:5;1581:6;1568:20;1559:29;;1597:33;1624:5;1597:33;:::i;:::-;1497:139;;;;:::o;1659:370::-;1730:5;1779:3;1772:4;1764:6;1760:17;1756:27;1746:122;;1787:79;;:::i;:::-;1746:122;1904:6;1891:20;1929:94;2019:3;2011:6;2004:4;1996:6;1992:17;1929:94;:::i;:::-;1920:103;;1736:293;1659:370;;;;:::o;2052:::-;2123:5;2172:3;2165:4;2157:6;2153:17;2149:27;2139:122;;2180:79;;:::i;:::-;2139:122;2297:6;2284:20;2322:94;2412:3;2404:6;2397:4;2389:6;2385:17;2322:94;:::i;:::-;2313:103;;2129:293;2052:370;;;;:::o;2428:133::-;2471:5;2509:6;2496:20;2487:29;;2525:30;2549:5;2525:30;:::i;:::-;2428:133;;;;:::o;2567:137::-;2612:5;2650:6;2637:20;2628:29;;2666:32;2692:5;2666:32;:::i;:::-;2567:137;;;;:::o;2710:139::-;2756:5;2794:6;2781:20;2772:29;;2810:33;2837:5;2810:33;:::i;:::-;2710:139;;;;:::o;2855:474::-;2923:6;2931;2980:2;2968:9;2959:7;2955:23;2951:32;2948:119;;;2986:79;;:::i;:::-;2948:119;3106:1;3131:53;3176:7;3167:6;3156:9;3152:22;3131:53;:::i;:::-;3121:63;;3077:117;3233:2;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3204:118;2855:474;;;;;:::o;3335:468::-;3400:6;3408;3457:2;3445:9;3436:7;3432:23;3428:32;3425:119;;;3463:79;;:::i;:::-;3425:119;3583:1;3608:53;3653:7;3644:6;3633:9;3629:22;3608:53;:::i;:::-;3598:63;;3554:117;3710:2;3736:50;3778:7;3769:6;3758:9;3754:22;3736:50;:::i;:::-;3726:60;;3681:115;3335:468;;;;;:::o;3809:474::-;3877:6;3885;3934:2;3922:9;3913:7;3909:23;3905:32;3902:119;;;3940:79;;:::i;:::-;3902:119;4060:1;4085:53;4130:7;4121:6;4110:9;4106:22;4085:53;:::i;:::-;4075:63;;4031:117;4187:2;4213:53;4258:7;4249:6;4238:9;4234:22;4213:53;:::i;:::-;4203:63;;4158:118;3809:474;;;;;:::o;4289:894::-;4407:6;4415;4464:2;4452:9;4443:7;4439:23;4435:32;4432:119;;;4470:79;;:::i;:::-;4432:119;4618:1;4607:9;4603:17;4590:31;4648:18;4640:6;4637:30;4634:117;;;4670:79;;:::i;:::-;4634:117;4775:78;4845:7;4836:6;4825:9;4821:22;4775:78;:::i;:::-;4765:88;;4561:302;4930:2;4919:9;4915:18;4902:32;4961:18;4953:6;4950:30;4947:117;;;4983:79;;:::i;:::-;4947:117;5088:78;5158:7;5149:6;5138:9;5134:22;5088:78;:::i;:::-;5078:88;;4873:303;4289:894;;;;;:::o;5189:327::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:52;5491:7;5482:6;5471:9;5467:22;5447:52;:::i;:::-;5437:62;;5393:116;5189:327;;;;:::o;5522:179::-;5591:10;5612:46;5654:3;5646:6;5612:46;:::i;:::-;5690:4;5685:3;5681:14;5667:28;;5522:179;;;;:::o;5737:732::-;5856:3;5885:54;5933:5;5885:54;:::i;:::-;5955:86;6034:6;6029:3;5955:86;:::i;:::-;5948:93;;6065:56;6115:5;6065:56;:::i;:::-;6144:7;6175:1;6160:284;6185:6;6182:1;6179:13;6160:284;;;6261:6;6255:13;6288:63;6347:3;6332:13;6288:63;:::i;:::-;6281:70;;6374:60;6427:6;6374:60;:::i;:::-;6364:70;;6220:224;6207:1;6204;6200:9;6195:14;;6160:284;;;6164:14;6460:3;6453:10;;5861:608;;;5737:732;;;;:::o;6475:109::-;6556:21;6571:5;6556:21;:::i;:::-;6551:3;6544:34;6475:109;;:::o;6590:366::-;6732:3;6753:67;6817:2;6812:3;6753:67;:::i;:::-;6746:74;;6829:93;6918:3;6829:93;:::i;:::-;6947:2;6942:3;6938:12;6931:19;;6590:366;;;:::o;6962:::-;7104:3;7125:67;7189:2;7184:3;7125:67;:::i;:::-;7118:74;;7201:93;7290:3;7201:93;:::i;:::-;7319:2;7314:3;7310:12;7303:19;;6962:366;;;:::o;7334:::-;7476:3;7497:67;7561:2;7556:3;7497:67;:::i;:::-;7490:74;;7573:93;7662:3;7573:93;:::i;:::-;7691:2;7686:3;7682:12;7675:19;;7334:366;;;:::o;7706:108::-;7783:24;7801:5;7783:24;:::i;:::-;7778:3;7771:37;7706:108;;:::o;7820:118::-;7907:24;7925:5;7907:24;:::i;:::-;7902:3;7895:37;7820:118;;:::o;7944:373::-;8087:4;8125:2;8114:9;8110:18;8102:26;;8174:9;8168:4;8164:20;8160:1;8149:9;8145:17;8138:47;8202:108;8305:4;8296:6;8202:108;:::i;:::-;8194:116;;7944:373;;;;:::o;8323:210::-;8410:4;8448:2;8437:9;8433:18;8425:26;;8461:65;8523:1;8512:9;8508:17;8499:6;8461:65;:::i;:::-;8323:210;;;;:::o;8539:419::-;8705:4;8743:2;8732:9;8728:18;8720:26;;8792:9;8786:4;8782:20;8778:1;8767:9;8763:17;8756:47;8820:131;8946:4;8820:131;:::i;:::-;8812:139;;8539:419;;;:::o;8964:::-;9130:4;9168:2;9157:9;9153:18;9145:26;;9217:9;9211:4;9207:20;9203:1;9192:9;9188:17;9181:47;9245:131;9371:4;9245:131;:::i;:::-;9237:139;;8964:419;;;:::o;9389:::-;9555:4;9593:2;9582:9;9578:18;9570:26;;9642:9;9636:4;9632:20;9628:1;9617:9;9613:17;9606:47;9670:131;9796:4;9670:131;:::i;:::-;9662:139;;9389:419;;;:::o;9814:222::-;9907:4;9945:2;9934:9;9930:18;9922:26;;9958:71;10026:1;10015:9;10011:17;10002:6;9958:71;:::i;:::-;9814:222;;;;:::o;10042:129::-;10076:6;10103:20;;:::i;:::-;10093:30;;10132:33;10160:4;10152:6;10132:33;:::i;:::-;10042:129;;;:::o;10177:75::-;10210:6;10243:2;10237:9;10227:19;;10177:75;:::o;10258:311::-;10335:4;10425:18;10417:6;10414:30;10411:56;;;10447:18;;:::i;:::-;10411:56;10497:4;10489:6;10485:17;10477:25;;10557:4;10551;10547:15;10539:23;;10258:311;;;:::o;10575:::-;10652:4;10742:18;10734:6;10731:30;10728:56;;;10764:18;;:::i;:::-;10728:56;10814:4;10806:6;10802:17;10794:25;;10874:4;10868;10864:15;10856:23;;10575:311;;;:::o;10892:132::-;10959:4;10982:3;10974:11;;11012:4;11007:3;11003:14;10995:22;;10892:132;;;:::o;11030:114::-;11097:6;11131:5;11125:12;11115:22;;11030:114;;;:::o;11150:113::-;11220:4;11252;11247:3;11243:14;11235:22;;11150:113;;;:::o;11269:184::-;11368:11;11402:6;11397:3;11390:19;11442:4;11437:3;11433:14;11418:29;;11269:184;;;;:::o;11459:169::-;11543:11;11577:6;11572:3;11565:19;11617:4;11612:3;11608:14;11593:29;;11459:169;;;;:::o;11634:96::-;11671:7;11700:24;11718:5;11700:24;:::i;:::-;11689:35;;11634:96;;;:::o;11736:90::-;11770:7;11813:5;11806:13;11799:21;11788:32;;11736:90;;;:::o;11832:149::-;11868:7;11908:66;11901:5;11897:78;11886:89;;11832:149;;;:::o;11987:126::-;12024:7;12064:42;12057:5;12053:54;12042:65;;11987:126;;;:::o;12119:77::-;12156:7;12185:5;12174:16;;12119:77;;;:::o;12202:281::-;12285:27;12307:4;12285:27;:::i;:::-;12277:6;12273:40;12415:6;12403:10;12400:22;12379:18;12367:10;12364:34;12361:62;12358:88;;;12426:18;;:::i;:::-;12358:88;12466:10;12462:2;12455:22;12245:238;12202:281;;:::o;12489:233::-;12528:3;12551:24;12569:5;12551:24;:::i;:::-;12542:33;;12597:66;12590:5;12587:77;12584:103;;;12667:18;;:::i;:::-;12584:103;12714:1;12707:5;12703:13;12696:20;;12489:233;;;:::o;12728:180::-;12776:77;12773:1;12766:88;12873:4;12870:1;12863:15;12897:4;12894:1;12887:15;12914:180;12962:77;12959:1;12952:88;13059:4;13056:1;13049:15;13083:4;13080:1;13073:15;13100:180;13148:77;13145:1;13138:88;13245:4;13242:1;13235:15;13269:4;13266:1;13259:15;13286:117;13395:1;13392;13385:12;13409:117;13518:1;13515;13508:12;13532:117;13641:1;13638;13631:12;13655:117;13764:1;13761;13754:12;13778:102;13819:6;13870:2;13866:7;13861:2;13854:5;13850:14;13846:28;13836:38;;13778:102;;;:::o;13886:230::-;14026:34;14022:1;14014:6;14010:14;14003:58;14095:13;14090:2;14082:6;14078:15;14071:38;13886:230;:::o;14122:228::-;14262:34;14258:1;14250:6;14246:14;14239:58;14331:11;14326:2;14318:6;14314:15;14307:36;14122:228;:::o;14356:::-;14496:34;14492:1;14484:6;14480:14;14473:58;14565:11;14560:2;14552:6;14548:15;14541:36;14356:228;:::o;14590:122::-;14663:24;14681:5;14663:24;:::i;:::-;14656:5;14653:35;14643:63;;14702:1;14699;14692:12;14643:63;14590:122;:::o;14718:116::-;14788:21;14803:5;14788:21;:::i;:::-;14781:5;14778:32;14768:60;;14824:1;14821;14814:12;14768:60;14718:116;:::o;14840:120::-;14912:23;14929:5;14912:23;:::i;:::-;14905:5;14902:34;14892:62;;14950:1;14947;14940:12;14892:62;14840:120;:::o;14966:122::-;15039:24;15057:5;15039:24;:::i;:::-;15032:5;15029:35;15019:63;;15078:1;15075;15068:12;15019:63;14966:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "729800",
								"executionCost": "766",
								"totalCost": "730566"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "638"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033",
									".code": [
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "FDD58E"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "4E1273F4"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1538,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1708,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1758,
											"end": 1766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8060,
											"end": 8068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8162,
											"end": 8170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8205,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 8217,
											"end": 8225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1568,
											"end": 1588,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1730,
											"end": 1735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2019,
											"end": 2022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2008,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2549,
											"end": 2554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2637,
											"end": 2657,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2801,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2837,
											"end": 2842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 2982,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2959,
											"end": 2966,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2955,
											"end": 2978,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2983,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3457,
											"end": 3459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3454,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3432,
											"end": 3455,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3460,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3653,
											"end": 3660,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3644,
											"end": 3650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3661,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3786,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3934,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3932,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 3937,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4138,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4031,
											"end": 4148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4258,
											"end": 4265,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4234,
											"end": 4256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4466,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4435,
											"end": 4467,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4590,
											"end": 4621,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4667,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4834,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4765,
											"end": 4853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4765,
											"end": 4853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4928,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4961,
											"end": 4979,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4980,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5147,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5134,
											"end": 5156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5166,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5166,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 5176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5491,
											"end": 5498,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5467,
											"end": 5489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5393,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5654,
											"end": 5657,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5685,
											"end": 5688,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6032,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6041,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6115,
											"end": 6120,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6144,
											"end": 6151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6185,
											"end": 6191,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6261,
											"end": 6267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6255,
											"end": 6268,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6347,
											"end": 6350,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6345,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6364,
											"end": 6434,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6364,
											"end": 6434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6220,
											"end": 6444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6200,
											"end": 6209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6195,
											"end": 6209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6195,
											"end": 6209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6460,
											"end": 6463,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6571,
											"end": 6576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6578,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6817,
											"end": 6819,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6820,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 7189,
											"end": 7191,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 7184,
											"end": 7187,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7290,
											"end": 7293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 7556,
											"end": 7559,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7662,
											"end": 7665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7693,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 7801,
											"end": 7806,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7778,
											"end": 7781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7771,
											"end": 7808,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7925,
											"end": 7930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7902,
											"end": 7905,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7895,
											"end": 7932,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8087,
											"end": 8091,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8128,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 8305,
											"end": 8309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8446,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8451,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8523,
											"end": 8524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8525,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8499,
											"end": 8505,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8705,
											"end": 8709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8745,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8792,
											"end": 8801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8786,
											"end": 8790,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8763,
											"end": 8780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8756,
											"end": 8803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9130,
											"end": 9134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9170,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9166,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9227,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9204,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9201,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9188,
											"end": 9205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 9371,
											"end": 9375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9237,
											"end": 9376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9237,
											"end": 9376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9642,
											"end": 9651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9632,
											"end": 9652,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9613,
											"end": 9630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9606,
											"end": 9653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 9796,
											"end": 9800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9907,
											"end": 9911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9945,
											"end": 9947,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9934,
											"end": 9943,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10026,
											"end": 10027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10015,
											"end": 10024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10028,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10008,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10076,
											"end": 10082,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10093,
											"end": 10123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10093,
											"end": 10123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 10160,
											"end": 10164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10210,
											"end": 10216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10245,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10237,
											"end": 10246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10227,
											"end": 10246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10227,
											"end": 10246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10335,
											"end": 10339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10443,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10417,
											"end": 10423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10444,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10489,
											"end": 10495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10485,
											"end": 10502,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10557,
											"end": 10561,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10551,
											"end": 10555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10547,
											"end": 10562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10539,
											"end": 10562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10539,
											"end": 10562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10652,
											"end": 10656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 10760,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10761,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10802,
											"end": 10819,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10856,
											"end": 10879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10856,
											"end": 10879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 10985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10974,
											"end": 10985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10974,
											"end": 10985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11007,
											"end": 11010,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11003,
											"end": 11017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11097,
											"end": 11103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11131,
											"end": 11136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 11137,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11115,
											"end": 11137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11115,
											"end": 11137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11220,
											"end": 11224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11247,
											"end": 11250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11243,
											"end": 11257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11235,
											"end": 11257,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11235,
											"end": 11257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11368,
											"end": 11379,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11409,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11446,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11440,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11447,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11572,
											"end": 11575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11565,
											"end": 11584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11617,
											"end": 11621,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11612,
											"end": 11615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11608,
											"end": 11622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 11718,
											"end": 11723,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11806,
											"end": 11819,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11820,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11868,
											"end": 11875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11908,
											"end": 11974,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11901,
											"end": 11906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11897,
											"end": 11975,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11886,
											"end": 11975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11886,
											"end": 11975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12024,
											"end": 12031,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12106,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12053,
											"end": 12107,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12174,
											"end": 12190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12174,
											"end": 12190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 12307,
											"end": 12311,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12277,
											"end": 12283,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12273,
											"end": 12313,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12403,
											"end": 12413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12400,
											"end": 12422,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12397,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12367,
											"end": 12377,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12364,
											"end": 12398,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12361,
											"end": 12423,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12466,
											"end": 12476,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12477,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12245,
											"end": 12483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12528,
											"end": 12531,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 12569,
											"end": 12574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12542,
											"end": 12575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12542,
											"end": 12575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12597,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12590,
											"end": 12595,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12587,
											"end": 12664,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12714,
											"end": 12715,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12707,
											"end": 12712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12703,
											"end": 12716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12728,
											"end": 12908,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 12728,
											"end": 12908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12776,
											"end": 12853,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12773,
											"end": 12774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12766,
											"end": 12854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12877,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 12870,
											"end": 12871,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12863,
											"end": 12878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12894,
											"end": 12895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12902,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12914,
											"end": 13094,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 12914,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12962,
											"end": 13039,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12959,
											"end": 12960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12952,
											"end": 13040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13059,
											"end": 13063,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 13056,
											"end": 13057,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13049,
											"end": 13064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13083,
											"end": 13087,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13088,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13100,
											"end": 13280,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 13100,
											"end": 13280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13148,
											"end": 13225,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13138,
											"end": 13226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13245,
											"end": 13249,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 13242,
											"end": 13243,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13235,
											"end": 13250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13269,
											"end": 13273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13259,
											"end": 13274,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13286,
											"end": 13403,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 13286,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13385,
											"end": 13397,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13409,
											"end": 13526,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 13409,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13518,
											"end": 13519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13515,
											"end": 13516,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13508,
											"end": 13520,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13532,
											"end": 13649,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 13532,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 13643,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13655,
											"end": 13772,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 13655,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 13765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13762,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13819,
											"end": 13825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13866,
											"end": 13873,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13861,
											"end": 13863,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13854,
											"end": 13859,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13850,
											"end": 13864,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 13874,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13836,
											"end": 13874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13836,
											"end": 13874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14026,
											"end": 14060,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14010,
											"end": 14024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14003,
											"end": 14061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14095,
											"end": 14108,
											"name": "PUSH",
											"source": 11,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14082,
											"end": 14088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14071,
											"end": 14109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14296,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 14258,
											"end": 14259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14239,
											"end": 14297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14342,
											"name": "PUSH",
											"source": 11,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14326,
											"end": 14328,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14318,
											"end": 14324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14307,
											"end": 14343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14530,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14484,
											"end": 14490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14480,
											"end": 14494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14531,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "PUSH",
											"source": 11,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14560,
											"end": 14562,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14548,
											"end": 14563,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14541,
											"end": 14577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 14681,
											"end": 14686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14656,
											"end": 14661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14653,
											"end": 14688,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14702,
											"end": 14703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14699,
											"end": 14700,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14692,
											"end": 14704,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 14803,
											"end": 14808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14778,
											"end": 14810,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14824,
											"end": 14825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14814,
											"end": 14826,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 14929,
											"end": 14934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14905,
											"end": 14910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14902,
											"end": 14936,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14950,
											"end": 14951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14947,
											"end": 14948,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14940,
											"end": 14952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 15057,
											"end": 15062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15032,
											"end": 15037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15029,
											"end": 15064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15078,
											"end": 15079,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15075,
											"end": 15076,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15068,
											"end": 15080,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155.sol\":{\"keccak256\":\"0x31f8bc91c81a75610da8b7d241fca7fbe49d0ec717f2c9a7e4e772b176e5e99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f75046955c35d1f9391dea268bc26e1932953ddbac37df509a3c29b6aea13\",\"dweb:/ipfs/QmXKeAYA11csdhiw1x8gh4fVUUAqxW5xmzfCYxHCucfL5d\"]},\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155.sol\":{\"keccak256\":\"0x31f8bc91c81a75610da8b7d241fca7fbe49d0ec717f2c9a7e4e772b176e5e99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f75046955c35d1f9391dea268bc26e1932953ddbac37df509a3c29b6aea13\",\"dweb:/ipfs/QmXKeAYA11csdhiw1x8gh4fVUUAqxW5xmzfCYxHCucfL5d\"]},\"ERC1155Burnable.sol\":{\"keccak256\":\"0x8f0eaf8d0d8ab25da29572257231e55dadf6ade602a27f12c643eec3cac3b5d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49eb05bd8deac6529db5275052762fce41b3a26f16fe05220b27b1710885808\",\"dweb:/ipfs/QmYGFhSJrSuasrFGVPSCNrdqePkfEfe5LSK5wRWZLfYGnW\"]},\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"OnyxNft1155Auctions.sol": {
				"OnyxNft1155Auction": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "availableForBids",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "removeFormSale",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "CheckNftStatus",
							"outputs": [
								{
									"internalType": "enum OnyxNft1155Auction.status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CurrentStatus",
							"outputs": [
								{
									"internalType": "enum OnyxNft1155Auction.status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OnyxNft1155Auctions.sol\":56:3382  contract OnyxNft1155Auction {  //is SpaceERC20 ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OnyxNft1155Auctions.sol\":56:3382  contract OnyxNft1155Auction {  //is SpaceERC20 ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67c510c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe3306a6f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Auctions.sol\":258:285  status public CurrentStatus */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n    tag_8:\n        /* \"OnyxNft1155Auctions.sol\":3317:3323  status */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3341:3344  Nft */\n      0x01\n        /* \"OnyxNft1155Auctions.sol\":3341:3354  Nft[nftOwner] */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3345:3353  nftOwner */\n      dup5\n        /* \"OnyxNft1155Auctions.sol\":3341:3354  Nft[nftOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OnyxNft1155Auctions.sol\":3341:3361  Nft[nftOwner][nftId] */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3355:3360  nftId */\n      dup4\n        /* \"OnyxNft1155Auctions.sol\":3341:3361  Nft[nftOwner][nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OnyxNft1155Auctions.sol\":3341:3372  Nft[nftOwner][nftId].salestatus */\n      0x09\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"OnyxNft1155Auctions.sol\":3334:3372  return Nft[nftOwner][nftId].salestatus */\n      swap1\n      pop\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OnyxNft1155Auctions.sol\":258:285  status public CurrentStatus */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_16:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_18\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_20:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_22\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:771   */\n    tag_7:\n        /* \"#utility.yul\":365:371   */\n      0x00\n        /* \"#utility.yul\":373:379   */\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:509   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":428:507   */\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":390:509   */\n    tag_25:\n        /* \"#utility.yul\":548:549   */\n      0x00\n        /* \"#utility.yul\":573:626   */\n      tag_28\n        /* \"#utility.yul\":618:625   */\n      dup6\n        /* \"#utility.yul\":609:615   */\n      dup3\n        /* \"#utility.yul\":598:607   */\n      dup7\n        /* \"#utility.yul\":594:616   */\n      add\n        /* \"#utility.yul\":573:626   */\n      tag_16\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":563:626   */\n      swap3\n      pop\n        /* \"#utility.yul\":519:636   */\n      pop\n        /* \"#utility.yul\":675:677   */\n      0x20\n        /* \"#utility.yul\":701:754   */\n      tag_29\n        /* \"#utility.yul\":746:753   */\n      dup6\n        /* \"#utility.yul\":737:743   */\n      dup3\n        /* \"#utility.yul\":726:735   */\n      dup7\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":701:754   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":691:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:764   */\n      pop\n        /* \"#utility.yul\":297:771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:926   */\n    tag_30:\n        /* \"#utility.yul\":873:919   */\n      tag_32\n        /* \"#utility.yul\":913:918   */\n      dup2\n        /* \"#utility.yul\":873:919   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":868:871   */\n      dup3\n        /* \"#utility.yul\":861:920   */\n      mstore\n        /* \"#utility.yul\":777:926   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1172   */\n    tag_10:\n        /* \"#utility.yul\":1034:1038   */\n      0x00\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1061:1070   */\n      dup3\n        /* \"#utility.yul\":1057:1075   */\n      add\n        /* \"#utility.yul\":1049:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":1085:1165   */\n      tag_35\n        /* \"#utility.yul\":1162:1163   */\n      0x00\n        /* \"#utility.yul\":1151:1160   */\n      dup4\n        /* \"#utility.yul\":1147:1164   */\n      add\n        /* \"#utility.yul\":1138:1144   */\n      dup5\n        /* \"#utility.yul\":1085:1165   */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":932:1172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1355   */\n    tag_38:\n        /* \"#utility.yul\":1296:1303   */\n      0x00\n        /* \"#utility.yul\":1325:1349   */\n      tag_40\n        /* \"#utility.yul\":1343:1348   */\n      dup3\n        /* \"#utility.yul\":1325:1349   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1314:1349   */\n      swap1\n      pop\n        /* \"#utility.yul\":1259:1355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1361:1494   */\n    tag_42:\n        /* \"#utility.yul\":1409:1416   */\n      0x00\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1427:1443   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1488   */\n      tag_44\n        /* \"#utility.yul\":1482:1487   */\n      dup3\n        /* \"#utility.yul\":1444:1488   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1361:1494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1500:1626   */\n    tag_41:\n        /* \"#utility.yul\":1537:1544   */\n      0x00\n        /* \"#utility.yul\":1577:1619   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1570:1575   */\n      dup3\n        /* \"#utility.yul\":1566:1620   */\n      and\n        /* \"#utility.yul\":1555:1620   */\n      swap1\n      pop\n        /* \"#utility.yul\":1500:1626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1709   */\n    tag_47:\n        /* \"#utility.yul\":1669:1676   */\n      0x00\n        /* \"#utility.yul\":1698:1703   */\n      dup2\n        /* \"#utility.yul\":1687:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1632:1709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1715:1848   */\n    tag_33:\n        /* \"#utility.yul\":1774:1783   */\n      0x00\n        /* \"#utility.yul\":1807:1842   */\n      tag_50\n        /* \"#utility.yul\":1836:1841   */\n      dup3\n        /* \"#utility.yul\":1807:1842   */\n      tag_42\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1794:1842   */\n      swap1\n      pop\n        /* \"#utility.yul\":1715:1848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1854:2034   */\n    tag_51:\n        /* \"#utility.yul\":1902:1979   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1892:1980   */\n      mstore\n        /* \"#utility.yul\":1999:2003   */\n      0x21\n        /* \"#utility.yul\":1996:1997   */\n      0x04\n        /* \"#utility.yul\":1989:2004   */\n      mstore\n        /* \"#utility.yul\":2023:2027   */\n      0x24\n        /* \"#utility.yul\":2020:2021   */\n      0x00\n        /* \"#utility.yul\":2013:2028   */\n      revert\n        /* \"#utility.yul\":2163:2280   */\n    tag_27:\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2269:2270   */\n      dup1\n        /* \"#utility.yul\":2262:2274   */\n      revert\n        /* \"#utility.yul\":2286:2402   */\n    tag_45:\n        /* \"#utility.yul\":2370:2371   */\n      0x04\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2360:2372   */\n      lt\n        /* \"#utility.yul\":2350:2396   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2376:2394   */\n      tag_58\n      tag_51\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2350:2396   */\n    tag_57:\n        /* \"#utility.yul\":2286:2402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2408:2530   */\n    tag_19:\n        /* \"#utility.yul\":2481:2505   */\n      tag_60\n        /* \"#utility.yul\":2499:2504   */\n      dup2\n        /* \"#utility.yul\":2481:2505   */\n      tag_38\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2474:2479   */\n      dup2\n        /* \"#utility.yul\":2471:2506   */\n      eq\n        /* \"#utility.yul\":2461:2524   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2520:2521   */\n      0x00\n        /* \"#utility.yul\":2517:2518   */\n      dup1\n        /* \"#utility.yul\":2510:2522   */\n      revert\n        /* \"#utility.yul\":2461:2524   */\n    tag_61:\n        /* \"#utility.yul\":2408:2530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2536:2658   */\n    tag_23:\n        /* \"#utility.yul\":2609:2633   */\n      tag_63\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2609:2633   */\n      tag_47\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2599:2634   */\n      eq\n        /* \"#utility.yul\":2589:2652   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2648:2649   */\n      0x00\n        /* \"#utility.yul\":2645:2646   */\n      dup1\n        /* \"#utility.yul\":2638:2650   */\n      revert\n        /* \"#utility.yul\":2589:2652   */\n    tag_64:\n        /* \"#utility.yul\":2536:2658   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102a6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806367c510c91461003b578063e3306a6f1461006b575b600080fd5b6100556004803603810190610050919061012f565b610089565b604051610062919061017e565b60405180910390f35b6100736100f4565b604051610080919061017e565b60405180910390f35b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160009054906101000a900460ff16905092915050565b60008054906101000a900460ff1681565b60008135905061011481610242565b92915050565b60008135905061012981610259565b92915050565b6000806040838503121561014657610145610229565b5b600061015485828601610105565b92505060206101658582860161011a565b9150509250929050565b610178816101e8565b82525050565b6000602082019050610193600083018461016f565b92915050565b60006101a4826101be565b9050919050565b60008190506101b98261022e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f3826101ab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6004811061023f5761023e6101fa565b5b50565b61024b81610199565b811461025657600080fd5b50565b610262816101de565b811461026d57600080fd5b5056fea2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67C510C9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE3306A6F EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x114 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129 DUP2 PUSH2 0x259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0x229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP6 DUP3 DUP7 ADD PUSH2 0x105 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x165 DUP6 DUP3 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1B9 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x23F JUMPI PUSH2 0x23E PUSH2 0x1FA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x199 JUMP JUMPDEST DUP2 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x262 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP2 EQ PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC0 SHL CHAINID 0xB8 0x5F 0xB9 0x24 0x5C 0xB1 CALLDATASIZE LOG4 0xE1 PC PUSH1 0xC9 SHR 0xF6 0xB0 PUSH23 0xA84DB718B0451727AB115F7764736F6C63430008070033 ",
							"sourceMap": "56:3326:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CheckNftStatus_1915": {
									"entryPoint": 137,
									"id": 1915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@CurrentStatus_1599": {
									"entryPoint": 244,
									"id": 1599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_status_$1596__to_t_uint8__fromStack_reversed": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_status_$1596": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_status_$1596_to_t_uint8": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_status_$1596": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2661:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "7:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:11",
														"type": ""
													}
												],
												"src": "152:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "428:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:11"
															},
															"nodeType": "YulIf",
															"src": "390:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "519:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "534:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "538:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "563:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "598:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "609:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "594:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "594:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "618:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "573:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "573:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "563:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "646:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "661:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "675:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "665:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "691:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "726:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "737:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "701:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:11",
														"type": ""
													}
												],
												"src": "297:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "868:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "913:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_status_$1596_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "873:39:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "873:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:59:11"
														}
													]
												},
												"name": "abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "839:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "846:3:11",
														"type": ""
													}
												],
												"src": "777:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1039:133:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1049:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1061:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1072:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1049:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1162:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1085:52:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:80:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1085:80:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_status_$1596__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1011:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1023:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1034:4:11",
														"type": ""
													}
												],
												"src": "932:240:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1238:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1211:6:11",
														"type": ""
													}
												],
												"src": "1178:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1304:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1314:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1343:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1325:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1314:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1286:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1296:7:11",
														"type": ""
													}
												],
												"src": "1259:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1417:77:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1427:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1438:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1427:7:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1482:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_status_$1596",
																	"nodeType": "YulIdentifier",
																	"src": "1444:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:44:11"
														}
													]
												},
												"name": "cleanup_t_enum$_status_$1596",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1399:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1409:7:11",
														"type": ""
													}
												],
												"src": "1361:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1545:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1555:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1570:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1577:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1566:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1555:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1537:7:11",
														"type": ""
													}
												],
												"src": "1500:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1677:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1687:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1698:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1687:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1659:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1669:7:11",
														"type": ""
													}
												],
												"src": "1632:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:64:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1794:48:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1836:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_status_$1596",
																	"nodeType": "YulIdentifier",
																	"src": "1807:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:35:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1794:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_status_$1596_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1764:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1774:9:11",
														"type": ""
													}
												],
												"src": "1715:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1882:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1989:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1854:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2146:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2139:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2139:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2040:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2252:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2262:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2163:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2340:62:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2374:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "2376:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2376:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2376:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2363:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2370:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2353:20:11"
															},
															"nodeType": "YulIf",
															"src": "2350:46:11"
														}
													]
												},
												"name": "validator_assert_t_enum$_status_$1596",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2286:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2451:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2508:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2520:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2510:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2510:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2510:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2474:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2499:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2481:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2481:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2471:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2471:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:43:11"
															},
															"nodeType": "YulIf",
															"src": "2461:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2444:5:11",
														"type": ""
													}
												],
												"src": "2408:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2636:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2645:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2648:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2638:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2638:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2602:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2627:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2609:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2609:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2599:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2599:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:43:11"
															},
															"nodeType": "YulIf",
															"src": "2589:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2572:5:11",
														"type": ""
													}
												],
												"src": "2536:122:11"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_status_$1596_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_status_$1596__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_status_$1596_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_status_$1596(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_status_$1596(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_status_$1596_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_status_$1596(value)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_assert_t_enum$_status_$1596(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806367c510c91461003b578063e3306a6f1461006b575b600080fd5b6100556004803603810190610050919061012f565b610089565b604051610062919061017e565b60405180910390f35b6100736100f4565b604051610080919061017e565b60405180910390f35b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160009054906101000a900460ff16905092915050565b60008054906101000a900460ff1681565b60008135905061011481610242565b92915050565b60008135905061012981610259565b92915050565b6000806040838503121561014657610145610229565b5b600061015485828601610105565b92505060206101658582860161011a565b9150509250929050565b610178816101e8565b82525050565b6000602082019050610193600083018461016f565b92915050565b60006101a4826101be565b9050919050565b60008190506101b98261022e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f3826101ab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6004811061023f5761023e6101fa565b5b50565b61024b81610199565b811461025657600080fd5b50565b610262816101de565b811461026d57600080fd5b5056fea2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67C510C9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE3306A6F EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x114 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129 DUP2 PUSH2 0x259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0x229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP6 DUP3 DUP7 ADD PUSH2 0x105 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x165 DUP6 DUP3 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1B9 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x23F JUMPI PUSH2 0x23E PUSH2 0x1FA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x199 JUMP JUMPDEST DUP2 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x262 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP2 EQ PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC0 SHL CHAINID 0xB8 0x5F 0xB9 0x24 0x5C 0xB1 CALLDATASIZE LOG4 0xE1 PC PUSH1 0xC9 SHR 0xF6 0xB0 PUSH23 0xA84DB718B0451727AB115F7764736F6C63430008070033 ",
							"sourceMap": "56:3326:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3241:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3241:138;3317:6;3341:3;:13;3345:8;3341:13;;;;;;;;;;;;;;;:20;3355:5;3341:20;;;;;;;;;;;:31;;;;;;;;;;;;3334:38;;3241:138;;;;:::o;258:27::-;;;;;;;;;;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:149::-;873:46;913:5;873:46;:::i;:::-;868:3;861:59;777:149;;:::o;932:240::-;1034:4;1072:2;1061:9;1057:18;1049:26;;1085:80;1162:1;1151:9;1147:17;1138:6;1085:80;:::i;:::-;932:240;;;;:::o;1259:96::-;1296:7;1325:24;1343:5;1325:24;:::i;:::-;1314:35;;1259:96;;;:::o;1361:133::-;1409:7;1438:5;1427:16;;1444:44;1482:5;1444:44;:::i;:::-;1361:133;;;:::o;1500:126::-;1537:7;1577:42;1570:5;1566:54;1555:65;;1500:126;;;:::o;1632:77::-;1669:7;1698:5;1687:16;;1632:77;;;:::o;1715:133::-;1774:9;1807:35;1836:5;1807:35;:::i;:::-;1794:48;;1715:133;;;:::o;1854:180::-;1902:77;1899:1;1892:88;1999:4;1996:1;1989:15;2023:4;2020:1;2013:15;2163:117;2272:1;2269;2262:12;2286:116;2370:1;2363:5;2360:12;2350:46;;2376:18;;:::i;:::-;2350:46;2286:116;:::o;2408:122::-;2481:24;2499:5;2481:24;:::i;:::-;2474:5;2471:35;2461:63;;2520:1;2517;2510:12;2461:63;2408:122;:::o;2536:::-;2609:24;2627:5;2609:24;:::i;:::-;2602:5;2599:35;2589:63;;2648:1;2645;2638:12;2589:63;2536:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "135600",
								"executionCost": "183",
								"totalCost": "135783"
							},
							"external": {
								"CheckNftStatus(address,uint256)": "3207",
								"CurrentStatus()": "2557"
							},
							"internal": {
								"_placeNftForBids(address,uint256)": "infinite",
								"_placeNftForFixedPrice(address,uint256,uint256)": "infinite",
								"_pushBidingValues(address,address,uint256,uint256,uint256)": "infinite",
								"_removeFromSale(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "67C510C9"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "E3306A6F"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3353,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 390,
											"end": 509,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 390,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 390,
											"end": 509,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 548,
											"end": 549,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 598,
											"end": 607,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 594,
											"end": 616,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 563,
											"end": 626,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 563,
											"end": 626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 519,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 691,
											"end": 754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 691,
											"end": 754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 646,
											"end": 764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 926,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 777,
											"end": 926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 873,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 913,
											"end": 918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 873,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 873,
											"end": 919,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 919,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 873,
											"end": 919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 868,
											"end": 871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 777,
											"end": 926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 926,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1349,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1349,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 1487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1619,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1836,
											"end": 1841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1854,
											"end": 2034,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1854,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1902,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1980,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2003,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2280,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2163,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2372,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2634,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2638,
											"end": 2650,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CheckNftStatus(address,uint256)": "67c510c9",
							"CurrentStatus()": "e3306a6f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"availableForBids\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"removeFormSale\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"CheckNftStatus\",\"outputs\":[{\"internalType\":\"enum OnyxNft1155Auction.status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CurrentStatus\",\"outputs\":[{\"internalType\":\"enum OnyxNft1155Auction.status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OnyxNft1155Auctions.sol\":\"OnyxNft1155Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"OnyxNft1155Auctions.sol\":{\"keccak256\":\"0x9ee13388664f86c6026dab541f0d9dfdaff53622081ebfe2d1e9c07c3a99b2b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f10fc7133c21d37836b7abe071c161f760bfb591df625f071d3a1f820042ffbb\",\"dweb:/ipfs/QmNhQfnLqWHkJGnvLXsFub7L1Z7pj7PDnVJfaeWu5k44n9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"OnyxNft1155Royalties.sol": {
				"OnyxNftErc20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "RoyaltiesTransfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "Price",
									"type": "uint256"
								}
							],
							"name": "_deductOnyxNftFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OnyxNft1155Royalties.sol\":56:2439  contract OnyxNftErc20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OnyxNft1155Royalties.sol\":56:2439  contract OnyxNftErc20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd206b944\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"OnyxNft1155Royalties.sol\":1377:1381  uint */\n      0x00\n        /* \"OnyxNft1155Royalties.sol\":1424:1429  Price */\n      dup2\n        /* \"OnyxNft1155Royalties.sol\":1415:1420  10000 */\n      0x2710\n        /* \"OnyxNft1155Royalties.sol\":1408:1413  10000 */\n      dup1\n        /* \"OnyxNft1155Royalties.sol\":1402:1407  Price */\n      dup5\n        /* \"OnyxNft1155Royalties.sol\":1402:1413  Price/10000 */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"OnyxNft1155Royalties.sol\":1401:1420  (Price/10000)*10000 */\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"OnyxNft1155Royalties.sol\":1401:1429  (Price/10000)*10000 == Price */\n      eq\n        /* \"OnyxNft1155Royalties.sol\":1393:1478  require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"OnyxNft1155Royalties.sol\":1504:1508  1000 */\n      0x03e8\n        /* \"OnyxNft1155Royalties.sol\":1501:1503  25 */\n      0x19\n        /* \"OnyxNft1155Royalties.sol\":1495:1500  Price */\n      dup4\n        /* \"OnyxNft1155Royalties.sol\":1495:1503  Price*25 */\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n        /* \"OnyxNft1155Royalties.sol\":1495:1508  Price*25/1000 */\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n        /* \"OnyxNft1155Royalties.sol\":1488:1508  return Price*25/1000 */\n      swap1\n      pop\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_21:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_23\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":228:347   */\n    tag_26:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_29\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:853   */\n    tag_30:\n        /* \"#utility.yul\":629:632   */\n      0x00\n        /* \"#utility.yul\":650:717   */\n      tag_32\n        /* \"#utility.yul\":714:716   */\n      0x2c\n        /* \"#utility.yul\":709:712   */\n      dup4\n        /* \"#utility.yul\":650:717   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":643:717   */\n      swap2\n      pop\n        /* \"#utility.yul\":726:819   */\n      tag_34\n        /* \"#utility.yul\":815:818   */\n      dup3\n        /* \"#utility.yul\":726:819   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":844:846   */\n      0x40\n        /* \"#utility.yul\":839:842   */\n      dup3\n        /* \"#utility.yul\":835:847   */\n      add\n        /* \"#utility.yul\":828:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":487:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:977   */\n    tag_36:\n        /* \"#utility.yul\":946:970   */\n      tag_38\n        /* \"#utility.yul\":964:969   */\n      dup2\n        /* \"#utility.yul\":946:970   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":941:944   */\n      dup3\n        /* \"#utility.yul\":934:971   */\n      mstore\n        /* \"#utility.yul\":859:977   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1402   */\n    tag_17:\n        /* \"#utility.yul\":1149:1153   */\n      0x00\n        /* \"#utility.yul\":1187:1189   */\n      0x20\n        /* \"#utility.yul\":1176:1185   */\n      dup3\n        /* \"#utility.yul\":1172:1190   */\n      add\n        /* \"#utility.yul\":1164:1190   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1245   */\n      dup2\n        /* \"#utility.yul\":1230:1234   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      sub\n        /* \"#utility.yul\":1222:1223   */\n      0x00\n        /* \"#utility.yul\":1211:1220   */\n      dup4\n        /* \"#utility.yul\":1207:1224   */\n      add\n        /* \"#utility.yul\":1200:1247   */\n      mstore\n        /* \"#utility.yul\":1264:1395   */\n      tag_41\n        /* \"#utility.yul\":1390:1394   */\n      dup2\n        /* \"#utility.yul\":1264:1395   */\n      tag_30\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1256:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1630   */\n    tag_9:\n        /* \"#utility.yul\":1501:1505   */\n      0x00\n        /* \"#utility.yul\":1539:1541   */\n      0x20\n        /* \"#utility.yul\":1528:1537   */\n      dup3\n        /* \"#utility.yul\":1524:1542   */\n      add\n        /* \"#utility.yul\":1516:1542   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1623   */\n      tag_43\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1605:1622   */\n      add\n        /* \"#utility.yul\":1596:1602   */\n      dup5\n        /* \"#utility.yul\":1552:1623   */\n      tag_36\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1408:1630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1717:1886   */\n    tag_33:\n        /* \"#utility.yul\":1801:1812   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1830:1833   */\n      dup3\n        /* \"#utility.yul\":1823:1842   */\n      mstore\n        /* \"#utility.yul\":1875:1879   */\n      0x20\n        /* \"#utility.yul\":1870:1873   */\n      dup3\n        /* \"#utility.yul\":1866:1880   */\n      add\n        /* \"#utility.yul\":1851:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1717:1886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2077   */\n    tag_12:\n        /* \"#utility.yul\":1932:1933   */\n      0x00\n        /* \"#utility.yul\":1949:1969   */\n      tag_48\n        /* \"#utility.yul\":1967:1968   */\n      dup3\n        /* \"#utility.yul\":1949:1969   */\n      tag_39\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1944:1969   */\n      swap2\n      pop\n        /* \"#utility.yul\":1983:2003   */\n      tag_49\n        /* \"#utility.yul\":2001:2002   */\n      dup4\n        /* \"#utility.yul\":1983:2003   */\n      tag_39\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1978:2003   */\n      swap3\n      pop\n        /* \"#utility.yul\":2022:2023   */\n      dup3\n        /* \"#utility.yul\":2012:2047   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":2027:2045   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2012:2047   */\n    tag_50:\n        /* \"#utility.yul\":2069:2070   */\n      dup3\n        /* \"#utility.yul\":2066:2067   */\n      dup3\n        /* \"#utility.yul\":2062:2071   */\n      div\n        /* \"#utility.yul\":2057:2071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:2077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2083:2431   */\n    tag_14:\n        /* \"#utility.yul\":2123:2130   */\n      0x00\n        /* \"#utility.yul\":2146:2166   */\n      tag_54\n        /* \"#utility.yul\":2164:2165   */\n      dup3\n        /* \"#utility.yul\":2146:2166   */\n      tag_39\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2141:2166   */\n      swap2\n      pop\n        /* \"#utility.yul\":2180:2200   */\n      tag_55\n        /* \"#utility.yul\":2198:2199   */\n      dup4\n        /* \"#utility.yul\":2180:2200   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2175:2200   */\n      swap3\n      pop\n        /* \"#utility.yul\":2368:2369   */\n      dup2\n        /* \"#utility.yul\":2300:2366   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2296:2370   */\n      div\n        /* \"#utility.yul\":2293:2294   */\n      dup4\n        /* \"#utility.yul\":2290:2371   */\n      gt\n        /* \"#utility.yul\":2285:2286   */\n      dup3\n        /* \"#utility.yul\":2278:2287   */\n      iszero\n        /* \"#utility.yul\":2271:2288   */\n      iszero\n        /* \"#utility.yul\":2267:2372   */\n      and\n        /* \"#utility.yul\":2264:2395   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2375:2393   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2264:2395   */\n    tag_56:\n        /* \"#utility.yul\":2423:2424   */\n      dup3\n        /* \"#utility.yul\":2420:2421   */\n      dup3\n        /* \"#utility.yul\":2416:2425   */\n      mul\n        /* \"#utility.yul\":2405:2425   */\n      swap1\n      pop\n        /* \"#utility.yul\":2083:2431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2514   */\n    tag_39:\n        /* \"#utility.yul\":2474:2481   */\n      0x00\n        /* \"#utility.yul\":2503:2508   */\n      dup2\n        /* \"#utility.yul\":2492:2508   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:2700   */\n    tag_58:\n        /* \"#utility.yul\":2568:2645   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2565:2566   */\n      0x00\n        /* \"#utility.yul\":2558:2646   */\n      mstore\n        /* \"#utility.yul\":2665:2669   */\n      0x11\n        /* \"#utility.yul\":2662:2663   */\n      0x04\n        /* \"#utility.yul\":2655:2670   */\n      mstore\n        /* \"#utility.yul\":2689:2693   */\n      0x24\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2679:2694   */\n      revert\n        /* \"#utility.yul\":2706:2886   */\n    tag_52:\n        /* \"#utility.yul\":2754:2831   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2751:2752   */\n      0x00\n        /* \"#utility.yul\":2744:2832   */\n      mstore\n        /* \"#utility.yul\":2851:2855   */\n      0x12\n        /* \"#utility.yul\":2848:2849   */\n      0x04\n        /* \"#utility.yul\":2841:2856   */\n      mstore\n        /* \"#utility.yul\":2875:2879   */\n      0x24\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2865:2880   */\n      revert\n        /* \"#utility.yul\":3015:3132   */\n    tag_28:\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3121:3122   */\n      dup1\n        /* \"#utility.yul\":3114:3126   */\n      revert\n        /* \"#utility.yul\":3138:3369   */\n    tag_35:\n        /* \"#utility.yul\":3278:3312   */\n      0x4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72\n        /* \"#utility.yul\":3274:3275   */\n      0x00\n        /* \"#utility.yul\":3266:3272   */\n      dup3\n        /* \"#utility.yul\":3262:3276   */\n      add\n        /* \"#utility.yul\":3255:3313   */\n      mstore\n        /* \"#utility.yul\":3347:3361   */\n      0x20696e20446563696d616c730000000000000000000000000000000000000000\n        /* \"#utility.yul\":3342:3344   */\n      0x20\n        /* \"#utility.yul\":3334:3340   */\n      dup3\n        /* \"#utility.yul\":3330:3345   */\n      add\n        /* \"#utility.yul\":3323:3362   */\n      mstore\n        /* \"#utility.yul\":3138:3369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3497   */\n    tag_24:\n        /* \"#utility.yul\":3448:3472   */\n      tag_67\n        /* \"#utility.yul\":3466:3471   */\n      dup2\n        /* \"#utility.yul\":3448:3472   */\n      tag_39\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":3441:3446   */\n      dup2\n        /* \"#utility.yul\":3438:3473   */\n      eq\n        /* \"#utility.yul\":3428:3491   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":3487:3488   */\n      0x00\n        /* \"#utility.yul\":3484:3485   */\n      dup1\n        /* \"#utility.yul\":3477:3489   */\n      revert\n        /* \"#utility.yul\":3428:3491   */\n    tag_68:\n        /* \"#utility.yul\":3375:3497   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610331806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d206b94414610030575b600080fd5b61004a600480360381019061004591906100f2565b610060565b6040516100579190610171565b60405180910390f35b6000816127108084610072919061019d565b61007c91906101ce565b146100bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b390610151565b60405180910390fd5b6103e86019836100cc91906101ce565b6100d6919061019d565b9050919050565b6000813590506100ec816102e4565b92915050565b60006020828403121561010857610107610290565b5b6000610116848285016100dd565b91505092915050565b600061012c602c8361018c565b915061013782610295565b604082019050919050565b61014b81610228565b82525050565b6000602082019050818103600083015261016a8161011f565b9050919050565b60006020820190506101866000830184610142565b92915050565b600082825260208201905092915050565b60006101a882610228565b91506101b383610228565b9250826101c3576101c2610261565b5b828204905092915050565b60006101d982610228565b91506101e483610228565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561021d5761021c610232565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b6102ed81610228565b81146102f857600080fd5b5056fea264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD206B944 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST EQ PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP5 DUP3 DUP6 ADD PUSH2 0xDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C PUSH1 0x2C DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x137 DUP3 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x261 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x232 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x228 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xF13FB03028E7986E REVERT DUP14 OR LOG3 LOG1 0xDA 0xD1 0x24 GT PUSH13 0xDF614CD8F2995BF9DA606B904F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:2383:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_deductOnyxNftFee_2049": {
									"entryPoint": 96,
									"id": 2049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3500:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "7:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:11"
															},
															"nodeType": "YulIf",
															"src": "228:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:11",
														"type": ""
													}
												],
												"src": "152:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "650:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "815:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																	"nodeType": "YulIdentifier",
																	"src": "726:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "828:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "839:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "828:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "621:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "629:3:11",
														"type": ""
													}
												],
												"src": "487:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "941:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "964:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "946:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "934:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "912:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "919:3:11",
														"type": ""
													}
												],
												"src": "859:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1230:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1236:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1390:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1264:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1134:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1149:4:11",
														"type": ""
													}
												],
												"src": "983:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1528:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1524:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1516:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1552:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1478:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1490:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1501:4:11",
														"type": ""
													}
												],
												"src": "1408:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1669:6:11",
														"type": ""
													}
												],
												"src": "1636:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1813:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1830:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1851:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1851:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1785:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1790:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1801:11:11",
														"type": ""
													}
												],
												"src": "1717:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1944:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1949:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1944:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2001:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1983:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1978:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2025:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2022:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:9:11"
															},
															"nodeType": "YulIf",
															"src": "2012:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2066:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2057:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1923:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1926:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1932:1:11",
														"type": ""
													}
												],
												"src": "1892:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2131:300:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2141:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2164:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2146:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2141:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2175:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2180:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2175:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2375:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2285:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2278:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2278:9:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2271:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2293:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2300:66:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2368:1:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2296:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2296:74:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2290:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:81:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2267:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:105:11"
															},
															"nodeType": "YulIf",
															"src": "2264:131:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2405:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2420:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2423:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2416:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2405:7:11"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2114:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2117:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2123:7:11",
														"type": ""
													}
												],
												"src": "2083:348:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2482:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2492:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2503:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2492:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2464:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2474:7:11",
														"type": ""
													}
												],
												"src": "2437:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2689:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2520:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2754:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2865:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2706:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2892:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3104:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3121:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3124:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3015:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3244:125:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3274:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3262:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3262:14:11"
																	},
																	{
																		"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3278:34:11",
																		"type": "",
																		"value": "Error! Onyx NFT fee Too small or"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3255:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3334:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3330:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3330:15:11"
																	},
																	{
																		"hexValue": "20696e20446563696d616c73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3347:14:11",
																		"type": "",
																		"value": " in Decimals"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3323:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3323:39:11"
														}
													]
												},
												"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3236:6:11",
														"type": ""
													}
												],
												"src": "3138:231:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3418:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3475:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3484:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3487:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3477:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3477:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3477:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3441:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3466:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3448:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3448:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:43:11"
															},
															"nodeType": "YulIf",
															"src": "3428:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3411:5:11",
														"type": ""
													}
												],
												"src": "3375:122:11"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error! Onyx NFT fee Too small or\")\n\n        mstore(add(memPtr, 32), \" in Decimals\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d206b94414610030575b600080fd5b61004a600480360381019061004591906100f2565b610060565b6040516100579190610171565b60405180910390f35b6000816127108084610072919061019d565b61007c91906101ce565b146100bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b390610151565b60405180910390fd5b6103e86019836100cc91906101ce565b6100d6919061019d565b9050919050565b6000813590506100ec816102e4565b92915050565b60006020828403121561010857610107610290565b5b6000610116848285016100dd565b91505092915050565b600061012c602c8361018c565b915061013782610295565b604082019050919050565b61014b81610228565b82525050565b6000602082019050818103600083015261016a8161011f565b9050919050565b60006020820190506101866000830184610142565b92915050565b600082825260208201905092915050565b60006101a882610228565b91506101b383610228565b9250826101c3576101c2610261565b5b828204905092915050565b60006101d982610228565b91506101e483610228565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561021d5761021c610232565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b6102ed81610228565b81146102f857600080fd5b5056fea264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD206B944 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST EQ PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP5 DUP3 DUP6 ADD PUSH2 0xDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C PUSH1 0x2C DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x137 DUP3 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x261 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x232 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x228 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xF13FB03028E7986E REVERT DUP14 OR LOG3 LOG1 0xDA 0xD1 0x24 GT PUSH13 0xDF614CD8F2995BF9DA606B904F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:2383:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1377:4;1424:5;1415;1408;1402;:11;;;;:::i;:::-;1401:19;;;;:::i;:::-;:28;1393:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1504:4;1501:2;1495:5;:8;;;;:::i;:::-;:13;;;;:::i;:::-;1488:20;;1318:197;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:366::-;629:3;650:67;714:2;709:3;650:67;:::i;:::-;643:74;;726:93;815:3;726:93;:::i;:::-;844:2;839:3;835:12;828:19;;487:366;;;:::o;859:118::-;946:24;964:5;946:24;:::i;:::-;941:3;934:37;859:118;;:::o;983:419::-;1149:4;1187:2;1176:9;1172:18;1164:26;;1236:9;1230:4;1226:20;1222:1;1211:9;1207:17;1200:47;1264:131;1390:4;1264:131;:::i;:::-;1256:139;;983:419;;;:::o;1408:222::-;1501:4;1539:2;1528:9;1524:18;1516:26;;1552:71;1620:1;1609:9;1605:17;1596:6;1552:71;:::i;:::-;1408:222;;;;:::o;1717:169::-;1801:11;1835:6;1830:3;1823:19;1875:4;1870:3;1866:14;1851:29;;1717:169;;;;:::o;1892:185::-;1932:1;1949:20;1967:1;1949:20;:::i;:::-;1944:25;;1983:20;2001:1;1983:20;:::i;:::-;1978:25;;2022:1;2012:35;;2027:18;;:::i;:::-;2012:35;2069:1;2066;2062:9;2057:14;;1892:185;;;;:::o;2083:348::-;2123:7;2146:20;2164:1;2146:20;:::i;:::-;2141:25;;2180:20;2198:1;2180:20;:::i;:::-;2175:25;;2368:1;2300:66;2296:74;2293:1;2290:81;2285:1;2278:9;2271:17;2267:105;2264:131;;;2375:18;;:::i;:::-;2264:131;2423:1;2420;2416:9;2405:20;;2083:348;;;;:::o;2437:77::-;2474:7;2503:5;2492:16;;2437:77;;;:::o;2520:180::-;2568:77;2565:1;2558:88;2665:4;2662:1;2655:15;2689:4;2686:1;2679:15;2706:180;2754:77;2751:1;2744:88;2851:4;2848:1;2841:15;2875:4;2872:1;2865:15;3015:117;3124:1;3121;3114:12;3138:231;3278:34;3274:1;3266:6;3262:14;3255:58;3347:14;3342:2;3334:6;3330:15;3323:39;3138:231;:::o;3375:122::-;3448:24;3466:5;3448:24;:::i;:::-;3441:5;3438:35;3428:63;;3487:1;3484;3477:12;3428:63;3375:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163400",
								"executionCost": "208",
								"totalCost": "163608"
							},
							"external": {
								"_deductOnyxNftFee(uint256)": "infinite"
							},
							"internal": {
								"_SendMinterFee(uint256,uint256,address payable)": "infinite",
								"_royaltyAndOnyxNftFee(uint256,uint256,address payable,address payable)": "infinite",
								"_setTokenRoyalty(uint256,address payable,uint256)": "infinite",
								"_transferAmountToSeller(uint256,address payable)": "infinite",
								"deductAmount(address,uint256)": "infinite",
								"depositBidAmmount(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "D206B944"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1429,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 629,
											"end": 632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 643,
											"end": 717,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 643,
											"end": 717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 835,
											"end": 847,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 828,
											"end": 847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 964,
											"end": 969,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 941,
											"end": 944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 934,
											"end": 971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1172,
											"end": 1190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1200,
											"end": 1247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2200,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2366,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2370,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2371,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2267,
											"end": 2372,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2520,
											"end": 2700,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2520,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2568,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2669,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2670,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2689,
											"end": 2693,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2886,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2706,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2754,
											"end": 2831,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2832,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3278,
											"end": 3312,
											"name": "PUSH",
											"source": 11,
											"value": "4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3262,
											"end": 3276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3255,
											"end": 3313,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "PUSH",
											"source": 11,
											"value": "20696E20446563696D616C730000000000000000000000000000000000000000"
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3323,
											"end": 3362,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3446,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3473,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_deductOnyxNftFee(uint256)": "d206b944"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"_deductOnyxNftFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OnyxNft1155Royalties.sol\":\"OnyxNftErc20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"OnyxNft1155Royalties.sol\":{\"keccak256\":\"0xeec794cb546dc7546deb5b39e4b9bf9df69d1f755cc3debf80a95762d5ec1d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9c6c906532cf1a6ef029b41d98613f12209ae0a746cf5b26d5cbd2c59546cb6\",\"dweb:/ipfs/QmSrgHGk811mkkvYUMoH1P7Pu9BRVUsiRR8K8KsRFE79oh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"Dropsite": [
							490
						],
						"ERC1155": [
							1339
						],
						"ERC1155Burnable": [
							1408
						],
						"ERC165": [
							1432
						],
						"IERC1155": [
							1524
						],
						"IERC1155Receiver": [
							1565
						],
						"IERC165": [
							1577
						],
						"OnyxNft1155Auction": [
							1916
						],
						"OnyxNftErc20": [
							2143
						]
					},
					"id": 491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "130:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "154:33:2"
						},
						{
							"absolutePath": "ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 491,
							"sourceUnit": 1340,
							"src": "188:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155Burnable.sol",
							"file": "./ERC1155Burnable.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 491,
							"sourceUnit": 1409,
							"src": "213:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "OnyxNft1155Royalties.sol",
							"file": "./OnyxNft1155Royalties.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 491,
							"sourceUnit": 2144,
							"src": "245:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "OnyxNft1155Auctions.sol",
							"file": "./OnyxNft1155Auctions.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 491,
							"sourceUnit": 1917,
							"src": "282:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1339,
										"src": "339:7:2"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "339:7:2"
								},
								{
									"baseName": {
										"id": 328,
										"name": "ERC1155Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "348:15:2"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "348:15:2"
								},
								{
									"baseName": {
										"id": 330,
										"name": "OnyxNftErc20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2143,
										"src": "365:12:2"
									},
									"id": 331,
									"nodeType": "InheritanceSpecifier",
									"src": "365:12:2"
								},
								{
									"baseName": {
										"id": 332,
										"name": "OnyxNft1155Auction",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1916,
										"src": "379:18:2"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "379:18:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 490,
							"linearizedBaseContracts": [
								490,
								1916,
								2143,
								1408,
								1339,
								1524,
								1432,
								1577,
								318
							],
							"name": "Dropsite",
							"nameLocation": "327:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "nftExists",
									"nameLocation": "467:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "444:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 336,
										"keyType": {
											"id": 334,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "453:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "444:22:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 335,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "461:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 341,
									"mutability": "mutable",
									"name": "TokenURI",
									"nameLocation": "504:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "482:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 340,
										"keyType": {
											"id": 338,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "491:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "482:22:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 339,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "497:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 344,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "525:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "518:15:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 342,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "518:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"hexValue": "",
										"id": 343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "531:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "NFTsMinted",
									"nameLocation": "545:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "540:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "540:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "556:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "numOfCopies",
									"nameLocation": "568:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "563:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "563:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "580:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "654:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "nftExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "672:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 357,
																"indexExpression": {
																	"id": 356,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "682:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "672:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "690:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "672:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20416c726561647920457869737473",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "698:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de444908d7eca5fbdcaab052a9311f02fc182564b1db844eaea20df421f1b962",
																"typeString": "literal_string \"Token Already Exists\""
															},
															"value": "Token Already Exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de444908d7eca5fbdcaab052a9311f02fc182564b1db844eaea20df421f1b962",
																"typeString": "literal_string \"Token Already Exists\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "664:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "664:57:2"
											},
											{
												"id": 363,
												"nodeType": "PlaceholderStatement",
												"src": "731:1:2"
											}
										]
									},
									"id": 365,
									"name": "TokenNotExist",
									"nameLocation": "628:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "643:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:13:2"
									},
									"src": "619:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 371,
									"mutability": "mutable",
									"name": "NFT_Price",
									"nameLocation": "811:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "772:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 370,
										"keyType": {
											"id": 366,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "781:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "772:38:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 369,
											"keyType": {
												"id": 367,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "798:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "790:19:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 368,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "804:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "857:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 374,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "876:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "888:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "876:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320506175736564",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "895:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9",
																"typeString": "literal_string \"Contract is Paused\""
															},
															"value": "Contract is Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dfb4dfcf63aa745d9ce3c1ef73a97ce3e13c8e45d88fe127f11073235a2c4e9",
																"typeString": "literal_string \"Contract is Paused\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "867:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "867:50:2"
											},
											{
												"id": 380,
												"nodeType": "PlaceholderStatement",
												"src": "927:1:2"
											}
										]
									},
									"id": 382,
									"name": "contractIsNotPaused",
									"nameLocation": "836:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:2"
									},
									"src": "827:108:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "957:86:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 385,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "975:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "975:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 387,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "991:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "975:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e79784e6674204f776e65722063616e20416363657373",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "998:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d",
																"typeString": "literal_string \"OnyxNft Owner can Access\""
															},
															"value": "OnyxNft Owner can Access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d910763f3200dacda372a28fcd951da556084e5f9511f9bf5f53ed51c3eb78d",
																"typeString": "literal_string \"OnyxNft Owner can Access\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "967:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "967:58:2"
											},
											{
												"id": 392,
												"nodeType": "PlaceholderStatement",
												"src": "1035:1:2"
											}
										]
									},
									"id": 394,
									"name": "OnlyOwner",
									"nameLocation": "947:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:0:2"
									},
									"src": "938:105:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1309a563",
									"id": 397,
									"mutability": "mutable",
									"name": "IsPaused",
									"nameLocation": "1063:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "1051:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 395,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1051:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 399,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "1108:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "1084:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 398,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1084:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1134:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 490,
									"src": "1119:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 400,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1119:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "1182:66:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "1192:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1200:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1192:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1192:12:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1214:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 413,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1230:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1230:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1222:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 411,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1222:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1222:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1214:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1214:27:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1163:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1163:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:20:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:0:2"
									},
									"scope": 490,
									"src": "1150:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1484:155:2",
										"statements": [
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "randomnumber",
														"nameLocation": "1495:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "1490:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 424,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1490:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 431,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1542:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1542:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 433,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1559:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1559:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 435,
																				"name": "NFTsMinted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "1571:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 429,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1525:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1525:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1525:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 428,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1515:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1515:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1510:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 426,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1510:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1510:74:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "33",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1510:78:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1490:98:2"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1599:12:2",
													"subExpression": {
														"id": 442,
														"name": "NFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1599:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "1599:12:2"
											},
											{
												"expression": {
													"id": 445,
													"name": "randomnumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "1624:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 446,
												"nodeType": "Return",
												"src": "1617:19:2"
											}
										]
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "1451:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:2:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1478:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1478:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:6:2"
									},
									"scope": 490,
									"src": "1442:197:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "1691:225:2",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "1703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 488,
														"src": "1698:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1698:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 455,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "1711:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1698:21:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 458,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "1735:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1742:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1735:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 465,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "1780:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1787:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1780:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 472,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "1823:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "53696c766572",
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1830:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_580396b706c510b55b097eb36445183c918e5a4f9ac52a70d27fca23c3b3aab1",
																	"typeString": "literal_string \"Silver\""
																},
																"value": "Silver"
															},
															"src": "1823:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														"id": 475,
														"nodeType": "ExpressionStatement",
														"src": "1823:15:2"
													},
													"id": 476,
													"nodeType": "IfStatement",
													"src": "1777:61:2",
													"trueBody": {
														"expression": {
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 468,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "1795:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "476f6c64",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff",
																	"typeString": "literal_string \"Gold\""
																},
																"value": "Gold"
															},
															"src": "1795:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														"id": 471,
														"nodeType": "ExpressionStatement",
														"src": "1795:11:2"
													}
												},
												"id": 477,
												"nodeType": "IfStatement",
												"src": "1732:106:2",
												"trueBody": {
													"expression": {
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 461,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1750:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "506c6174696e756d",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1755:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecadc0d3992a7a94d19327888a16aecb280514d608e8377a0d15dcf293020373",
																"typeString": "literal_string \"Platinum\""
															},
															"value": "Platinum"
														},
														"src": "1750:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"id": 464,
													"nodeType": "ExpressionStatement",
													"src": "1750:15:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 479,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "1852:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1852:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "1866:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 482,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "1873:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 483,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1886:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"id": 478,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "1846:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1846:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1846:45:2"
											},
											{
												"expression": {
													"id": 486,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 452,
												"id": 487,
												"nodeType": "Return",
												"src": "1897:12:2"
											}
										]
									},
									"functionSelector": "7e1eaabf",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "randomMint",
									"nameLocation": "1653:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1685:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1685:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:6:2"
									},
									"scope": 490,
									"src": "1644:272:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 491,
							"src": "318:1601:2",
							"usedErrors": []
						}
					],
					"src": "130:1789:2"
				},
				"id": 2
			},
			"ERC1155.sol": {
				"ast": {
					"absolutePath": "ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155": [
							1339
						],
						"ERC165": [
							1432
						],
						"IERC1155": [
							1524
						],
						"IERC1155Receiver": [
							1565
						],
						"IERC165": [
							1577
						]
					},
					"id": 1340,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1340,
							"sourceUnit": 1525,
							"src": "119:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1340,
							"sourceUnit": 1566,
							"src": "144:32:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1340,
							"sourceUnit": 297,
							"src": "177:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1340,
							"sourceUnit": 319,
							"src": "201:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165.sol",
							"file": "./ERC165.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1340,
							"sourceUnit": 1433,
							"src": "225:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 499,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "483:7:3"
									},
									"id": 500,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:3"
								},
								{
									"baseName": {
										"id": 501,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1432,
										"src": "492:6:3"
									},
									"id": 502,
									"nodeType": "InheritanceSpecifier",
									"src": "492:6:3"
								},
								{
									"baseName": {
										"id": 503,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1524,
										"src": "500:8:3"
									},
									"id": 504,
									"nodeType": "InheritanceSpecifier",
									"src": "500:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 498,
								"nodeType": "StructuredDocumentation",
								"src": "248:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1339,
							"linearizedBaseContracts": [
								1339,
								1524,
								1432,
								1577,
								318
							],
							"name": "ERC1155",
							"nameLocation": "472:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 507,
									"libraryName": {
										"id": 505,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "521:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "515:26:3",
									"typeName": {
										"id": 506,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 513,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "653:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1339,
									"src": "596:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 512,
										"keyType": {
											"id": 508,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "604:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "596:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 511,
											"keyType": {
												"id": 509,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "623:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "615:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 510,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "634:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 519,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "772:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1339,
									"src": "719:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 518,
										"keyType": {
											"id": 514,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "727:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "719:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 517,
											"keyType": {
												"id": 515,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "738:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 516,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "757:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1492
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "1028:133:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 531,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "1046:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1065:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1057:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 532,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1057:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1057:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1046:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1038:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "1038:77:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 540,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1132:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 542,
														"indexExpression": {
															"id": 541,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "1142:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1132:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 544,
													"indexExpression": {
														"id": 543,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1146:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1132:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 545,
												"nodeType": "Return",
												"src": "1125:29:3"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "797:131:3",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "942:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 526,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1001:8:3"
									},
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "977:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "969:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:29:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1019:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:3"
									},
									"scope": 1339,
									"src": "933:228:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1505
									],
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "1491:335:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 562,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "1509:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1509:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 564,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "1528:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1528:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1509:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1540:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1501:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1501:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "1501:83:3"
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "1612:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 610,
														"src": "1595:30:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 572,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1595:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 573,
															"nodeType": "ArrayTypeName",
															"src": "1595:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 578,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "1642:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1642:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1628:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 575,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 576,
															"nodeType": "ArrayTypeName",
															"src": "1632:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:63:3"
											},
											{
												"body": {
													"id": 606,
													"nodeType": "Block",
													"src": "1715:74:3",
													"statements": [
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 593,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "1729:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 595,
																	"indexExpression": {
																		"id": 594,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "1743:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1729:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 597,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "1758:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 599,
																			"indexExpression": {
																				"id": 598,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "1767:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1758:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 600,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "1771:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 602,
																			"indexExpression": {
																				"id": 601,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "1775:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1771:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 596,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "1748:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1748:30:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1729:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "1729:49:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "1689:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 587,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "1693:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1693:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"initializationExpression": {
													"assignments": [
														583
													],
													"declarations": [
														{
															"constant": false,
															"id": 583,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1682:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 607,
															"src": "1674:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 582,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1674:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 585,
													"initialValue": {
														"hexValue": "30",
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1686:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1674:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1710:3:3",
														"subExpression": {
															"id": 590,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "1712:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 592,
													"nodeType": "ExpressionStatement",
													"src": "1710:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1669:120:3"
											},
											{
												"expression": {
													"id": 608,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "1806:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 560,
												"id": 609,
												"nodeType": "Return",
												"src": "1799:20:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "1167:146:3",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1327:14:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1443:8:3"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "1359:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1342:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 549,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1342:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 550,
													"nodeType": "ArrayTypeName",
													"src": "1342:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1386:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1369:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1369:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 553,
													"nodeType": "ArrayTypeName",
													"src": "1369:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:49:3"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1469:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1469:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "1469:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:18:3"
									},
									"scope": 1339,
									"src": "1318:508:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1513
									],
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "1978:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2007:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2007:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2021:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2031:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 620,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1988:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1988:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1988:52:3"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "1832:57:3",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1903:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 618,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1969:8:3"
									},
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1929:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1921:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1944:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1939:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:33:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:0:3"
									},
									"scope": 1339,
									"src": "1894:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1523
									],
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "2219:61:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 639,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2236:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 641,
														"indexExpression": {
															"id": 640,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2255:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2236:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 643,
													"indexExpression": {
														"id": 642,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "2264:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2236:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 638,
												"id": 644,
												"nodeType": "Return",
												"src": "2229:44:3"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "2053:56:3",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2123:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 635,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2195:8:3"
									},
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2165:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2157:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:35:3"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2213:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2213:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:6:3"
									},
									"scope": 1339,
									"src": "2114:166:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "2893:634:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2911:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2925:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2917:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 662,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2917:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2917:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2911:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2903:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2903:66:3"
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "2988:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 739,
														"src": "2980:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 670,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2980:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 672,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2999:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2980:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 676,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "3043:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "3053:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3059:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 680,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "3081:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 679,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "3063:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3063:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 683,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "3104:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 682,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "3086:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 685,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3113:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 675,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3022:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3022:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "3022:96:3"
											},
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "3137:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 739,
														"src": "3129:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3129:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 690,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3151:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 692,
														"indexExpression": {
															"id": 691,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3161:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3151:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 694,
													"indexExpression": {
														"id": 693,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "3165:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3151:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3129:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 697,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "3188:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 698,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "3203:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3188:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3180:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "3180:76:3"
											},
											{
												"id": 713,
												"nodeType": "UncheckedBlock",
												"src": "3266:77:3",
												"statements": [
													{
														"expression": {
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 703,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "3290:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 706,
																	"indexExpression": {
																		"id": 704,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "3300:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3290:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 707,
																"indexExpression": {
																	"id": 705,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "3304:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3290:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "3312:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 709,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "3326:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3312:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 712,
														"nodeType": "ExpressionStatement",
														"src": "3290:42:3"
													}
												]
											},
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 714,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "3352:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 717,
															"indexExpression": {
																"id": 715,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "3362:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3352:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 718,
														"indexExpression": {
															"id": 716,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3366:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3352:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 719,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "3373:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3352:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "3352:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 723,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "3410:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "3420:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3426:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3430:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3434:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 722,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "3395:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "EmitStatement",
												"src": "3390:51:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "3483:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "3493:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3499:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 734,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3503:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 735,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3507:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 736,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3515:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 730,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "3452:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3452:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "3452:68:3"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "2286:439:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "2739:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2774:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2766:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2796:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2788:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2836:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2828:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2865:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2852:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2852:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:119:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2893:0:3"
									},
									"scope": 1339,
									"src": "2730:797:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "4061:857:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 757,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4079:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4079:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 759,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4093:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4093:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4079:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4071:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4071:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "4071:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 766,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "4170:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4184:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4176:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 767,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4176:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4176:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4170:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4188:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "4162:66:3"
											},
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "4247:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 865,
														"src": "4239:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4239:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 777,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "4258:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4239:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4302:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "4312:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4318:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4322:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 785,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4327:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4336:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 780,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "4281:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4281:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "4281:60:3"
											},
											{
												"body": {
													"id": 846,
													"nodeType": "Block",
													"src": "4393:370:3",
													"statements": [
														{
															"assignments": [
																801
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 801,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "4415:2:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 846,
																	"src": "4407:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 800,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4407:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 805,
															"initialValue": {
																"baseExpression": {
																	"id": 802,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4420:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"id": 803,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "4424:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4420:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4407:19:3"
														},
														{
															"assignments": [
																807
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 807,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "4448:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 846,
																	"src": "4440:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4440:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 811,
															"initialValue": {
																"baseExpression": {
																	"id": 808,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4457:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"id": 809,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "4465:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4457:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4440:27:3"
														},
														{
															"assignments": [
																813
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 813,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "4490:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 846,
																	"src": "4482:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 812,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4482:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 819,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 814,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "4504:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 816,
																	"indexExpression": {
																		"id": 815,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "4514:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4504:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 818,
																"indexExpression": {
																	"id": 817,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "4518:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4504:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4482:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 821,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "4545:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 822,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "4560:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4545:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4568:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 820,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4537:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4537:76:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "4537:76:3"
														},
														{
															"id": 837,
															"nodeType": "UncheckedBlock",
															"src": "4627:85:3",
															"statements": [
																{
																	"expression": {
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 827,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "4655:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 830,
																				"indexExpression": {
																					"id": 828,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "4665:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4655:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 831,
																			"indexExpression": {
																				"id": 829,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 743,
																				"src": "4669:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "4655:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 832,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 813,
																				"src": "4677:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 833,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "4691:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4677:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4655:42:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 836,
																	"nodeType": "ExpressionStatement",
																	"src": "4655:42:3"
																}
															]
														},
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 838,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "4725:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 841,
																		"indexExpression": {
																			"id": 839,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "4735:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4725:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 842,
																	"indexExpression": {
																		"id": 840,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "4739:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4725:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "4746:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4725:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "4725:27:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 793,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "4372:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 794,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4376:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4376:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4372:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"initializationExpression": {
													"assignments": [
														790
													],
													"declarations": [
														{
															"constant": false,
															"id": 790,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4365:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 847,
															"src": "4357:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 789,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4357:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 792,
													"initialValue": {
														"hexValue": "30",
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4369:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4357:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4388:3:3",
														"subExpression": {
															"id": 797,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "4390:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 799,
													"nodeType": "ExpressionStatement",
													"src": "4388:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4352:411:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4792:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "4802:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4808:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4812:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 853,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4817:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 848,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "4778:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4778:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "EmitStatement",
												"src": "4773:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 857,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4872:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "4882:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4888:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4892:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4897:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 862,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4906:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 856,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "4836:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4836:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "4836:75:3"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "3533:335:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "3882:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3973:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3956:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 746,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 747,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4003:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3986:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 749,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3986:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 750,
													"nodeType": "ArrayTypeName",
													"src": "3986:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4020:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4020:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:139:3"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1339,
									"src": "3873:1045:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "5421:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 879,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "5439:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5453:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5445:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 880,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5445:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5445:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5439:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5457:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5431:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5431:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "5431:62:3"
											},
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5512:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "5504:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 888,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5504:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 890,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "5523:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5523:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5504:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5567:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5585:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5577:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5577:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5577:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5589:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 901,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "5611:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 900,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "5593:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5593:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 904,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "5634:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 903,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "5616:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5616:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 906,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5643:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 893,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "5546:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "5546:102:3"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 909,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "5658:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 912,
															"indexExpression": {
																"id": 910,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "5668:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5658:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 913,
														"indexExpression": {
															"id": 911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5672:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5658:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 914,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "5679:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5658:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "5658:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 918,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5715:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5733:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5725:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 919,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5725:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5737:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5741:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 925,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5745:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 917,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "5700:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "5695:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5793:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5811:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5803:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5803:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5803:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5815:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5819:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 936,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5823:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5831:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 928,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5762:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "5762:74:3"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "4925:362:3",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5301:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5324:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5316:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5344:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5336:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5364:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5356:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5356:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5393:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5380:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5380:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5306:97:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5421:0:3"
									},
									"scope": 1339,
									"src": "5292:551:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "6188:526:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "6206:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6222:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6214:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 953,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6214:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6214:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6206:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6226:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6198:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6198:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "6198:66:3"
											},
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6283:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "6275:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 961,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6275:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 963,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6294:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6294:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6275:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "6338:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "6348:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6362:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6354:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6354:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6354:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 974,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "6384:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 973,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "6366:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6366:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 977,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "6407:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 976,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "6389:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6389:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6416:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 966,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "6317:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "6317:102:3"
											},
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "6438:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "6430:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 982,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6430:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 989,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 984,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6452:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 986,
														"indexExpression": {
															"id": 985,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "6462:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6452:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 988,
													"indexExpression": {
														"id": 987,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "6466:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6452:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6430:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "6489:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 992,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "6504:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6489:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6512:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6481:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6481:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "6481:70:3"
											},
											{
												"id": 1007,
												"nodeType": "UncheckedBlock",
												"src": "6561:77:3",
												"statements": [
													{
														"expression": {
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 997,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "6585:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1000,
																	"indexExpression": {
																		"id": 998,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "6595:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6585:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1001,
																"indexExpression": {
																	"id": 999,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "6599:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6585:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1002,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "6607:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1003,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "6621:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6607:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6585:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "6585:42:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1009,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "6668:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "6678:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6692:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6684:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6684:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6684:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "6696:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1016,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "6700:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "6653:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6653:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "EmitStatement",
												"src": "6648:59:3"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "5850:229:3",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6093:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6116:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6138:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6130:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6158:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6150:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:72:3"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6188:0:3"
									},
									"scope": 1339,
									"src": "6084:630:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "7037:738:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "7055:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7071:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7063:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1034,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7063:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7063:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7055:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7075:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7047:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7047:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "7047:66:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1043,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "7131:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7131:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1045,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "7145:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7145:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7131:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7161:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7123:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7123:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "7123:81:3"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7223:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "7215:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1051,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7215:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1053,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "7234:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7215:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1057,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "7278:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7288:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7302:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7294:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1059,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7294:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7294:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "7306:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1064,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "7311:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7320:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1056,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "7257:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7257:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "7257:66:3"
											},
											{
												"body": {
													"id": 1117,
													"nodeType": "Block",
													"src": "7375:323:3",
													"statements": [
														{
															"assignments": [
																1080
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1080,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7397:2:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1117,
																	"src": "7389:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1079,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7389:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1084,
															"initialValue": {
																"baseExpression": {
																	"id": 1081,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "7402:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1083,
																"indexExpression": {
																	"id": 1082,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "7406:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7402:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7389:19:3"
														},
														{
															"assignments": [
																1086
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1086,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7430:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1117,
																	"src": "7422:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1085,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7422:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1090,
															"initialValue": {
																"baseExpression": {
																	"id": 1087,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "7439:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1089,
																"indexExpression": {
																	"id": 1088,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "7447:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7439:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7422:27:3"
														},
														{
															"assignments": [
																1092
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1092,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7472:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1117,
																	"src": "7464:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1091,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7464:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1098,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1093,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7486:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1095,
																	"indexExpression": {
																		"id": 1094,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "7496:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7486:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1097,
																"indexExpression": {
																	"id": 1096,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "7500:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7486:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7464:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1100,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1092,
																			"src": "7527:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1101,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "7542:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7527:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7550:38:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1099,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7519:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7519:70:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1105,
															"nodeType": "ExpressionStatement",
															"src": "7519:70:3"
														},
														{
															"id": 1116,
															"nodeType": "UncheckedBlock",
															"src": "7603:85:3",
															"statements": [
																{
																	"expression": {
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1106,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "7631:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1109,
																				"indexExpression": {
																					"id": 1107,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "7641:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7631:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1110,
																			"indexExpression": {
																				"id": 1108,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "7645:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7631:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1111,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "7653:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1112,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "7667:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7653:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7631:42:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1115,
																	"nodeType": "ExpressionStatement",
																	"src": "7631:42:3"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1072,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "7354:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1073,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "7358:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7358:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7354:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"initializationExpression": {
													"assignments": [
														1069
													],
													"declarations": [
														{
															"constant": false,
															"id": 1069,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7347:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 1118,
															"src": "7339:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1068,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7339:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1071,
													"initialValue": {
														"hexValue": "30",
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7351:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7339:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7370:3:3",
														"subExpression": {
															"id": 1076,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "7370:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1078,
													"nodeType": "ExpressionStatement",
													"src": "7370:3:3"
												},
												"nodeType": "ForStatement",
												"src": "7334:364:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1120,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "7727:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7737:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7751:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7743:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1122,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7743:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7743:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "7755:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1127,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "7760:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1119,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "7713:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7713:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "EmitStatement",
												"src": "7708:60:3"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "6720:183:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "6917:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6945:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "6937:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6937:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6976:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "6959:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1024,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6959:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1025,
													"nodeType": "ArrayTypeName",
													"src": "6959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7006:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "6989:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1027,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6989:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1028,
													"nodeType": "ArrayTypeName",
													"src": "6989:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:92:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7037:0:3"
									},
									"scope": 1339,
									"src": "6908:867:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "8033:200:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1142,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "8051:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1143,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "8060:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8051:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8070:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8043:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8043:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "8043:71:3"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1148,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "8124:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1151,
															"indexExpression": {
																"id": 1149,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "8143:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8124:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1152,
														"indexExpression": {
															"id": 1150,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8150:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8124:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1153,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "8162:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8124:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "8124:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "8200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8207:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "8217:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1156,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "8185:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8185:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "EmitStatement",
												"src": "8180:46:3"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "7781:124:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "7919:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7955:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "7947:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7947:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7978:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "7970:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "8001:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "7996:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7996:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7937:78:3"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8033:0:3"
									},
									"scope": 1339,
									"src": "7910:323:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "9379:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "8239:923:3",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "9176:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9214:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "9206:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "9232:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9262:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "9254:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9291:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "9274:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1171,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9274:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1172,
													"nodeType": "ArrayTypeName",
													"src": "9274:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9321:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "9304:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1174,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9304:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1175,
													"nodeType": "ArrayTypeName",
													"src": "9304:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9351:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "9338:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9338:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9196:165:3"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9379:0:3"
									},
									"scope": 1339,
									"src": "9167:214:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "9580:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1197,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "9594:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "9594:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9594:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "9590:516:3",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "9611:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1224,
																		"nodeType": "Block",
																		"src": "9728:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1217,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1213,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1211,
																						"src": "9750:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1214,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1565,
																								"src": "9762:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1565_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1215,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1546,
																							"src": "9762:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1216,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "9762:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "9750:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1223,
																				"nodeType": "IfStatement",
																				"src": "9746:152:3",
																				"trueBody": {
																					"id": 1222,
																					"nodeType": "Block",
																					"src": "9807:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1219,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "9836:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1218,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "9829:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1220,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9829:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1221,
																							"nodeType": "ExpressionStatement",
																							"src": "9829:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1225,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1212,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1211,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "9718:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1225,
																				"src": "9711:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1210,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "9711:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "9710:17:3"
																	},
																	"src": "9702:210:3"
																},
																{
																	"block": {
																		"id": 1233,
																		"nodeType": "Block",
																		"src": "9947:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1227,
																							"src": "9972:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1229,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "9965:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9965:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1232,
																				"nodeType": "ExpressionStatement",
																				"src": "9965:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1234,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1228,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1227,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "9939:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1234,
																				"src": "9925:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1226,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "9925:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "9924:22:3"
																	},
																	"src": "9913:81:3"
																},
																{
																	"block": {
																		"id": 1239,
																		"nodeType": "Block",
																		"src": "10001:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1236,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10026:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1235,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "10019:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10019:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1238,
																				"nodeType": "ExpressionStatement",
																				"src": "10019:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1240,
																	"nodeType": "TryCatchClause",
																	"src": "9995:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1204,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "9668:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1205,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "9678:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "9684:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "9688:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "9696:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1201,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "9646:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1200,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "9629:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1565_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9629:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1565",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1546,
																	"src": "9629:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9629:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1241,
															"nodeType": "TryStatement",
															"src": "9625:471:3"
														}
													]
												}
											}
										]
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "9396:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9444:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "9436:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9470:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "9462:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9492:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "9484:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9484:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9512:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "9504:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9504:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9532:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "9524:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9561:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "9548:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9548:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9426:145:3"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9580:0:3"
									},
									"scope": 1339,
									"src": "9387:725:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "10337:574:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1262,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "10351:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "10351:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10351:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "10347:558:3",
												"trueBody": {
													"id": 1307,
													"nodeType": "Block",
													"src": "10368:537:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1289,
																		"nodeType": "Block",
																		"src": "10522:189:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1282,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1278,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1276,
																						"src": "10544:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1279,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1565,
																								"src": "10556:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1565_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1564,
																							"src": "10556:39:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1281,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "10556:48:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "10544:60:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1288,
																				"nodeType": "IfStatement",
																				"src": "10540:157:3",
																				"trueBody": {
																					"id": 1287,
																					"nodeType": "Block",
																					"src": "10606:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1284,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "10635:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1283,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "10628:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1285,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10628:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1286,
																							"nodeType": "ExpressionStatement",
																							"src": "10628:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1290,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1277,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1276,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "10499:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1290,
																				"src": "10492:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1275,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "10492:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "10474:47:3"
																	},
																	"src": "10466:245:3"
																},
																{
																	"block": {
																		"id": 1298,
																		"nodeType": "Block",
																		"src": "10746:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1295,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1292,
																							"src": "10771:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1294,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "10764:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10764:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1297,
																				"nodeType": "ExpressionStatement",
																				"src": "10764:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1299,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1293,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1292,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "10738:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1299,
																				"src": "10724:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1291,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "10724:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "10723:22:3"
																	},
																	"src": "10712:81:3"
																},
																{
																	"block": {
																		"id": 1304,
																		"nodeType": "Block",
																		"src": "10800:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10825:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1300,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "10818:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10818:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1303,
																				"nodeType": "ExpressionStatement",
																				"src": "10818:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1305,
																	"nodeType": "TryCatchClause",
																	"src": "10794:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1269,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "10430:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1270,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "10440:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1271,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "10446:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "10451:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1273,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "10460:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1266,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1251,
																				"src": "10403:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1265,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "10386:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1565_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10386:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1565",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1564,
																	"src": "10386:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10386:79:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1306,
															"nodeType": "TryStatement",
															"src": "10382:513:3"
														}
													]
												}
											}
										]
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "10127:35:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10180:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "10172:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10206:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "10198:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10228:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "10220:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10220:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10257:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "10240:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10240:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "10240:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10287:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "10270:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10270:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1256,
													"nodeType": "ArrayTypeName",
													"src": "10270:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10317:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "10304:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10304:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10162:165:3"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10337:0:3"
									},
									"scope": 1339,
									"src": "10118:793:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "11001:109:3",
										"statements": [
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "11028:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "11011:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1320,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11011:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1321,
															"nodeType": "ArrayTypeName",
															"src": "11011:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11050:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11036:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11040:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1324,
															"nodeType": "ArrayTypeName",
															"src": "11040:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11036:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11011:41:3"
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1329,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "11062:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1331,
														"indexExpression": {
															"hexValue": "30",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11068:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11062:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1332,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "11073:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11062:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "11062:18:3"
											},
											{
												"expression": {
													"id": 1335,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1322,
													"src": "11098:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1336,
												"nodeType": "Return",
												"src": "11091:12:3"
											}
										]
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "10926:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "10952:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "10944:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10943:17:3"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "10983:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1314,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10983:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1315,
													"nodeType": "ArrayTypeName",
													"src": "10983:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10982:18:3"
									},
									"scope": 1339,
									"src": "10917:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1340,
							"src": "463:10649:3",
							"usedErrors": []
						}
					],
					"src": "94:11018:3"
				},
				"id": 3
			},
			"ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "ERC1155Burnable.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155": [
							1339
						],
						"ERC1155Burnable": [
							1408
						],
						"ERC165": [
							1432
						],
						"IERC1155": [
							1524
						],
						"IERC1155Receiver": [
							1565
						],
						"IERC165": [
							1577
						]
					},
					"id": 1409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 1342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1409,
							"sourceUnit": 1340,
							"src": "138:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1344,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1339,
										"src": "378:7:4"
									},
									"id": 1345,
									"nodeType": "InheritanceSpecifier",
									"src": "378:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "163:177:4",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1408,
							"linearizedBaseContracts": [
								1408,
								1339,
								1524,
								1432,
								1577,
								318
							],
							"name": "ERC1155Burnable",
							"nameLocation": "359:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "495:215:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1355,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "526:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1356,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "537:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "537:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "526:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1360,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "570:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1361,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "579:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "579:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1359,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "553:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "553:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "526:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "606:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "505:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:154:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "505:154:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "684:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "693:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "697:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1368,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "678:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "678:25:4"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "401:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "423:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "415:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "448:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "440:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "460:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:74:4"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:4"
									},
									"scope": 1408,
									"src": "392:318:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "844:214:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "875:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1388,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "886:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "886:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "875:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1392,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "919:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1393,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "928:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "928:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1391,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "902:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "902:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "875:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "955:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:154:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "854:154:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "1030:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1402,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "1039:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1403,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "1044:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1400,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "1019:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "1019:32:4"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "725:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "752:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "744:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "786:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "769:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1378,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1379,
													"nodeType": "ArrayTypeName",
													"src": "769:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "816:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "799:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1381,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1382,
													"nodeType": "ArrayTypeName",
													"src": "799:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:94:4"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:0:4"
									},
									"scope": 1408,
									"src": "716:342:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1409,
							"src": "341:719:4",
							"usedErrors": []
						}
					],
					"src": "113:947:4"
				},
				"id": 4
			},
			"ERC165.sol": {
				"ast": {
					"absolutePath": "ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1432
						],
						"IERC165": [
							1577
						]
					},
					"id": 1433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1433,
							"sourceUnit": 1578,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1413,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1577,
										"src": "754:7:5"
									},
									"id": 1414,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1412,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1432,
							"linearizedBaseContracts": [
								1432,
								1577
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1576
									],
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1577_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1577_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1577",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1429,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 1432,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1433,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:887:5"
				},
				"id": 5
			},
			"IERC1155.sol": {
				"ast": {
					"absolutePath": "IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1524
						],
						"IERC165": [
							1577
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 1578,
							"src": "171:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1437,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1577,
										"src": "385:7:6"
									},
									"id": 1438,
									"nodeType": "InheritanceSpecifier",
									"src": "385:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1436,
								"nodeType": "StructuredDocumentation",
								"src": "196:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1524,
							"linearizedBaseContracts": [
								1524,
								1577
							],
							"name": "IERC1155",
							"nameLocation": "372:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "398:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1451,
									"name": "TransferSingle",
									"nameLocation": "530:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "561:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "545:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "587:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "571:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "609:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "593:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "621:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "613:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "633:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "625:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:95:6"
									},
									"src": "524:116:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "646:144:6",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1466,
									"name": "TransferBatch",
									"nameLocation": "801:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "840:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "824:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "874:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "858:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "904:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "888:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "926:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "916:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1459,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1460,
													"nodeType": "ArrayTypeName",
													"src": "916:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "949:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "939:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1462,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "939:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1463,
													"nodeType": "ArrayTypeName",
													"src": "939:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:147:6"
									},
									"src": "795:167:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "968:147:6",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1475,
									"name": "ApprovalForAll",
									"nameLocation": "1126:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1157:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1141:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1182:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1166:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1197:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1192:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1192:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:66:6"
									},
									"src": "1120:87:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "1213:343:6",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1482,
									"name": "URI",
									"nameLocation": "1567:3:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1578:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1571:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1571:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1601:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1585:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1570:34:6"
									},
									"src": "1561:44:6"
								},
								{
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "1611:173:6",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1798:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1816:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1808:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1833:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1825:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1807:29:6"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1860:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:9:6"
									},
									"scope": 1524,
									"src": "1789:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "1875:188:6",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2077:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2111:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2092:27:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1494,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2092:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1495,
													"nodeType": "ArrayTypeName",
													"src": "2092:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2140:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2121:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1497,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1498,
													"nodeType": "ArrayTypeName",
													"src": "2121:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:53:6"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2192:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1501,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2192:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"nodeType": "ArrayTypeName",
													"src": "2192:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:18:6"
									},
									"scope": 1524,
									"src": "2068:142:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "2216:248:6",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2478:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2504:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "2496:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2519:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "2514:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2514:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:33:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:6"
									},
									"scope": 1524,
									"src": "2469:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "2544:135:6",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2693:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2718:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2710:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2735:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2727:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:35:6"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2768:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2768:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:6:6"
									},
									"scope": 1524,
									"src": "2684:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1525,
							"src": "362:2415:6",
							"usedErrors": []
						}
					],
					"src": "95:2682:6"
				},
				"id": 6
			},
			"IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1565
						],
						"IERC165": [
							1577
						]
					},
					"id": 1566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 1578,
							"src": "127:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1529,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1577,
										"src": "222:7:7"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "222:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "152:39:7",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1565,
							"linearizedBaseContracts": [
								1565,
								1577
							],
							"name": "IERC1155Receiver",
							"nameLocation": "202:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "236:826:7",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1076:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1111:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1103:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1129:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1159:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1151:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1179:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1171:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1209:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1194:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1194:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:126:7"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1238:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1238:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:8:7"
									},
									"scope": 1565,
									"src": "1067:179:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "1252:994:7",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2260:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2300:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2292:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2326:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2359:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2340:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2340:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "2340:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2391:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2372:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2372:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "2372:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2407:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2407:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:150:7"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2451:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2451:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:8:7"
									},
									"scope": 1565,
									"src": "2251:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1566,
							"src": "192:2269:7",
							"usedErrors": []
						}
					],
					"src": "103:2358:7"
				},
				"id": 7
			},
			"IERC165.sol": {
				"ast": {
					"absolutePath": "IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1577
						]
					},
					"id": 1578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1568,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1577,
							"linearizedBaseContracts": [
								1577
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1570,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1577,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1578,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:752:8"
				},
				"id": 8
			},
			"OnyxNft1155Auctions.sol": {
				"ast": {
					"absolutePath": "OnyxNft1155Auctions.sol",
					"exportedSymbols": {
						"OnyxNft1155Auction": [
							1916
						]
					},
					"id": 1917,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1916,
							"linearizedBaseContracts": [
								1916
							],
							"name": "OnyxNft1155Auction",
							"nameLocation": "65:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1585,
									"name": "availableForBids",
									"nameLocation": "114:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "131:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "131:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "137:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "137:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "130:14:9"
									},
									"src": "108:38:9"
								},
								{
									"anonymous": false,
									"id": 1591,
									"name": "removeFormSale",
									"nameLocation": "157:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "173:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "179:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "179:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:15:9"
									},
									"src": "151:37:9"
								},
								{
									"canonicalName": "OnyxNft1155Auction.status",
									"id": 1596,
									"members": [
										{
											"id": 1592,
											"name": "NotOnSale",
											"nameLocation": "206:9:9",
											"nodeType": "EnumValue",
											"src": "206:9:9"
										},
										{
											"id": 1593,
											"name": "onAuction",
											"nameLocation": "217:9:9",
											"nodeType": "EnumValue",
											"src": "217:9:9"
										},
										{
											"id": 1594,
											"name": "onBidding",
											"nameLocation": "228:9:9",
											"nodeType": "EnumValue",
											"src": "228:9:9"
										},
										{
											"id": 1595,
											"name": "OnfixedPrice",
											"nameLocation": "239:12:9",
											"nodeType": "EnumValue",
											"src": "239:12:9"
										}
									],
									"name": "status",
									"nameLocation": "198:6:9",
									"nodeType": "EnumDefinition",
									"src": "193:60:9"
								},
								{
									"constant": false,
									"functionSelector": "e3306a6f",
									"id": 1599,
									"mutability": "mutable",
									"name": "CurrentStatus",
									"nameLocation": "272:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1916,
									"src": "258:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_status_$1596",
										"typeString": "enum OnyxNft1155Auction.status"
									},
									"typeName": {
										"id": 1598,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1597,
											"name": "status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1596,
											"src": "258:6:9"
										},
										"referencedDeclaration": 1596,
										"src": "258:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_status_$1596",
											"typeString": "enum OnyxNft1155Auction.status"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "OnyxNft1155Auction.NftDetails",
									"id": 1624,
									"members": [
										{
											"constant": false,
											"id": 1602,
											"mutability": "mutable",
											"name": "bidAmount",
											"nameLocation": "326:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "318:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "318:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1601,
												"nodeType": "ArrayTypeName",
												"src": "318:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1605,
											"mutability": "mutable",
											"name": "numOfCopies",
											"nameLocation": "353:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "345:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1604,
												"nodeType": "ArrayTypeName",
												"src": "345:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1608,
											"mutability": "mutable",
											"name": "bidderAddress",
											"nameLocation": "384:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "374:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1607,
												"nodeType": "ArrayTypeName",
												"src": "374:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1610,
											"mutability": "mutable",
											"name": "startingPrice",
											"nameLocation": "412:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "407:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1609,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "407:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1612,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "440:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "435:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1611,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "435:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1614,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "464:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "459:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1613,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "459:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1616,
											"mutability": "mutable",
											"name": "Exists",
											"nameLocation": "486:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "481:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1615,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "481:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1618,
											"mutability": "mutable",
											"name": "minimumPrice",
											"nameLocation": "553:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "548:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1617,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "548:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1620,
											"mutability": "mutable",
											"name": "index",
											"nameLocation": "580:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "575:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1619,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "575:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1623,
											"mutability": "mutable",
											"name": "salestatus",
											"nameLocation": "602:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1624,
											"src": "595:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_status_$1596",
												"typeString": "enum OnyxNft1155Auction.status"
											},
											"typeName": {
												"id": 1622,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1621,
													"name": "status",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1596,
													"src": "595:6:9"
												},
												"referencedDeclaration": 1596,
												"src": "595:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_status_$1596",
													"typeString": "enum OnyxNft1155Auction.status"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftDetails",
									"nameLocation": "298:10:9",
									"nodeType": "StructDefinition",
									"scope": 1916,
									"src": "291:328:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1631,
									"mutability": "mutable",
									"name": "Nft",
									"nameLocation": "725:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 1916,
									"src": "681:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails))"
									},
									"typeName": {
										"id": 1630,
										"keyType": {
											"id": 1625,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "689:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "681:43:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails))"
										},
										"valueType": {
											"id": 1629,
											"keyType": {
												"id": 1626,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "706:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "698:25:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
												"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails)"
											},
											"valueType": {
												"id": 1628,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1627,
													"name": "NftDetails",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1624,
													"src": "712:10:9"
												},
												"referencedDeclaration": 1624,
												"src": "712:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftDetails_$1624_storage_ptr",
													"typeString": "struct OnyxNft1155Auction.NftDetails"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "780:108:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1638,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "798:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1640,
																		"indexExpression": {
																			"id": 1639,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "802:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1642,
																	"indexExpression": {
																		"id": 1641,
																		"name": "NftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "810:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "798:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Exists",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1616,
																"src": "798:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "827:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "798:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74204f776e6572206f66204e6674206f7220446f6573277420457869737420",
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce8fa54ee8facebc029b17917de3e9c7b2815f752271b2d2bdd78bb54ac33033",
																"typeString": "literal_string \"Not Owner of Nft or Does't Exist \""
															},
															"value": "Not Owner of Nft or Does't Exist "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce8fa54ee8facebc029b17917de3e9c7b2815f752271b2d2bdd78bb54ac33033",
																"typeString": "literal_string \"Not Owner of Nft or Does't Exist \""
															}
														],
														"id": 1637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "790:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "790:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "790:80:9"
											},
											{
												"id": 1649,
												"nodeType": "PlaceholderStatement",
												"src": "880:1:9"
											}
										]
									},
									"id": 1651,
									"name": "NftExist",
									"nameLocation": "743:8:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "761:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "753:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "NftId",
												"nameLocation": "774:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "769:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "769:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:28:9"
									},
									"src": "734:154:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "939:118:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1596",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1658,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "957:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1660,
																		"indexExpression": {
																			"id": 1659,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "961:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "957:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1662,
																	"indexExpression": {
																		"id": 1661,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "968:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "957:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "957:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1664,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "989:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "NotOnSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1592,
																"src": "989:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "957:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e667420697320416c7265616479206f6e2053616c65",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1007:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_999bcd91e8e8034883f655a250a2f2a7fc819dc8d9e3d393d4ed5ac19f09f407",
																"typeString": "literal_string \"Error! Nft is Already on Sale\""
															},
															"value": "Error! Nft is Already on Sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_999bcd91e8e8034883f655a250a2f2a7fc819dc8d9e3d393d4ed5ac19f09f407",
																"typeString": "literal_string \"Error! Nft is Already on Sale\""
															}
														],
														"id": 1657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "949:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "949:90:9"
											},
											{
												"id": 1670,
												"nodeType": "PlaceholderStatement",
												"src": "1049:1:9"
											}
										]
									},
									"id": 1672,
									"name": "notOnSale",
									"nameLocation": "902:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "921:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "913:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "932:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "927:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:26:9"
									},
									"src": "893:164:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "1106:128:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1596",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1679,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "1124:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1681,
																		"indexExpression": {
																			"id": 1680,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "1128:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1124:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1683,
																	"indexExpression": {
																		"id": 1682,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "1135:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1124:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "1124:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1685,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "1156:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "onBidding",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1594,
																"src": "1156:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "1124:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e4654206973204e6f7420417661696c61626c6520666f7220426964696e67",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_920842a2f4b4ad44a84fc36951e15c80a2c3d941566bf8594b9d81bdfcdce679",
																"typeString": "literal_string \"Error! NFT is Not Available for Biding\""
															},
															"value": "Error! NFT is Not Available for Biding"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_920842a2f4b4ad44a84fc36951e15c80a2c3d941566bf8594b9d81bdfcdce679",
																"typeString": "literal_string \"Error! NFT is Not Available for Biding\""
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1116:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:100:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "1116:100:9"
											},
											{
												"id": 1691,
												"nodeType": "PlaceholderStatement",
												"src": "1226:1:9"
											}
										]
									},
									"id": 1693,
									"name": "onBidding",
									"nameLocation": "1071:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1089:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1081:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1100:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1095:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:26:9"
									},
									"src": "1062:172:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "1293:125:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1596",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1700,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "1312:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1702,
																		"indexExpression": {
																			"id": 1701,
																			"name": "nftOwnerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1316:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1312:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1704,
																	"indexExpression": {
																		"id": 1703,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "1333:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1312:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "1312:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1706,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "1354:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "NotOnSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1592,
																"src": "1354:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "1312:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e6674206973204e6f74206f6e2053616c65",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1372:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecbaf141d7f2c47453e740cfb519eacc221ef8c6d5d08c6c6bf3da84fddb35a2",
																"typeString": "literal_string \"Error! Nft is Not on Sale\""
															},
															"value": "Error! Nft is Not on Sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecbaf141d7f2c47453e740cfb519eacc221ef8c6d5d08c6c6bf3da84fddb35a2",
																"typeString": "literal_string \"Error! Nft is Not on Sale\""
															}
														],
														"id": 1699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1303:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1303:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "1303:97:9"
											},
											{
												"id": 1712,
												"nodeType": "PlaceholderStatement",
												"src": "1410:1:9"
											}
										]
									},
									"id": 1714,
									"name": "onSale",
									"nameLocation": "1248:6:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "nftOwnerAddress",
												"nameLocation": "1264:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1256:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1286:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1281:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1281:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:37:9"
									},
									"src": "1239:179:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "1473:129:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1596",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1721,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "1492:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1723,
																		"indexExpression": {
																			"id": 1722,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "1496:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1492:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1725,
																	"indexExpression": {
																		"id": 1724,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "1503:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1492:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "1492:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1727,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "1524:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "OnfixedPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1595,
																"src": "1524:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1596",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "1492:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206973204e6f7420417661696c61626c6520666f72204669786564205072696365",
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1545:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e6d91cec41385810c77b9d3726cd6cf12114847051adc43986fb706c31bdb5d",
																"typeString": "literal_string \"NFT is Not Available for Fixed Price\""
															},
															"value": "NFT is Not Available for Fixed Price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e6d91cec41385810c77b9d3726cd6cf12114847051adc43986fb706c31bdb5d",
																"typeString": "literal_string \"NFT is Not Available for Fixed Price\""
															}
														],
														"id": 1720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1483:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:101:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "1483:101:9"
											},
											{
												"id": 1733,
												"nodeType": "PlaceholderStatement",
												"src": "1594:1:9"
											}
										]
									},
									"id": 1735,
									"name": "onFixedPrice",
									"nameLocation": "1433:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1455:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1447:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1467:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1462:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:27:9"
									},
									"src": "1424:178:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "1763:288:9",
										"statements": [
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1750,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "1773:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1796:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 1751,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "1789:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																"typeString": "type(enum OnyxNft1155Auction.status)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1789:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "1773:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "1773:25:9"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1756,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "1942:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1759,
																"indexExpression": {
																	"id": 1757,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "1946:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1942:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1760,
															"indexExpression": {
																"id": 1758,
																"name": "NftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "1954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1942:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salestatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "1942:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1762,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "1974:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "1942:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "1942:45:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1766,
															"name": "NftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "2020:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416363657074696e672042696473",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb74c78ba6e2fe5199bb8196a5d69a40d12d4afbd36d6b7bc7c3549fcb169dea",
																"typeString": "literal_string \"Accepting Bids\""
															},
															"value": "Accepting Bids"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_bb74c78ba6e2fe5199bb8196a5d69a40d12d4afbd36d6b7bc7c3549fcb169dea",
																"typeString": "literal_string \"Accepting Bids\""
															}
														],
														"id": 1765,
														"name": "availableForBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "2002:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "EmitStatement",
												"src": "1997:47:9"
											}
										]
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1742,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1737,
													"src": "1715:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1743,
													"name": "NftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1739,
													"src": "1722:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1744,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1741,
												"name": "notOnSale",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1672,
												"src": "1705:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:23:9"
										},
										{
											"arguments": [
												{
													"id": 1746,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1737,
													"src": "1738:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1747,
													"name": "NftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1739,
													"src": "1747:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1748,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1745,
												"name": "NftExist",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1651,
												"src": "1729:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1729:24:9"
										}
									],
									"name": "_placeNftForBids",
									"nameLocation": "1659:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1684:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1676:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "NftId",
												"nameLocation": "1697:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1692:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1692:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:29:9"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1763:0:9"
									},
									"scope": 1916,
									"src": "1650:401:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "2397:210:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1795,
															"name": "_bidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "2450:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1788,
																		"name": "Nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "2407:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																		}
																	},
																	"id": 1791,
																	"indexExpression": {
																		"id": 1789,
																		"name": "nftOwnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2411:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2407:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																		"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																	}
																},
																"id": 1792,
																"indexExpression": {
																	"id": 1790,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "2428:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2407:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																	"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bidAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1602,
															"src": "2407:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2407:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "2407:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1805,
															"name": "bidderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "2518:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1798,
																		"name": "Nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "2471:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																		}
																	},
																	"id": 1801,
																	"indexExpression": {
																		"id": 1799,
																		"name": "nftOwnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2475:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2471:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																		"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																	}
																},
																"id": 1802,
																"indexExpression": {
																	"id": 1800,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "2492:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2471:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																	"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bidderAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1608,
															"src": "2471:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2471:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2471:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "2471:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1815,
															"name": "_numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "2587:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1808,
																		"name": "Nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "2542:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																		}
																	},
																	"id": 1811,
																	"indexExpression": {
																		"id": 1809,
																		"name": "nftOwnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2546:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2542:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																		"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																	}
																},
																"id": 1812,
																"indexExpression": {
																	"id": 1810,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "2563:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2542:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																	"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numOfCopies",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1605,
															"src": "2542:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2542:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1817,
												"nodeType": "ExpressionStatement",
												"src": "2542:58:9"
											}
										]
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1784,
													"name": "nftOwnerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1773,
													"src": "2366:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1785,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1777,
													"src": "2382:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1786,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1783,
												"name": "onBidding",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1693,
												"src": "2356:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2356:32:9"
										}
									],
									"name": "_pushBidingValues",
									"nameLocation": "2242:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "nftOwnerAddress",
												"nameLocation": "2269:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2261:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "bidderAddress",
												"nameLocation": "2293:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2285:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2313:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2308:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "_bidAmount",
												"nameLocation": "2325:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2320:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2320:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "_numOfCopies",
												"nameLocation": "2342:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2337:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2337:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:95:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:0:9"
									},
									"scope": 1916,
									"src": "2233:374:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "2745:151:9",
										"statements": [
											{
												"expression": {
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1836,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2756:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																}
															],
															"id": 1837,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "2772:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																"typeString": "type(enum OnyxNft1155Auction.status)"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2772:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "2756:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "2756:25:9"
											},
											{
												"expression": {
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1842,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "2791:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1845,
																"indexExpression": {
																	"id": 1843,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "2795:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2791:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1846,
															"indexExpression": {
																"id": 1844,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "2802:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2791:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salestatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "2791:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1848,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2822:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "2791:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "2791:44:9"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1851,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "2845:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1854,
																"indexExpression": {
																	"id": 1852,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "2849:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2845:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1855,
															"indexExpression": {
																"id": 1853,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "2856:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2845:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minimumPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1618,
														"src": "2845:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1857,
														"name": "Fixedamount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "2878:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2845:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "2845:44:9"
											}
										]
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1828,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1821,
													"src": "2699:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1829,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1823,
													"src": "2706:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1827,
												"name": "notOnSale",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1672,
												"src": "2689:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2689:23:9"
										},
										{
											"arguments": [
												{
													"id": 1832,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1821,
													"src": "2722:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1833,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1823,
													"src": "2730:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1834,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1831,
												"name": "NftExist",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1651,
												"src": "2713:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:23:9"
										}
									],
									"name": "_placeNftForFixedPrice",
									"nameLocation": "2621:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2652:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2644:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2664:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2659:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2659:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "Fixedamount",
												"nameLocation": "2676:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2671:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2671:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:46:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:9"
									},
									"scope": 1916,
									"src": "2612:284:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "3026:210:9",
										"statements": [
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1876,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "3070:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3093:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1877,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "3086:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_status_$1596_$",
																"typeString": "type(enum OnyxNft1155Auction.status)"
															}
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3086:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "3070:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "3070:25:9"
											},
											{
												"expression": {
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1882,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "3105:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1885,
																"indexExpression": {
																	"id": 1883,
																	"name": "ownerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "3109:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3105:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1886,
															"indexExpression": {
																"id": 1884,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "3123:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3105:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salestatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "3105:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1888,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "3143:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1596",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "3105:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "3105:51:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1892,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "3186:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4572726f7221204e46542069732072656d6f7665642066726f6d2053616c6520",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3194:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86b698c6d6784f76efc25df6ae071013e8d02922a2b89c1204fc3fce49cbcafb",
																"typeString": "literal_string \"Error! NFT is removed from Sale \""
															},
															"value": "Error! NFT is removed from Sale "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_86b698c6d6784f76efc25df6ae071013e8d02922a2b89c1204fc3fce49cbcafb",
																"typeString": "literal_string \"Error! NFT is removed from Sale \""
															}
														],
														"id": 1891,
														"name": "removeFormSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "3171:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "EmitStatement",
												"src": "3166:63:9"
											}
										]
									},
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1868,
													"name": "ownerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1863,
													"src": "2970:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1869,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1865,
													"src": "2983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1870,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1867,
												"name": "NftExist",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1651,
												"src": "2961:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2961:28:9"
										},
										{
											"arguments": [
												{
													"id": 1872,
													"name": "ownerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1863,
													"src": "2997:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1873,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1865,
													"src": "3010:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1871,
												"name": "onSale",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1714,
												"src": "2990:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2990:26:9"
										}
									],
									"name": "_removeFromSale",
									"nameLocation": "2911:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "2935:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "2927:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2954:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "2949:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2926:34:9"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3026:0:9"
									},
									"scope": 1916,
									"src": "2902:334:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "3324:55:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1907,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "3341:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																}
															},
															"id": 1909,
															"indexExpression": {
																"id": 1908,
																"name": "nftOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "3345:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3341:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1624_storage_$",
																"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
															}
														},
														"id": 1911,
														"indexExpression": {
															"id": 1910,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "3355:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3341:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NftDetails_$1624_storage",
															"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "salestatus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1623,
													"src": "3341:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1913,
												"nodeType": "Return",
												"src": "3334:38:9"
											}
										]
									},
									"functionSelector": "67c510c9",
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CheckNftStatus",
									"nameLocation": "3250:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "nftOwner",
												"nameLocation": "3273:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3265:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "3288:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3283:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3283:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:30:9"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "3317:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_status_$1596",
													"typeString": "enum OnyxNft1155Auction.status"
												},
												"typeName": {
													"id": 1904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1903,
														"name": "status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1596,
														"src": "3317:6:9"
													},
													"referencedDeclaration": 1596,
													"src": "3317:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1596",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:8:9"
									},
									"scope": 1916,
									"src": "3241:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1917,
							"src": "56:3326:9",
							"usedErrors": []
						}
					],
					"src": "32:3350:9"
				},
				"id": 9
			},
			"OnyxNft1155Royalties.sol": {
				"ast": {
					"absolutePath": "OnyxNft1155Royalties.sol",
					"exportedSymbols": {
						"OnyxNftErc20": [
							2143
						]
					},
					"id": 2144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1918,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2143,
							"linearizedBaseContracts": [
								2143
							],
							"name": "OnyxNftErc20",
							"nameLocation": "65:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1926,
									"name": "RoyaltiesTransfer",
									"nameLocation": "91:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "109:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "109:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "115:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "121:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:10"
									},
									"src": "85:42:10"
								},
								{
									"canonicalName": "OnyxNftErc20.royaltyInfo",
									"id": 1931,
									"members": [
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "177:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "161:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1927,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "161:15:10",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1930,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "203:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "196:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1929,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "196:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "royaltyInfo",
									"nameLocation": "139:11:10",
									"nodeType": "StructDefinition",
									"scope": 2143,
									"src": "132:84:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1935,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "247:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2143,
									"src": "221:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1934,
										"keyType": {
											"id": 1932,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "230:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "221:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1933,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "241:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1940,
									"mutability": "mutable",
									"name": "_royalties",
									"nameLocation": "293:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2143,
									"src": "261:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$1931_storage_$",
										"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo)"
									},
									"typeName": {
										"id": 1939,
										"keyType": {
											"id": 1936,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "261:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$1931_storage_$",
											"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo)"
										},
										"valueType": {
											"id": 1938,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1937,
												"name": "royaltyInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1931,
												"src": "280:11:10"
											},
											"referencedDeclaration": 1931,
											"src": "280:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_royaltyInfo_$1931_storage_ptr",
												"typeString": "struct OnyxNftErc20.royaltyInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1944,
									"mutability": "mutable",
									"name": "OnyxNftWhiteList",
									"nameLocation": "333:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2143,
									"src": "309:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1943,
										"keyType": {
											"id": 1941,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "318:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "309:23:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1942,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "327:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "447:135:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "465:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3530",
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "474:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "465:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722120546f6f206869676820526f79616c74696573",
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c4e1455dcab7d55570ed81a90b7c4272ff551b906a619034b3a60d43964eb4",
																"typeString": "literal_string \"Error! Too high Royalties\""
															},
															"value": "Error! Too high Royalties"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c4e1455dcab7d55570ed81a90b7c4272ff551b906a619034b3a60d43964eb4",
																"typeString": "literal_string \"Error! Too high Royalties\""
															}
														],
														"id": 1953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "457:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "457:49:10"
											},
											{
												"expression": {
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1960,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "516:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$1931_storage_$",
																"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo storage ref)"
															}
														},
														"id": 1962,
														"indexExpression": {
															"id": 1961,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "527:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "516:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_royaltyInfo_$1931_storage",
															"typeString": "struct OnyxNftErc20.royaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1964,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "550:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1967,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "568:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "561:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1965,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "561:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "561:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1963,
															"name": "royaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "538:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_royaltyInfo_$1931_storage_ptr_$",
																"typeString": "type(struct OnyxNftErc20.royaltyInfo storage pointer)"
															}
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "538:37:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_royaltyInfo_$1931_memory_ptr",
															"typeString": "struct OnyxNftErc20.royaltyInfo memory"
														}
													},
													"src": "516:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_royaltyInfo_$1931_storage",
														"typeString": "struct OnyxNftErc20.royaltyInfo storage ref"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "516:59:10"
											}
										]
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenRoyalty",
									"nameLocation": "364:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "389:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "381:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "413:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "397:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "431:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "423:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:57:10"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:10"
									},
									"scope": 2143,
									"src": "355:227:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "721:591:10",
										"statements": [
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "_TotalNftPrice",
														"nameLocation": "736:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "731:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "731:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"expression": {
														"id": 1986,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "753:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "753:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:31:10"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "_OnyxNftFee",
														"nameLocation": "881:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "876:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1989,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "876:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"arguments": [
														{
															"id": 1992,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "913:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1991,
														"name": "_deductOnyxNftFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "895:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "876:47:10"
											},
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "_minterFee",
														"nameLocation": "938:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "933:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1995,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "933:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2002,
												"initialValue": {
													"arguments": [
														{
															"id": 1998,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "966:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1999,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "978:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2000,
															"name": "minterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "991:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1997,
														"name": "_SendMinterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "951:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,address payable) returns (uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "933:72:10"
											},
											{
												"expression": {
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2003,
														"name": "_TotalNftPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "1015:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2004,
																"name": "_TotalNftPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "1032:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2005,
																"name": "_OnyxNftFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "1049:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1032:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2007,
															"name": "_minterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "1063:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1032:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:58:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "1015:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2012,
															"name": "_TotalNftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "1147:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2013,
															"name": "NftSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "1163:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2011,
														"name": "_transferAmountToSeller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "1122:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
															"typeString": "function (uint256,address payable)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "1122:51:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2017,
															"name": "_OnyxNftFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "1266:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2018,
															"name": "_minterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "1278:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2019,
															"name": "_TotalNftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "1290:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2016,
														"name": "RoyaltiesTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "1248:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2021,
												"nodeType": "EmitStatement",
												"src": "1243:62:10"
											}
										]
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_royaltyAndOnyxNftFee",
									"nameLocation": "597:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "_NftPrice",
												"nameLocation": "625:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "620:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "620:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "641:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "636:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "636:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "minterAddress",
												"nameLocation": "669:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "653:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "NftSeller",
												"nameLocation": "700:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "684:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:91:10"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:10"
									},
									"scope": 2143,
									"src": "588:724:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "1383:132:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2031,
																				"name": "Price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2025,
																				"src": "1402:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1408:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "1402:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1401:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1415:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "1401:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2037,
																"name": "Price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "1424:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1401:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7220696e20446563696d616c73",
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																"typeString": "literal_string \"Error! Onyx NFT fee Too small or in Decimals\""
															},
															"value": "Error! Onyx NFT fee Too small or in Decimals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																"typeString": "literal_string \"Error! Onyx NFT fee Too small or in Decimals\""
															}
														],
														"id": 2030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1393:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:85:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "1393:85:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2042,
															"name": "Price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "1495:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3235",
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1501:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25_by_1",
																"typeString": "int_const 25"
															},
															"value": "25"
														},
														"src": "1495:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1504:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1495:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2047,
												"nodeType": "Return",
												"src": "1488:20:10"
											}
										]
									},
									"functionSelector": "d206b944",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deductOnyxNftFee",
									"nameLocation": "1327:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "Price",
												"nameLocation": "1350:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "1345:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:12:10"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "1377:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:10"
									},
									"scope": 2143,
									"src": "1318:197:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "1604:40:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2059,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "1630:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2056,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "1614:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1614:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1614:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "1614:23:10"
											}
										]
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountToSeller",
									"nameLocation": "1534:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1563:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "1558:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1558:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1587:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "1571:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:37:10"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:10"
									},
									"scope": 2143,
									"src": "1525:119:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "1757:292:10",
										"statements": [
											{
												"assignments": [
													2075
												],
												"declarations": [
													{
														"constant": false,
														"id": 2075,
														"mutability": "mutable",
														"name": "AmountToSend",
														"nameLocation": "1772:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "1767:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2074,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1767:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2081,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2076,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "1787:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2077,
															"name": "Percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "1797:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1787:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1808:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1787:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1767:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2085,
															"name": "AmountToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "1916:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2082,
															"name": "recepient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "1897:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1897:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1897:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "1897:32:10"
											},
											{
												"expression": {
													"id": 2088,
													"name": "AmountToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2075,
													"src": "2030:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2089,
												"nodeType": "Return",
												"src": "2023:19:10"
											}
										]
									},
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_SendMinterFee",
									"nameLocation": "1659:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "_NftPrice",
												"nameLocation": "1679:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "1674:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1674:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "Percentage",
												"nameLocation": "1695:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "1690:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "recepient",
												"nameLocation": "1723:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "1707:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:60:10"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "1751:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1751:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:6:10"
									},
									"scope": 2143,
									"src": "1650:399:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "2126:121:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2099,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2144:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2144:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2101,
																"name": "amountToDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "2157:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2144:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f72207768696c65204465706f736974",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d13faf13e2c700f1b4d53a69c2423df55726b15356335aef038dfdfb3ebded2",
																"typeString": "literal_string \"Error while Deposit\""
															},
															"value": "Error while Deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d13faf13e2c700f1b4d53a69c2423df55726b15356335aef038dfdfb3ebded2",
																"typeString": "literal_string \"Error while Deposit\""
															}
														],
														"id": 2098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2136:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "2136:60:10"
											},
											{
												"expression": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2106,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "2206:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2108,
														"indexExpression": {
															"id": 2107,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "2215:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2206:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2109,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "2225:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2206:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "2206:34:10"
											}
										]
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositBidAmmount",
									"nameLocation": "2063:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "2089:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "2081:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "2100:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "2095:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2095:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:36:10"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:10"
									},
									"scope": 2143,
									"src": "2054:193:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "2310:127:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2121,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "2328:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2123,
																	"indexExpression": {
																		"id": 2122,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "2337:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2328:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2343:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2328:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2126,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "2348:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2127,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "2358:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2129,
																	"indexExpression": {
																		"id": 2128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "2367:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2358:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2348:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2328:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204c6f772042616c616e6365",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2375:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f12ccd525b8c4686a43d3a8e40d049e4990f4cc4a4adc0acb90e33c21636c237",
																"typeString": "literal_string \"Error! Low Balance\""
															},
															"value": "Error! Low Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f12ccd525b8c4686a43d3a8e40d049e4990f4cc4a4adc0acb90e33c21636c237",
																"typeString": "literal_string \"Error! Low Balance\""
															}
														],
														"id": 2120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2320:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "2320:76:10"
											},
											{
												"expression": {
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2135,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "2406:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2137,
														"indexExpression": {
															"id": 2136,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "2415:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2406:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2138,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "2424:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2406:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "2406:24:10"
											}
										]
									},
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductAmount",
									"nameLocation": "2261:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2282:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2274:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2293:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2288:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2288:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:27:10"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:10"
									},
									"scope": 2143,
									"src": "2252:185:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2144,
							"src": "56:2383:10",
							"usedErrors": []
						}
					],
					"src": "32:2407:10"
				},
				"id": 10
			}
		}
	}
}