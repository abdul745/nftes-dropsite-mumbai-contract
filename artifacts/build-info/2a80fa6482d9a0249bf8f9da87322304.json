{
	"id": "2a80fa6482d9a0249bf8f9da87322304",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\n// Constraints for wei and Ethers in fixed amount and royalties\n// Burn only owner // Open Bidding \npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155.sol\"; \nimport \"./ERC1155Burnable.sol\";\nimport \"./OnyxNft1155Royalties.sol\";\nimport \"./OnyxNft1155Auctions.sol\";"
			},
			"OnyxNft1155Auctions.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract OnyxNft1155Auction {  //is SpaceERC20 \n    event availableForBids(uint, string) ;\n    event removeFormSale (uint, string );\n    enum status {NotOnSale ,onAuction, onBidding, OnfixedPrice }\n    status public CurrentStatus;\n    struct NftDetails{\n        uint [] bidAmount;\n        uint [] numOfCopies;\n        address[] bidderAddress;\n        uint startingPrice;\n        uint startTime;\n        uint endTime;\n        bool Exists;\n        // Using minimumPrice == minimumBid  \n        uint minimumPrice;\n        uint index;\n        status salestatus;\n    }\n     // NftOwnerAddress to NftId to NftDetails (Struct) \n    mapping(address=>mapping(uint=>NftDetails)) Nft;\n    modifier NftExist (address _owner, uint NftId){\n        require(Nft[_owner][NftId].Exists == true , \"Not Owner of Nft or Does't Exist \");\n        _;\n    }\n    modifier notOnSale (address owner,uint nftId) {\n        require(Nft[owner][nftId].salestatus == status.NotOnSale, \"Error! Nft is Already on Sale\");\n        _;\n    }\n    modifier onBidding(address owner,uint nftId){\n        require(Nft[owner][nftId].salestatus == status.onBidding , \"Error! NFT is Not Available for Biding\");\n        _;\n    }\n    modifier onSale (address nftOwnerAddress ,uint nftId) {\n        require( Nft[nftOwnerAddress][nftId].salestatus != status.NotOnSale, \"Error! Nft is Not on Sale\");\n        _;\n    }\n\n    modifier onFixedPrice (address owner, uint nftId){\n        require( Nft[owner][nftId].salestatus == status.OnfixedPrice, \"NFT is Not Available for Fixed Price\");\n        _;\n    }\n//    \n\n\n//     //Place NFT to Accept Bids\n    function _placeNftForBids(address _owner, uint NftId ) notOnSale(_owner,NftId) NftExist(_owner , NftId) internal {\n        CurrentStatus = status(2);\n        // NftDetails storage NftDetailobj = Nft[NftId];   I think it will create Storage Obj automatically,  Nft[NftId].salestatus  \n        Nft[_owner][NftId].salestatus = CurrentStatus;\n        emit availableForBids (NftId, \"Accepting Bids\");\n    }\n\n\n\n//     // function putOnSale(uint NftId) internal {\n//     //     require(Nft[NftId].IsonSale == false, \"Not On Sale\");\n//     //     Nft[NftId].IsonSale = true;\n//     // }\n    function _pushBidingValues (address nftOwnerAddress,address bidderAddress, uint nftId, uint _bidAmount, uint _numOfCopies) onBidding(nftOwnerAddress,nftId) internal{\n        Nft[nftOwnerAddress][nftId].bidAmount.push(_bidAmount);\n        Nft[nftOwnerAddress][nftId].bidderAddress.push(bidderAddress);\n        Nft[nftOwnerAddress][nftId].numOfCopies.push(_numOfCopies);\n    }\n    function _placeNftForFixedPrice(address owner ,uint nftId, uint Fixedamount )notOnSale(owner, nftId) NftExist(owner , nftId) internal{ \n        CurrentStatus = status(3);\n        Nft[owner][nftId].salestatus = CurrentStatus;\n        Nft[owner][nftId].minimumPrice = Fixedamount;\n    }\n\n    function _removeFromSale(address ownerAddress, uint nftId) NftExist(ownerAddress,nftId) onSale(ownerAddress,nftId) internal {\n        // check Already on Sale \n        CurrentStatus = status(0);\n        Nft[ownerAddress][nftId].salestatus = CurrentStatus;\n        emit removeFormSale(nftId , \"Error! NFT is removed from Sale \");\n    }\n    function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){\n        return Nft[nftOwner][nftId].salestatus;\n    }\n\n}"
			},
			"OnyxNft1155Royalties.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract OnyxNftErc20 {\n\n    event RoyaltiesTransfer(uint, uint, uint);\n    struct royaltyInfo {\n        address payable recipient;\n        uint24 amount;\n    }\n    mapping (address => uint) deposits;\n    mapping(uint256 => royaltyInfo) _royalties;\n    mapping (address=>bool) OnyxNftWhiteList;\n    function _setTokenRoyalty(uint256 tokenId,address payable recipient,uint256 value) internal {\n        require(value <= 50, \"Error! Too high Royalties\");\n        _royalties[tokenId] = royaltyInfo(recipient, uint24(value));\n    }\n\n    function _royaltyAndOnyxNftFee (uint _NftPrice, uint percentage, address payable minterAddress, address payable NftSeller) internal  {\n        uint _TotalNftPrice = msg.value;   \n        //Check Here\n        // require(msg.value >= NftPrice[NftId], \"Error! Insufficent Balance\");\n        uint _OnyxNftFee = _deductOnyxNftFee(_NftPrice);\n        uint _minterFee = _SendMinterFee(_NftPrice , percentage,  minterAddress);\n        _TotalNftPrice = _TotalNftPrice - _OnyxNftFee - _minterFee;    //Remaining Price After Deduction  \n        _transferAmountToSeller( _TotalNftPrice, NftSeller);            // Send Amount to NFT Seller after Tax deduction\n        emit RoyaltiesTransfer(_OnyxNftFee,_minterFee, _TotalNftPrice);\n    }\n\n    function _deductOnyxNftFee(uint Price) public pure returns(uint) {\n        require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\");\n        return Price*25/1000;\n    }\n    \n    function _transferAmountToSeller(uint amount, address payable seller) internal {\n        seller.transfer(amount);\n    }\n\n    function _SendMinterFee(uint _NftPrice, uint Percentage, address payable recepient) internal returns(uint) {\n        uint AmountToSend = _NftPrice*Percentage/100;           //Calculate Minter percentage and Send to his Address from Struct\n        recepient.transfer(AmountToSend);                       // Send this Amount To Transfer Address from Contract balacne\n        return AmountToSend;\n    }\n    function depositBidAmmount(address payee,uint amountToDeposit) internal {\n        require(msg.value == amountToDeposit, \"Error while Deposit\");\n        deposits[payee] += amountToDeposit;\n    }\n    function deductAmount(address from, uint amount) internal {\n        require(deposits[from]>0 && amount <= deposits[from] , \"Error! Low Balance\");\n        deposits[from] -= amount;\n    }\n}"
			},
			"ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        \n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}"
			},
			"ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155 {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155  is IERC165{\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155.sol\":463:11112  contract ERC1155 is Context, ERC165, IERC1155 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155.sol\":463:11112  contract ERC1155 is Context, ERC165, IERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_11:\n        /* \"ERC1155.sol\":1019:1026  uint256 */\n      0x00\n        /* \"ERC1155.sol\":1065:1066  0 */\n      dup1\n        /* \"ERC1155.sol\":1046:1067  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":1046:1053  account */\n      dup4\n        /* \"ERC1155.sol\":1046:1067  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":1038:1115  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"ERC1155.sol\":1132:1141  _balances */\n      0x00\n        /* \"ERC1155.sol\":1132:1145  _balances[id] */\n      dup1\n        /* \"ERC1155.sol\":1142:1144  id */\n      dup4\n        /* \"ERC1155.sol\":1132:1145  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":1132:1154  _balances[id][account] */\n      0x00\n        /* \"ERC1155.sol\":1146:1153  account */\n      dup5\n        /* \"ERC1155.sol\":1132:1154  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":1125:1154  return _balances[id][account] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":933:1161  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_17:\n        /* \"ERC165.sol\":914:918  bool */\n      0x00\n        /* \"ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_23:\n        /* \"ERC1155.sol\":1469:1485  uint256[] memory */\n      0x60\n        /* \"ERC1155.sol\":1528:1531  ids */\n      dup2\n        /* \"ERC1155.sol\":1528:1538  ids.length */\n      mload\n        /* \"ERC1155.sol\":1509:1517  accounts */\n      dup4\n        /* \"ERC1155.sol\":1509:1524  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1509:1538  accounts.length == ids.length */\n      eq\n        /* \"ERC1155.sol\":1501:1584  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"ERC1155.sol\":1595:1625  uint256[] memory batchBalances */\n      0x00\n        /* \"ERC1155.sol\":1642:1650  accounts */\n      dup4\n        /* \"ERC1155.sol\":1642:1657  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1628:1658  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n    tag_44:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_47:\n      pop\n        /* \"ERC1155.sol\":1595:1658  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":1674:1683  uint256 i */\n      0x00\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_48:\n        /* \"ERC1155.sol\":1693:1701  accounts */\n      dup5\n        /* \"ERC1155.sol\":1693:1708  accounts.length */\n      mload\n        /* \"ERC1155.sol\":1689:1690  i */\n      dup2\n        /* \"ERC1155.sol\":1689:1708  i < accounts.length */\n      lt\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"ERC1155.sol\":1748:1778  balanceOf(accounts[i], ids[i]) */\n      tag_51\n        /* \"ERC1155.sol\":1758:1766  accounts */\n      dup6\n        /* \"ERC1155.sol\":1767:1768  i */\n      dup3\n        /* \"ERC1155.sol\":1758:1769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_52\n      jumpi\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n    tag_52:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":1771:1774  ids */\n      dup6\n        /* \"ERC1155.sol\":1775:1776  i */\n      dup4\n        /* \"ERC1155.sol\":1771:1777  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_55\n      jumpi\n      tag_56\n      tag_54\n      jump\t// in\n    tag_56:\n    tag_55:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":1748:1757  balanceOf */\n      tag_11\n        /* \"ERC1155.sol\":1748:1778  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_51:\n        /* \"ERC1155.sol\":1729:1742  batchBalances */\n      dup3\n        /* \"ERC1155.sol\":1743:1744  i */\n      dup3\n        /* \"ERC1155.sol\":1729:1745  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_58\n      tag_54\n      jump\t// in\n    tag_58:\n    tag_57:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155.sol\":1729:1778  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155.sol\":1710:1713  ++i */\n      dup1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap1\n      pop\n        /* \"ERC1155.sol\":1669:1789  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_48)\n    tag_49:\n      pop\n        /* \"ERC1155.sol\":1806:1819  batchBalances */\n      dup1\n        /* \"ERC1155.sol\":1799:1819  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":1318:1826  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_29:\n        /* \"ERC1155.sol\":1988:2040  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_62\n        /* \"ERC1155.sol\":2007:2019  _msgSender() */\n      tag_63\n        /* \"ERC1155.sol\":2007:2017  _msgSender */\n      tag_64\n        /* \"ERC1155.sol\":2007:2019  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"ERC1155.sol\":2021:2029  operator */\n      dup4\n        /* \"ERC1155.sol\":2031:2039  approved */\n      dup4\n        /* \"ERC1155.sol\":1988:2006  _setApprovalForAll */\n      tag_65\n        /* \"ERC1155.sol\":1988:2040  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_62:\n        /* \"ERC1155.sol\":1894:2047  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_33:\n        /* \"ERC1155.sol\":2213:2217  bool */\n      0x00\n        /* \"ERC1155.sol\":2236:2254  _operatorApprovals */\n      0x01\n        /* \"ERC1155.sol\":2236:2263  _operatorApprovals[account] */\n      0x00\n        /* \"ERC1155.sol\":2255:2262  account */\n      dup5\n        /* \"ERC1155.sol\":2236:2263  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":2236:2273  _operatorApprovals[account][operator] */\n      0x00\n        /* \"ERC1155.sol\":2264:2272  operator */\n      dup4\n        /* \"ERC1155.sol\":2236:2273  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1155.sol\":2229:2273  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":2114:2280  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1155.sol\":7910:8233  function _setApprovalForAll(... */\n    tag_65:\n        /* \"ERC1155.sol\":8060:8068  operator */\n      dup2\n        /* \"ERC1155.sol\":8051:8068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":8051:8056  owner */\n      dup4\n        /* \"ERC1155.sol\":8051:8068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":8043:8114  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"ERC1155.sol\":8162:8170  approved */\n      dup1\n        /* \"ERC1155.sol\":8124:8142  _operatorApprovals */\n      0x01\n        /* \"ERC1155.sol\":8124:8149  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC1155.sol\":8143:8148  owner */\n      dup6\n        /* \"ERC1155.sol\":8124:8149  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":8124:8159  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC1155.sol\":8150:8158  operator */\n      dup5\n        /* \"ERC1155.sol\":8124:8159  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":8124:8170  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":8207:8215  operator */\n      dup2\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":8200:8205  owner */\n      dup4\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC1155.sol\":8217:8225  approved */\n      dup4\n        /* \"ERC1155.sol\":8185:8226  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1155.sol\":7910:8233  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_74:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_76\n        /* \"#utility.yul\":161:225   */\n      tag_77\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":145:226   */\n      tag_79\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":350:493   */\n    tag_80:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_83:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_86\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_83)\n    tag_85:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_88:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_90\n        /* \"#utility.yul\":906:970   */\n      tag_91\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":890:971   */\n      tag_79\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_94\n      tag_82\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1095:1238   */\n    tag_93:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_95:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_98\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_95)\n    tag_97:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1636   */\n    tag_87:\n        /* \"#utility.yul\":1543:1548   */\n      0x00\n        /* \"#utility.yul\":1581:1587   */\n      dup2\n        /* \"#utility.yul\":1568:1588   */\n      calldataload\n        /* \"#utility.yul\":1559:1588   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1630   */\n      tag_101\n        /* \"#utility.yul\":1624:1629   */\n      dup2\n        /* \"#utility.yul\":1597:1630   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1497:1636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:2029   */\n    tag_103:\n        /* \"#utility.yul\":1730:1735   */\n      0x00\n        /* \"#utility.yul\":1779:1782   */\n      dup3\n        /* \"#utility.yul\":1772:1776   */\n      0x1f\n        /* \"#utility.yul\":1764:1770   */\n      dup4\n        /* \"#utility.yul\":1760:1777   */\n      add\n        /* \"#utility.yul\":1756:1783   */\n      slt\n        /* \"#utility.yul\":1746:1868   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1787:1866   */\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1746:1868   */\n    tag_105:\n        /* \"#utility.yul\":1904:1910   */\n      dup2\n        /* \"#utility.yul\":1891:1911   */\n      calldataload\n        /* \"#utility.yul\":1929:2023   */\n      tag_108\n        /* \"#utility.yul\":2019:2022   */\n      dup5\n        /* \"#utility.yul\":2011:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2008   */\n      0x20\n        /* \"#utility.yul\":1996:2002   */\n      dup7\n        /* \"#utility.yul\":1992:2009   */\n      add\n        /* \"#utility.yul\":1929:2023   */\n      tag_74\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1920:2023   */\n      swap2\n      pop\n        /* \"#utility.yul\":1736:2029   */\n      pop\n        /* \"#utility.yul\":1659:2029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2422   */\n    tag_109:\n        /* \"#utility.yul\":2123:2128   */\n      0x00\n        /* \"#utility.yul\":2172:2175   */\n      dup3\n        /* \"#utility.yul\":2165:2169   */\n      0x1f\n        /* \"#utility.yul\":2157:2163   */\n      dup4\n        /* \"#utility.yul\":2153:2170   */\n      add\n        /* \"#utility.yul\":2149:2176   */\n      slt\n        /* \"#utility.yul\":2139:2261   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":2180:2259   */\n      tag_112\n      tag_107\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2139:2261   */\n    tag_111:\n        /* \"#utility.yul\":2297:2303   */\n      dup2\n        /* \"#utility.yul\":2284:2304   */\n      calldataload\n        /* \"#utility.yul\":2322:2416   */\n      tag_113\n        /* \"#utility.yul\":2412:2415   */\n      dup5\n        /* \"#utility.yul\":2404:2410   */\n      dup3\n        /* \"#utility.yul\":2397:2401   */\n      0x20\n        /* \"#utility.yul\":2389:2395   */\n      dup7\n        /* \"#utility.yul\":2385:2402   */\n      add\n        /* \"#utility.yul\":2322:2416   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2313:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2129:2422   */\n      pop\n        /* \"#utility.yul\":2052:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2561   */\n    tag_114:\n        /* \"#utility.yul\":2471:2476   */\n      0x00\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2496:2516   */\n      calldataload\n        /* \"#utility.yul\":2487:2516   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2555   */\n      tag_116\n        /* \"#utility.yul\":2549:2554   */\n      dup2\n        /* \"#utility.yul\":2525:2555   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2428:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2704   */\n    tag_118:\n        /* \"#utility.yul\":2612:2617   */\n      0x00\n        /* \"#utility.yul\":2650:2656   */\n      dup2\n        /* \"#utility.yul\":2637:2657   */\n      calldataload\n        /* \"#utility.yul\":2628:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2666:2698   */\n      tag_120\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2666:2698   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2567:2704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2849   */\n    tag_99:\n        /* \"#utility.yul\":2756:2761   */\n      0x00\n        /* \"#utility.yul\":2794:2800   */\n      dup2\n        /* \"#utility.yul\":2781:2801   */\n      calldataload\n        /* \"#utility.yul\":2772:2801   */\n      swap1\n      pop\n        /* \"#utility.yul\":2810:2843   */\n      tag_123\n        /* \"#utility.yul\":2837:2842   */\n      dup2\n        /* \"#utility.yul\":2810:2843   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2710:2849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:3329   */\n    tag_32:\n        /* \"#utility.yul\":2923:2929   */\n      0x00\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2980:2982   */\n      0x40\n        /* \"#utility.yul\":2968:2977   */\n      dup4\n        /* \"#utility.yul\":2959:2966   */\n      dup6\n        /* \"#utility.yul\":2955:2978   */\n      sub\n        /* \"#utility.yul\":2951:2983   */\n      slt\n        /* \"#utility.yul\":2948:3067   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2986:3065   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2948:3067   */\n    tag_126:\n        /* \"#utility.yul\":3106:3107   */\n      0x00\n        /* \"#utility.yul\":3131:3184   */\n      tag_129\n        /* \"#utility.yul\":3176:3183   */\n      dup6\n        /* \"#utility.yul\":3167:3173   */\n      dup3\n        /* \"#utility.yul\":3156:3165   */\n      dup7\n        /* \"#utility.yul\":3152:3174   */\n      add\n        /* \"#utility.yul\":3131:3184   */\n      tag_87\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3121:3184   */\n      swap3\n      pop\n        /* \"#utility.yul\":3077:3194   */\n      pop\n        /* \"#utility.yul\":3233:3235   */\n      0x20\n        /* \"#utility.yul\":3259:3312   */\n      tag_130\n        /* \"#utility.yul\":3304:3311   */\n      dup6\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup7\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3249:3312   */\n      swap2\n      pop\n        /* \"#utility.yul\":3204:3322   */\n      pop\n        /* \"#utility.yul\":2855:3329   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3335:3803   */\n    tag_28:\n        /* \"#utility.yul\":3400:3406   */\n      0x00\n        /* \"#utility.yul\":3408:3414   */\n      dup1\n        /* \"#utility.yul\":3457:3459   */\n      0x40\n        /* \"#utility.yul\":3445:3454   */\n      dup4\n        /* \"#utility.yul\":3436:3443   */\n      dup6\n        /* \"#utility.yul\":3432:3455   */\n      sub\n        /* \"#utility.yul\":3428:3460   */\n      slt\n        /* \"#utility.yul\":3425:3544   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3463:3542   */\n      tag_133\n      tag_128\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3425:3544   */\n    tag_132:\n        /* \"#utility.yul\":3583:3584   */\n      0x00\n        /* \"#utility.yul\":3608:3661   */\n      tag_134\n        /* \"#utility.yul\":3653:3660   */\n      dup6\n        /* \"#utility.yul\":3644:3650   */\n      dup3\n        /* \"#utility.yul\":3633:3642   */\n      dup7\n        /* \"#utility.yul\":3629:3651   */\n      add\n        /* \"#utility.yul\":3608:3661   */\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3598:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3554:3671   */\n      pop\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3736:3786   */\n      tag_135\n        /* \"#utility.yul\":3778:3785   */\n      dup6\n        /* \"#utility.yul\":3769:3775   */\n      dup3\n        /* \"#utility.yul\":3758:3767   */\n      dup7\n        /* \"#utility.yul\":3754:3776   */\n      add\n        /* \"#utility.yul\":3736:3786   */\n      tag_114\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3726:3786   */\n      swap2\n      pop\n        /* \"#utility.yul\":3681:3796   */\n      pop\n        /* \"#utility.yul\":3335:3803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3809:4283   */\n    tag_10:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3934:3936   */\n      0x40\n        /* \"#utility.yul\":3922:3931   */\n      dup4\n        /* \"#utility.yul\":3913:3920   */\n      dup6\n        /* \"#utility.yul\":3909:3932   */\n      sub\n        /* \"#utility.yul\":3905:3937   */\n      slt\n        /* \"#utility.yul\":3902:4021   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3940:4019   */\n      tag_138\n      tag_128\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3902:4021   */\n    tag_137:\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4085:4138   */\n      tag_139\n        /* \"#utility.yul\":4130:4137   */\n      dup6\n        /* \"#utility.yul\":4121:4127   */\n      dup3\n        /* \"#utility.yul\":4110:4119   */\n      dup7\n        /* \"#utility.yul\":4106:4128   */\n      add\n        /* \"#utility.yul\":4085:4138   */\n      tag_87\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4075:4138   */\n      swap3\n      pop\n        /* \"#utility.yul\":4031:4148   */\n      pop\n        /* \"#utility.yul\":4187:4189   */\n      0x20\n        /* \"#utility.yul\":4213:4266   */\n      tag_140\n        /* \"#utility.yul\":4258:4265   */\n      dup6\n        /* \"#utility.yul\":4249:4255   */\n      dup3\n        /* \"#utility.yul\":4238:4247   */\n      dup7\n        /* \"#utility.yul\":4234:4256   */\n      add\n        /* \"#utility.yul\":4213:4266   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4203:4266   */\n      swap2\n      pop\n        /* \"#utility.yul\":4158:4276   */\n      pop\n        /* \"#utility.yul\":3809:4283   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4289:5183   */\n    tag_22:\n        /* \"#utility.yul\":4407:4413   */\n      0x00\n        /* \"#utility.yul\":4415:4421   */\n      dup1\n        /* \"#utility.yul\":4464:4466   */\n      0x40\n        /* \"#utility.yul\":4452:4461   */\n      dup4\n        /* \"#utility.yul\":4443:4450   */\n      dup6\n        /* \"#utility.yul\":4439:4462   */\n      sub\n        /* \"#utility.yul\":4435:4467   */\n      slt\n        /* \"#utility.yul\":4432:4551   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":4470:4549   */\n      tag_143\n      tag_128\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4432:4551   */\n    tag_142:\n        /* \"#utility.yul\":4618:4619   */\n      0x00\n        /* \"#utility.yul\":4607:4616   */\n      dup4\n        /* \"#utility.yul\":4603:4620   */\n      add\n        /* \"#utility.yul\":4590:4621   */\n      calldataload\n        /* \"#utility.yul\":4648:4666   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4640:4646   */\n      dup2\n        /* \"#utility.yul\":4637:4667   */\n      gt\n        /* \"#utility.yul\":4634:4751   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":4670:4749   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4634:4751   */\n    tag_144:\n        /* \"#utility.yul\":4775:4853   */\n      tag_147\n        /* \"#utility.yul\":4845:4852   */\n      dup6\n        /* \"#utility.yul\":4836:4842   */\n      dup3\n        /* \"#utility.yul\":4825:4834   */\n      dup7\n        /* \"#utility.yul\":4821:4843   */\n      add\n        /* \"#utility.yul\":4775:4853   */\n      tag_103\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4765:4853   */\n      swap3\n      pop\n        /* \"#utility.yul\":4561:4863   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4919:4928   */\n      dup4\n        /* \"#utility.yul\":4915:4933   */\n      add\n        /* \"#utility.yul\":4902:4934   */\n      calldataload\n        /* \"#utility.yul\":4961:4979   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4953:4959   */\n      dup2\n        /* \"#utility.yul\":4950:4980   */\n      gt\n        /* \"#utility.yul\":4947:5064   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":4983:5062   */\n      tag_149\n      tag_146\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4947:5064   */\n    tag_148:\n        /* \"#utility.yul\":5088:5166   */\n      tag_150\n        /* \"#utility.yul\":5158:5165   */\n      dup6\n        /* \"#utility.yul\":5149:5155   */\n      dup3\n        /* \"#utility.yul\":5138:5147   */\n      dup7\n        /* \"#utility.yul\":5134:5156   */\n      add\n        /* \"#utility.yul\":5088:5166   */\n      tag_109\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5078:5166   */\n      swap2\n      pop\n        /* \"#utility.yul\":4873:5176   */\n      pop\n        /* \"#utility.yul\":4289:5183   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5189:5516   */\n    tag_16:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_153\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5264:5383   */\n    tag_152:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5499   */\n      tag_154\n        /* \"#utility.yul\":5491:5498   */\n      dup5\n        /* \"#utility.yul\":5482:5488   */\n      dup3\n        /* \"#utility.yul\":5471:5480   */\n      dup6\n        /* \"#utility.yul\":5467:5489   */\n      add\n        /* \"#utility.yul\":5447:5499   */\n      tag_118\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5437:5499   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5509   */\n      pop\n        /* \"#utility.yul\":5189:5516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5522:5701   */\n    tag_155:\n        /* \"#utility.yul\":5591:5601   */\n      0x00\n        /* \"#utility.yul\":5612:5658   */\n      tag_157\n        /* \"#utility.yul\":5654:5657   */\n      dup4\n        /* \"#utility.yul\":5646:5652   */\n      dup4\n        /* \"#utility.yul\":5612:5658   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5690:5694   */\n      0x20\n        /* \"#utility.yul\":5685:5688   */\n      dup4\n        /* \"#utility.yul\":5681:5695   */\n      add\n        /* \"#utility.yul\":5667:5695   */\n      swap1\n      pop\n        /* \"#utility.yul\":5522:5701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:6469   */\n    tag_159:\n        /* \"#utility.yul\":5856:5859   */\n      0x00\n        /* \"#utility.yul\":5885:5939   */\n      tag_161\n        /* \"#utility.yul\":5933:5938   */\n      dup3\n        /* \"#utility.yul\":5885:5939   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5955:6041   */\n      tag_163\n        /* \"#utility.yul\":6034:6040   */\n      dup2\n        /* \"#utility.yul\":6029:6032   */\n      dup6\n        /* \"#utility.yul\":5955:6041   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5948:6041   */\n      swap4\n      pop\n        /* \"#utility.yul\":6065:6121   */\n      tag_165\n        /* \"#utility.yul\":6115:6120   */\n      dup4\n        /* \"#utility.yul\":6065:6121   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6144:6151   */\n      dup1\n        /* \"#utility.yul\":6175:6176   */\n      0x00\n        /* \"#utility.yul\":6160:6444   */\n    tag_167:\n        /* \"#utility.yul\":6185:6191   */\n      dup4\n        /* \"#utility.yul\":6182:6183   */\n      dup2\n        /* \"#utility.yul\":6179:6192   */\n      lt\n        /* \"#utility.yul\":6160:6444   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":6261:6267   */\n      dup2\n        /* \"#utility.yul\":6255:6268   */\n      mload\n        /* \"#utility.yul\":6288:6351   */\n      tag_170\n        /* \"#utility.yul\":6347:6350   */\n      dup9\n        /* \"#utility.yul\":6332:6345   */\n      dup3\n        /* \"#utility.yul\":6288:6351   */\n      tag_155\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6281:6351   */\n      swap8\n      pop\n        /* \"#utility.yul\":6374:6434   */\n      tag_171\n        /* \"#utility.yul\":6427:6433   */\n      dup4\n        /* \"#utility.yul\":6374:6434   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6364:6434   */\n      swap3\n      pop\n        /* \"#utility.yul\":6220:6444   */\n      pop\n        /* \"#utility.yul\":6207:6208   */\n      0x01\n        /* \"#utility.yul\":6204:6205   */\n      dup2\n        /* \"#utility.yul\":6200:6209   */\n      add\n        /* \"#utility.yul\":6195:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6160:6444   */\n      jump(tag_167)\n    tag_169:\n        /* \"#utility.yul\":6164:6178   */\n      pop\n        /* \"#utility.yul\":6460:6463   */\n      dup6\n        /* \"#utility.yul\":6453:6463   */\n      swap4\n      pop\n        /* \"#utility.yul\":5861:6469   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5737:6469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6475:6584   */\n    tag_173:\n        /* \"#utility.yul\":6556:6577   */\n      tag_175\n        /* \"#utility.yul\":6571:6576   */\n      dup2\n        /* \"#utility.yul\":6556:6577   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6551:6554   */\n      dup3\n        /* \"#utility.yul\":6544:6578   */\n      mstore\n        /* \"#utility.yul\":6475:6584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6956   */\n    tag_177:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6753:6820   */\n      tag_179\n        /* \"#utility.yul\":6817:6819   */\n      0x2b\n        /* \"#utility.yul\":6812:6815   */\n      dup4\n        /* \"#utility.yul\":6753:6820   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6746:6820   */\n      swap2\n      pop\n        /* \"#utility.yul\":6829:6922   */\n      tag_181\n        /* \"#utility.yul\":6918:6921   */\n      dup3\n        /* \"#utility.yul\":6829:6922   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6947:6949   */\n      0x40\n        /* \"#utility.yul\":6942:6945   */\n      dup3\n        /* \"#utility.yul\":6938:6950   */\n      add\n        /* \"#utility.yul\":6931:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6962:7328   */\n    tag_183:\n        /* \"#utility.yul\":7104:7107   */\n      0x00\n        /* \"#utility.yul\":7125:7192   */\n      tag_185\n        /* \"#utility.yul\":7189:7191   */\n      0x29\n        /* \"#utility.yul\":7184:7187   */\n      dup4\n        /* \"#utility.yul\":7125:7192   */\n      tag_180\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7118:7192   */\n      swap2\n      pop\n        /* \"#utility.yul\":7201:7294   */\n      tag_186\n        /* \"#utility.yul\":7290:7293   */\n      dup3\n        /* \"#utility.yul\":7201:7294   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7319:7321   */\n      0x40\n        /* \"#utility.yul\":7314:7317   */\n      dup3\n        /* \"#utility.yul\":7310:7322   */\n      add\n        /* \"#utility.yul\":7303:7322   */\n      swap1\n      pop\n        /* \"#utility.yul\":6962:7328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7334:7700   */\n    tag_188:\n        /* \"#utility.yul\":7476:7479   */\n      0x00\n        /* \"#utility.yul\":7497:7564   */\n      tag_190\n        /* \"#utility.yul\":7561:7563   */\n      0x29\n        /* \"#utility.yul\":7556:7559   */\n      dup4\n        /* \"#utility.yul\":7497:7564   */\n      tag_180\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7490:7564   */\n      swap2\n      pop\n        /* \"#utility.yul\":7573:7666   */\n      tag_191\n        /* \"#utility.yul\":7662:7665   */\n      dup3\n        /* \"#utility.yul\":7573:7666   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7691:7693   */\n      0x40\n        /* \"#utility.yul\":7686:7689   */\n      dup3\n        /* \"#utility.yul\":7682:7694   */\n      add\n        /* \"#utility.yul\":7675:7694   */\n      swap1\n      pop\n        /* \"#utility.yul\":7334:7700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7706:7814   */\n    tag_158:\n        /* \"#utility.yul\":7783:7807   */\n      tag_194\n        /* \"#utility.yul\":7801:7806   */\n      dup2\n        /* \"#utility.yul\":7783:7807   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7778:7781   */\n      dup3\n        /* \"#utility.yul\":7771:7808   */\n      mstore\n        /* \"#utility.yul\":7706:7814   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7820:7938   */\n    tag_196:\n        /* \"#utility.yul\":7907:7931   */\n      tag_198\n        /* \"#utility.yul\":7925:7930   */\n      dup2\n        /* \"#utility.yul\":7907:7931   */\n      tag_195\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7902:7905   */\n      dup3\n        /* \"#utility.yul\":7895:7932   */\n      mstore\n        /* \"#utility.yul\":7820:7938   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7944:8317   */\n    tag_25:\n        /* \"#utility.yul\":8087:8091   */\n      0x00\n        /* \"#utility.yul\":8125:8127   */\n      0x20\n        /* \"#utility.yul\":8114:8123   */\n      dup3\n        /* \"#utility.yul\":8110:8128   */\n      add\n        /* \"#utility.yul\":8102:8128   */\n      swap1\n      pop\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8160:8161   */\n      0x00\n        /* \"#utility.yul\":8149:8158   */\n      dup4\n        /* \"#utility.yul\":8145:8162   */\n      add\n        /* \"#utility.yul\":8138:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8310   */\n      tag_200\n        /* \"#utility.yul\":8305:8309   */\n      dup2\n        /* \"#utility.yul\":8296:8302   */\n      dup5\n        /* \"#utility.yul\":8202:8310   */\n      tag_159\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8194:8310   */\n      swap1\n      pop\n        /* \"#utility.yul\":7944:8317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8323:8533   */\n    tag_19:\n        /* \"#utility.yul\":8410:8414   */\n      0x00\n        /* \"#utility.yul\":8448:8450   */\n      0x20\n        /* \"#utility.yul\":8437:8446   */\n      dup3\n        /* \"#utility.yul\":8433:8451   */\n      add\n        /* \"#utility.yul\":8425:8451   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8526   */\n      tag_202\n        /* \"#utility.yul\":8523:8524   */\n      0x00\n        /* \"#utility.yul\":8512:8521   */\n      dup4\n        /* \"#utility.yul\":8508:8525   */\n      add\n        /* \"#utility.yul\":8499:8505   */\n      dup5\n        /* \"#utility.yul\":8461:8526   */\n      tag_173\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8323:8533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8539:8958   */\n    tag_38:\n        /* \"#utility.yul\":8705:8709   */\n      0x00\n        /* \"#utility.yul\":8743:8745   */\n      0x20\n        /* \"#utility.yul\":8732:8741   */\n      dup3\n        /* \"#utility.yul\":8728:8746   */\n      add\n        /* \"#utility.yul\":8720:8746   */\n      swap1\n      pop\n        /* \"#utility.yul\":8792:8801   */\n      dup2\n        /* \"#utility.yul\":8786:8790   */\n      dup2\n        /* \"#utility.yul\":8782:8802   */\n      sub\n        /* \"#utility.yul\":8778:8779   */\n      0x00\n        /* \"#utility.yul\":8767:8776   */\n      dup4\n        /* \"#utility.yul\":8763:8780   */\n      add\n        /* \"#utility.yul\":8756:8803   */\n      mstore\n        /* \"#utility.yul\":8820:8951   */\n      tag_204\n        /* \"#utility.yul\":8946:8950   */\n      dup2\n        /* \"#utility.yul\":8820:8951   */\n      tag_177\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8812:8951   */\n      swap1\n      pop\n        /* \"#utility.yul\":8539:8958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8964:9383   */\n    tag_71:\n        /* \"#utility.yul\":9130:9134   */\n      0x00\n        /* \"#utility.yul\":9168:9170   */\n      0x20\n        /* \"#utility.yul\":9157:9166   */\n      dup3\n        /* \"#utility.yul\":9153:9171   */\n      add\n        /* \"#utility.yul\":9145:9171   */\n      swap1\n      pop\n        /* \"#utility.yul\":9217:9226   */\n      dup2\n        /* \"#utility.yul\":9211:9215   */\n      dup2\n        /* \"#utility.yul\":9207:9227   */\n      sub\n        /* \"#utility.yul\":9203:9204   */\n      0x00\n        /* \"#utility.yul\":9192:9201   */\n      dup4\n        /* \"#utility.yul\":9188:9205   */\n      add\n        /* \"#utility.yul\":9181:9228   */\n      mstore\n        /* \"#utility.yul\":9245:9376   */\n      tag_206\n        /* \"#utility.yul\":9371:9375   */\n      dup2\n        /* \"#utility.yul\":9245:9376   */\n      tag_183\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9237:9376   */\n      swap1\n      pop\n        /* \"#utility.yul\":8964:9383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9389:9808   */\n    tag_43:\n        /* \"#utility.yul\":9555:9559   */\n      0x00\n        /* \"#utility.yul\":9593:9595   */\n      0x20\n        /* \"#utility.yul\":9582:9591   */\n      dup3\n        /* \"#utility.yul\":9578:9596   */\n      add\n        /* \"#utility.yul\":9570:9596   */\n      swap1\n      pop\n        /* \"#utility.yul\":9642:9651   */\n      dup2\n        /* \"#utility.yul\":9636:9640   */\n      dup2\n        /* \"#utility.yul\":9632:9652   */\n      sub\n        /* \"#utility.yul\":9628:9629   */\n      0x00\n        /* \"#utility.yul\":9617:9626   */\n      dup4\n        /* \"#utility.yul\":9613:9630   */\n      add\n        /* \"#utility.yul\":9606:9653   */\n      mstore\n        /* \"#utility.yul\":9670:9801   */\n      tag_208\n        /* \"#utility.yul\":9796:9800   */\n      dup2\n        /* \"#utility.yul\":9670:9801   */\n      tag_188\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9662:9801   */\n      swap1\n      pop\n        /* \"#utility.yul\":9389:9808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9814:10036   */\n    tag_13:\n        /* \"#utility.yul\":9907:9911   */\n      0x00\n        /* \"#utility.yul\":9945:9947   */\n      0x20\n        /* \"#utility.yul\":9934:9943   */\n      dup3\n        /* \"#utility.yul\":9930:9948   */\n      add\n        /* \"#utility.yul\":9922:9948   */\n      swap1\n      pop\n        /* \"#utility.yul\":9958:10029   */\n      tag_210\n        /* \"#utility.yul\":10026:10027   */\n      0x00\n        /* \"#utility.yul\":10015:10024   */\n      dup4\n        /* \"#utility.yul\":10011:10028   */\n      add\n        /* \"#utility.yul\":10002:10008   */\n      dup5\n        /* \"#utility.yul\":9958:10029   */\n      tag_196\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":9814:10036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10042:10171   */\n    tag_79:\n        /* \"#utility.yul\":10076:10082   */\n      0x00\n        /* \"#utility.yul\":10103:10123   */\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10093:10123   */\n      swap1\n      pop\n        /* \"#utility.yul\":10132:10165   */\n      tag_214\n        /* \"#utility.yul\":10160:10164   */\n      dup3\n        /* \"#utility.yul\":10152:10158   */\n      dup3\n        /* \"#utility.yul\":10132:10165   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":10042:10171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10177:10252   */\n    tag_213:\n        /* \"#utility.yul\":10210:10216   */\n      0x00\n        /* \"#utility.yul\":10243:10245   */\n      0x40\n        /* \"#utility.yul\":10237:10246   */\n      mload\n        /* \"#utility.yul\":10227:10246   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10252   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10258:10569   */\n    tag_78:\n        /* \"#utility.yul\":10335:10339   */\n      0x00\n        /* \"#utility.yul\":10425:10443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10417:10423   */\n      dup3\n        /* \"#utility.yul\":10414:10444   */\n      gt\n        /* \"#utility.yul\":10411:10467   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":10447:10465   */\n      tag_219\n      tag_46\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10411:10467   */\n    tag_218:\n        /* \"#utility.yul\":10497:10501   */\n      0x20\n        /* \"#utility.yul\":10489:10495   */\n      dup3\n        /* \"#utility.yul\":10485:10502   */\n      mul\n        /* \"#utility.yul\":10477:10502   */\n      swap1\n      pop\n        /* \"#utility.yul\":10557:10561   */\n      0x20\n        /* \"#utility.yul\":10551:10555   */\n      dup2\n        /* \"#utility.yul\":10547:10562   */\n      add\n        /* \"#utility.yul\":10539:10562   */\n      swap1\n      pop\n        /* \"#utility.yul\":10258:10569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10575:10886   */\n    tag_92:\n        /* \"#utility.yul\":10652:10656   */\n      0x00\n        /* \"#utility.yul\":10742:10760   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10734:10740   */\n      dup3\n        /* \"#utility.yul\":10731:10761   */\n      gt\n        /* \"#utility.yul\":10728:10784   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":10764:10782   */\n      tag_222\n      tag_46\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10728:10784   */\n    tag_221:\n        /* \"#utility.yul\":10814:10818   */\n      0x20\n        /* \"#utility.yul\":10806:10812   */\n      dup3\n        /* \"#utility.yul\":10802:10819   */\n      mul\n        /* \"#utility.yul\":10794:10819   */\n      swap1\n      pop\n        /* \"#utility.yul\":10874:10878   */\n      0x20\n        /* \"#utility.yul\":10868:10872   */\n      dup2\n        /* \"#utility.yul\":10864:10879   */\n      add\n        /* \"#utility.yul\":10856:10879   */\n      swap1\n      pop\n        /* \"#utility.yul\":10575:10886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10892:11024   */\n    tag_166:\n        /* \"#utility.yul\":10959:10963   */\n      0x00\n        /* \"#utility.yul\":10982:10985   */\n      dup2\n        /* \"#utility.yul\":10974:10985   */\n      swap1\n      pop\n        /* \"#utility.yul\":11012:11016   */\n      0x20\n        /* \"#utility.yul\":11007:11010   */\n      dup3\n        /* \"#utility.yul\":11003:11017   */\n      add\n        /* \"#utility.yul\":10995:11017   */\n      swap1\n      pop\n        /* \"#utility.yul\":10892:11024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11030:11144   */\n    tag_162:\n        /* \"#utility.yul\":11097:11103   */\n      0x00\n        /* \"#utility.yul\":11131:11136   */\n      dup2\n        /* \"#utility.yul\":11125:11137   */\n      mload\n        /* \"#utility.yul\":11115:11137   */\n      swap1\n      pop\n        /* \"#utility.yul\":11030:11144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11150:11263   */\n    tag_172:\n        /* \"#utility.yul\":11220:11224   */\n      0x00\n        /* \"#utility.yul\":11252:11256   */\n      0x20\n        /* \"#utility.yul\":11247:11250   */\n      dup3\n        /* \"#utility.yul\":11243:11257   */\n      add\n        /* \"#utility.yul\":11235:11257   */\n      swap1\n      pop\n        /* \"#utility.yul\":11150:11263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11269:11453   */\n    tag_164:\n        /* \"#utility.yul\":11368:11379   */\n      0x00\n        /* \"#utility.yul\":11402:11408   */\n      dup3\n        /* \"#utility.yul\":11397:11400   */\n      dup3\n        /* \"#utility.yul\":11390:11409   */\n      mstore\n        /* \"#utility.yul\":11442:11446   */\n      0x20\n        /* \"#utility.yul\":11437:11440   */\n      dup3\n        /* \"#utility.yul\":11433:11447   */\n      add\n        /* \"#utility.yul\":11418:11447   */\n      swap1\n      pop\n        /* \"#utility.yul\":11269:11453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11459:11628   */\n    tag_180:\n        /* \"#utility.yul\":11543:11554   */\n      0x00\n        /* \"#utility.yul\":11577:11583   */\n      dup3\n        /* \"#utility.yul\":11572:11575   */\n      dup3\n        /* \"#utility.yul\":11565:11584   */\n      mstore\n        /* \"#utility.yul\":11617:11621   */\n      0x20\n        /* \"#utility.yul\":11612:11615   */\n      dup3\n        /* \"#utility.yul\":11608:11622   */\n      add\n        /* \"#utility.yul\":11593:11622   */\n      swap1\n      pop\n        /* \"#utility.yul\":11459:11628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11634:11730   */\n    tag_228:\n        /* \"#utility.yul\":11671:11678   */\n      0x00\n        /* \"#utility.yul\":11700:11724   */\n      tag_230\n        /* \"#utility.yul\":11718:11723   */\n      dup3\n        /* \"#utility.yul\":11700:11724   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":11689:11724   */\n      swap1\n      pop\n        /* \"#utility.yul\":11634:11730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11736:11826   */\n    tag_176:\n        /* \"#utility.yul\":11770:11777   */\n      0x00\n        /* \"#utility.yul\":11813:11818   */\n      dup2\n        /* \"#utility.yul\":11806:11819   */\n      iszero\n        /* \"#utility.yul\":11799:11820   */\n      iszero\n        /* \"#utility.yul\":11788:11820   */\n      swap1\n      pop\n        /* \"#utility.yul\":11736:11826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11832:11981   */\n    tag_233:\n        /* \"#utility.yul\":11868:11875   */\n      0x00\n        /* \"#utility.yul\":11908:11974   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11901:11906   */\n      dup3\n        /* \"#utility.yul\":11897:11975   */\n      and\n        /* \"#utility.yul\":11886:11975   */\n      swap1\n      pop\n        /* \"#utility.yul\":11832:11981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11987:12113   */\n    tag_231:\n        /* \"#utility.yul\":12024:12031   */\n      0x00\n        /* \"#utility.yul\":12064:12106   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12057:12062   */\n      dup3\n        /* \"#utility.yul\":12053:12107   */\n      and\n        /* \"#utility.yul\":12042:12107   */\n      swap1\n      pop\n        /* \"#utility.yul\":11987:12113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12119:12196   */\n    tag_195:\n        /* \"#utility.yul\":12156:12163   */\n      0x00\n        /* \"#utility.yul\":12185:12190   */\n      dup2\n        /* \"#utility.yul\":12174:12190   */\n      swap1\n      pop\n        /* \"#utility.yul\":12119:12196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12202:12483   */\n    tag_215:\n        /* \"#utility.yul\":12285:12312   */\n      tag_238\n        /* \"#utility.yul\":12307:12311   */\n      dup3\n        /* \"#utility.yul\":12285:12312   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12277:12283   */\n      dup2\n        /* \"#utility.yul\":12273:12313   */\n      add\n        /* \"#utility.yul\":12415:12421   */\n      dup2\n        /* \"#utility.yul\":12403:12413   */\n      dup2\n        /* \"#utility.yul\":12400:12422   */\n      lt\n        /* \"#utility.yul\":12379:12397   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12367:12377   */\n      dup3\n        /* \"#utility.yul\":12364:12398   */\n      gt\n        /* \"#utility.yul\":12361:12423   */\n      or\n        /* \"#utility.yul\":12358:12446   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":12426:12444   */\n      tag_241\n      tag_46\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":12358:12446   */\n    tag_240:\n        /* \"#utility.yul\":12466:12476   */\n      dup1\n        /* \"#utility.yul\":12462:12464   */\n      0x40\n        /* \"#utility.yul\":12455:12477   */\n      mstore\n        /* \"#utility.yul\":12245:12483   */\n      pop\n        /* \"#utility.yul\":12202:12483   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12489:12722   */\n    tag_60:\n        /* \"#utility.yul\":12528:12531   */\n      0x00\n        /* \"#utility.yul\":12551:12575   */\n      tag_243\n        /* \"#utility.yul\":12569:12574   */\n      dup3\n        /* \"#utility.yul\":12551:12575   */\n      tag_195\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":12542:12575   */\n      swap2\n      pop\n        /* \"#utility.yul\":12597:12663   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12590:12595   */\n      dup3\n        /* \"#utility.yul\":12587:12664   */\n      eq\n        /* \"#utility.yul\":12584:12687   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":12667:12685   */\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":12584:12687   */\n    tag_244:\n        /* \"#utility.yul\":12714:12715   */\n      0x01\n        /* \"#utility.yul\":12707:12712   */\n      dup3\n        /* \"#utility.yul\":12703:12716   */\n      add\n        /* \"#utility.yul\":12696:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12489:12722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12728:12908   */\n    tag_246:\n        /* \"#utility.yul\":12776:12853   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12773:12774   */\n      0x00\n        /* \"#utility.yul\":12766:12854   */\n      mstore\n        /* \"#utility.yul\":12873:12877   */\n      0x11\n        /* \"#utility.yul\":12870:12871   */\n      0x04\n        /* \"#utility.yul\":12863:12878   */\n      mstore\n        /* \"#utility.yul\":12897:12901   */\n      0x24\n        /* \"#utility.yul\":12894:12895   */\n      0x00\n        /* \"#utility.yul\":12887:12902   */\n      revert\n        /* \"#utility.yul\":12914:13094   */\n    tag_54:\n        /* \"#utility.yul\":12962:13039   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12959:12960   */\n      0x00\n        /* \"#utility.yul\":12952:13040   */\n      mstore\n        /* \"#utility.yul\":13059:13063   */\n      0x32\n        /* \"#utility.yul\":13056:13057   */\n      0x04\n        /* \"#utility.yul\":13049:13064   */\n      mstore\n        /* \"#utility.yul\":13083:13087   */\n      0x24\n        /* \"#utility.yul\":13080:13081   */\n      0x00\n        /* \"#utility.yul\":13073:13088   */\n      revert\n        /* \"#utility.yul\":13100:13280   */\n    tag_46:\n        /* \"#utility.yul\":13148:13225   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13145:13146   */\n      0x00\n        /* \"#utility.yul\":13138:13226   */\n      mstore\n        /* \"#utility.yul\":13245:13249   */\n      0x41\n        /* \"#utility.yul\":13242:13243   */\n      0x04\n        /* \"#utility.yul\":13235:13250   */\n      mstore\n        /* \"#utility.yul\":13269:13273   */\n      0x24\n        /* \"#utility.yul\":13266:13267   */\n      0x00\n        /* \"#utility.yul\":13259:13274   */\n      revert\n        /* \"#utility.yul\":13286:13403   */\n    tag_107:\n        /* \"#utility.yul\":13395:13396   */\n      0x00\n        /* \"#utility.yul\":13392:13393   */\n      dup1\n        /* \"#utility.yul\":13385:13397   */\n      revert\n        /* \"#utility.yul\":13409:13526   */\n    tag_82:\n        /* \"#utility.yul\":13518:13519   */\n      0x00\n        /* \"#utility.yul\":13515:13516   */\n      dup1\n        /* \"#utility.yul\":13508:13520   */\n      revert\n        /* \"#utility.yul\":13532:13649   */\n    tag_146:\n        /* \"#utility.yul\":13641:13642   */\n      0x00\n        /* \"#utility.yul\":13638:13639   */\n      dup1\n        /* \"#utility.yul\":13631:13643   */\n      revert\n        /* \"#utility.yul\":13655:13772   */\n    tag_128:\n        /* \"#utility.yul\":13764:13765   */\n      0x00\n        /* \"#utility.yul\":13761:13762   */\n      dup1\n        /* \"#utility.yul\":13754:13766   */\n      revert\n        /* \"#utility.yul\":13778:13880   */\n    tag_239:\n        /* \"#utility.yul\":13819:13825   */\n      0x00\n        /* \"#utility.yul\":13870:13872   */\n      0x1f\n        /* \"#utility.yul\":13866:13873   */\n      not\n        /* \"#utility.yul\":13861:13863   */\n      0x1f\n        /* \"#utility.yul\":13854:13859   */\n      dup4\n        /* \"#utility.yul\":13850:13864   */\n      add\n        /* \"#utility.yul\":13846:13874   */\n      and\n        /* \"#utility.yul\":13836:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13778:13880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13886:14116   */\n    tag_182:\n        /* \"#utility.yul\":14026:14060   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":14022:14023   */\n      0x00\n        /* \"#utility.yul\":14014:14020   */\n      dup3\n        /* \"#utility.yul\":14010:14024   */\n      add\n        /* \"#utility.yul\":14003:14061   */\n      mstore\n        /* \"#utility.yul\":14095:14108   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14090:14092   */\n      0x20\n        /* \"#utility.yul\":14082:14088   */\n      dup3\n        /* \"#utility.yul\":14078:14093   */\n      add\n        /* \"#utility.yul\":14071:14109   */\n      mstore\n        /* \"#utility.yul\":13886:14116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14122:14350   */\n    tag_187:\n        /* \"#utility.yul\":14262:14296   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":14258:14259   */\n      0x00\n        /* \"#utility.yul\":14250:14256   */\n      dup3\n        /* \"#utility.yul\":14246:14260   */\n      add\n        /* \"#utility.yul\":14239:14297   */\n      mstore\n        /* \"#utility.yul\":14331:14342   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14326:14328   */\n      0x20\n        /* \"#utility.yul\":14318:14324   */\n      dup3\n        /* \"#utility.yul\":14314:14329   */\n      add\n        /* \"#utility.yul\":14307:14343   */\n      mstore\n        /* \"#utility.yul\":14122:14350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14356:14584   */\n    tag_192:\n        /* \"#utility.yul\":14496:14530   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":14492:14493   */\n      0x00\n        /* \"#utility.yul\":14484:14490   */\n      dup3\n        /* \"#utility.yul\":14480:14494   */\n      add\n        /* \"#utility.yul\":14473:14531   */\n      mstore\n        /* \"#utility.yul\":14565:14576   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14560:14562   */\n      0x20\n        /* \"#utility.yul\":14552:14558   */\n      dup3\n        /* \"#utility.yul\":14548:14563   */\n      add\n        /* \"#utility.yul\":14541:14577   */\n      mstore\n        /* \"#utility.yul\":14356:14584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14590:14712   */\n    tag_102:\n        /* \"#utility.yul\":14663:14687   */\n      tag_259\n        /* \"#utility.yul\":14681:14686   */\n      dup2\n        /* \"#utility.yul\":14663:14687   */\n      tag_228\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":14656:14661   */\n      dup2\n        /* \"#utility.yul\":14653:14688   */\n      eq\n        /* \"#utility.yul\":14643:14706   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":14702:14703   */\n      0x00\n        /* \"#utility.yul\":14699:14700   */\n      dup1\n        /* \"#utility.yul\":14692:14704   */\n      revert\n        /* \"#utility.yul\":14643:14706   */\n    tag_260:\n        /* \"#utility.yul\":14590:14712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:14834   */\n    tag_117:\n        /* \"#utility.yul\":14788:14809   */\n      tag_262\n        /* \"#utility.yul\":14803:14808   */\n      dup2\n        /* \"#utility.yul\":14788:14809   */\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":14781:14786   */\n      dup2\n        /* \"#utility.yul\":14778:14810   */\n      eq\n        /* \"#utility.yul\":14768:14828   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":14824:14825   */\n      0x00\n        /* \"#utility.yul\":14821:14822   */\n      dup1\n        /* \"#utility.yul\":14814:14826   */\n      revert\n        /* \"#utility.yul\":14768:14828   */\n    tag_263:\n        /* \"#utility.yul\":14718:14834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14840:14960   */\n    tag_121:\n        /* \"#utility.yul\":14912:14935   */\n      tag_265\n        /* \"#utility.yul\":14929:14934   */\n      dup2\n        /* \"#utility.yul\":14912:14935   */\n      tag_233\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":14905:14910   */\n      dup2\n        /* \"#utility.yul\":14902:14936   */\n      eq\n        /* \"#utility.yul\":14892:14954   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":14950:14951   */\n      0x00\n        /* \"#utility.yul\":14947:14948   */\n      dup1\n        /* \"#utility.yul\":14940:14952   */\n      revert\n        /* \"#utility.yul\":14892:14954   */\n    tag_266:\n        /* \"#utility.yul\":14840:14960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14966:15088   */\n    tag_124:\n        /* \"#utility.yul\":15039:15063   */\n      tag_268\n        /* \"#utility.yul\":15057:15062   */\n      dup2\n        /* \"#utility.yul\":15039:15063   */\n      tag_195\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":15032:15037   */\n      dup2\n        /* \"#utility.yul\":15029:15064   */\n      eq\n        /* \"#utility.yul\":15019:15082   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":15078:15079   */\n      0x00\n        /* \"#utility.yul\":15075:15076   */\n      dup1\n        /* \"#utility.yul\":15068:15080   */\n      revert\n        /* \"#utility.yul\":15019:15082   */\n    tag_269:\n        /* \"#utility.yul\":14966:15088   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610e41806100206000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b57806301ffc9a71461008b5780634e1273f4146100bb578063a22cb465146100eb578063e985e9c514610107575b600080fd5b610075600480360381019061007091906107b2565b610137565b6040516100829190610a40565b60405180910390f35b6100a560048036038101906100a0919061086a565b610200565b6040516100b291906109c5565b60405180910390f35b6100d560048036038101906100d091906107f2565b61026a565b6040516100e291906109a3565b60405180910390f35b61010560048036038101906101009190610772565b610383565b005b610121600480360381019061011c9190610732565b610399565b60405161012e91906109c5565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019f906109e0565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606081518351146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610a20565b60405180910390fd5b6000835167ffffffffffffffff8111156102cd576102cc610c6e565b5b6040519080825280602002602001820160405280156102fb5781602001602082028036833780820191505090505b50905060005b8451811015610378576103488582815181106103205761031f610c3f565b5b602002602001015185838151811061033b5761033a610c3f565b5b6020026020010151610137565b82828151811061035b5761035a610c3f565b5b6020026020010181815250508061037190610bc7565b9050610301565b508091505092915050565b61039561038e61042d565b8383610435565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610a00565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161059591906109c5565b60405180910390a3505050565b60006105b56105b084610a80565b610a5b565b905080838252602082019050828560208602820111156105d8576105d7610ca2565b5b60005b8581101561060857816105ee8882610682565b8452602084019350602083019250506001810190506105db565b5050509392505050565b600061062561062084610aac565b610a5b565b9050808382526020820190508285602086028201111561064857610647610ca2565b5b60005b85811015610678578161065e888261071d565b84526020840193506020830192505060018101905061064b565b5050509392505050565b60008135905061069181610daf565b92915050565b600082601f8301126106ac576106ab610c9d565b5b81356106bc8482602086016105a2565b91505092915050565b600082601f8301126106da576106d9610c9d565b5b81356106ea848260208601610612565b91505092915050565b60008135905061070281610dc6565b92915050565b60008135905061071781610ddd565b92915050565b60008135905061072c81610df4565b92915050565b6000806040838503121561074957610748610cac565b5b600061075785828601610682565b925050602061076885828601610682565b9150509250929050565b6000806040838503121561078957610788610cac565b5b600061079785828601610682565b92505060206107a8858286016106f3565b9150509250929050565b600080604083850312156107c9576107c8610cac565b5b60006107d785828601610682565b92505060206107e88582860161071d565b9150509250929050565b6000806040838503121561080957610808610cac565b5b600083013567ffffffffffffffff81111561082757610826610ca7565b5b61083385828601610697565b925050602083013567ffffffffffffffff81111561085457610853610ca7565b5b610860858286016106c5565b9150509250929050565b6000602082840312156108805761087f610cac565b5b600061088e84828501610708565b91505092915050565b60006108a38383610985565b60208301905092915050565b60006108ba82610ae8565b6108c48185610b00565b93506108cf83610ad8565b8060005b838110156109005781516108e78882610897565b97506108f283610af3565b9250506001810190506108d3565b5085935050505092915050565b61091681610b34565b82525050565b6000610929602b83610b11565b915061093482610cc2565b604082019050919050565b600061094c602983610b11565b915061095782610d11565b604082019050919050565b600061096f602983610b11565b915061097a82610d60565b604082019050919050565b61098e81610b8c565b82525050565b61099d81610b8c565b82525050565b600060208201905081810360008301526109bd81846108af565b905092915050565b60006020820190506109da600083018461090d565b92915050565b600060208201905081810360008301526109f98161091c565b9050919050565b60006020820190508181036000830152610a198161093f565b9050919050565b60006020820190508181036000830152610a3981610962565b9050919050565b6000602082019050610a556000830184610994565b92915050565b6000610a65610a76565b9050610a718282610b96565b919050565b6000604051905090565b600067ffffffffffffffff821115610a9b57610a9a610c6e565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ac757610ac6610c6e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b2d82610b6c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b9f82610cb1565b810181811067ffffffffffffffff82111715610bbe57610bbd610c6e565b5b80604052505050565b6000610bd282610b8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0557610c04610c10565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b610db881610b22565b8114610dc357600080fd5b50565b610dcf81610b34565b8114610dda57600080fd5b50565b610de681610b40565b8114610df157600080fd5b50565b610dfd81610b8c565b8114610e0857600080fd5b5056fea2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE41 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH2 0x348 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x33B JUMPI PUSH2 0x33A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x137 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x371 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x301 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x38E PUSH2 0x42D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x5B0 DUP5 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP2 PUSH2 0x5EE DUP9 DUP3 PUSH2 0x682 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x620 DUP5 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x678 JUMPI DUP2 PUSH2 0x65E DUP9 DUP3 PUSH2 0x71D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x64B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x691 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DA JUMPI PUSH2 0x6D9 PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x612 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x702 DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x717 DUP2 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72C DUP2 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH2 0x748 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x757 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x768 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x797 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7A8 DUP6 DUP3 DUP7 ADD PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E8 DUP6 DUP3 DUP7 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x833 DUP6 DUP3 DUP7 ADD PUSH2 0x697 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x860 DUP6 DUP3 DUP7 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x880 JUMPI PUSH2 0x87F PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x88E DUP5 DUP3 DUP6 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP4 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP3 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x8C4 DUP2 DUP6 PUSH2 0xB00 JUMP JUMPDEST SWAP4 POP PUSH2 0x8CF DUP4 PUSH2 0xAD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x900 JUMPI DUP2 MLOAD PUSH2 0x8E7 DUP9 DUP3 PUSH2 0x897 JUMP JUMPDEST SWAP8 POP PUSH2 0x8F2 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8D3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x929 PUSH1 0x2B DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x934 DUP3 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94C PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x957 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96F PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x97A DUP3 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98E DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x99D DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9BD DUP2 DUP5 PUSH2 0x8AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA19 DUP2 PUSH2 0x93F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH2 0xA71 DUP3 DUP3 PUSH2 0xB96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D DUP3 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9F DUP3 PUSH2 0xCB1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBBE JUMPI PUSH2 0xBBD PUSH2 0xC6E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 DUP3 PUSH2 0xB8C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xB22 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xB40 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xE08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x4A SLOAD 0xEE 0xA6 0xDC 0xC4 SWAP2 0x4E 0x4D RETURNDATASIZE 0x2B PUSH7 0x8CDB5948040853 0xE5 REVERT 0xCE SWAP15 0xC0 0x2B PUSH13 0x4E5451933564736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "463:10649:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_308": {
									"entryPoint": 1069,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setApprovalForAll_998": {
									"entryPoint": 1077,
									"id": 998,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_446": {
									"entryPoint": 618,
									"id": 446,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_382": {
									"entryPoint": 311,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_481": {
									"entryPoint": 921,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setApprovalForAll_463": {
									"entryPoint": 899,
									"id": 463,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1266": {
									"entryPoint": 512,
									"id": 1266,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15091:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:11",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:11"
															},
															"nodeType": "YulIf",
															"src": "350:143:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:11",
														"type": ""
													}
												],
												"src": "24:722:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:11",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:11"
															},
															"nodeType": "YulIf",
															"src": "1095:143:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:11",
														"type": ""
													}
												],
												"src": "769:722:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1549:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1559:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1568:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1559:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1624:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1597:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1527:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1535:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1543:5:11",
														"type": ""
													}
												],
												"src": "1497:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1736:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1787:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1787:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1787:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1764:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1772:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1760:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1760:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1779:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1756:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:35:11"
															},
															"nodeType": "YulIf",
															"src": "1746:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1877:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1891:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1881:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1920:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2004:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1929:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1920:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1714:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1722:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1730:5:11",
														"type": ""
													}
												],
												"src": "1659:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2178:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2180:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2180:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2180:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2157:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2165:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2153:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2172:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:35:11"
															},
															"nodeType": "YulIf",
															"src": "2139:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2270:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2274:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2313:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2397:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2404:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2322:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2313:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2107:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2115:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2123:5:11",
														"type": ""
													}
												],
												"src": "2052:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2496:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2487:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2549:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2525:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2525:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2525:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2455:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2463:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2471:5:11",
														"type": ""
													}
												],
												"src": "2428:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2618:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2628:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2650:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2637:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2628:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2666:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2666:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2596:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2604:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2612:5:11",
														"type": ""
													}
												],
												"src": "2567:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2762:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2772:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2794:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2781:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2772:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2837:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2810:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2810:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2740:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2748:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2756:5:11",
														"type": ""
													}
												],
												"src": "2710:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2984:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2986:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2986:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2986:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2959:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2968:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2955:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2980:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:32:11"
															},
															"nodeType": "YulIf",
															"src": "2948:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3077:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3092:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3096:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3121:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3131:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3204:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3219:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3223:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2900:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2911:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2923:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2931:6:11",
														"type": ""
													}
												],
												"src": "2855:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3415:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3461:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3463:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3463:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3463:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3436:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3445:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:32:11"
															},
															"nodeType": "YulIf",
															"src": "3425:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3554:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3569:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3583:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3573:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3598:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3633:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3644:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3629:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3629:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3653:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3608:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3598:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3681:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3696:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3700:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3726:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3758:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3769:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3754:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3754:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3736:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3726:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3377:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3388:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3400:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3408:6:11",
														"type": ""
													}
												],
												"src": "3335:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3892:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3938:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3940:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3940:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3940:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3913:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3922:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3909:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3934:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:32:11"
															},
															"nodeType": "YulIf",
															"src": "3902:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4031:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4046:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4050:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4075:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4110:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4121:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4106:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4106:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4085:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4085:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4075:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4158:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4173:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4187:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4177:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4203:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4238:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4249:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4234:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4234:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4258:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4213:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4203:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3854:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3865:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3877:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3885:6:11",
														"type": ""
													}
												],
												"src": "3809:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4422:761:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4468:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4470:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4470:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4470:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4452:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4439:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:32:11"
															},
															"nodeType": "YulIf",
															"src": "4432:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4561:302:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4576:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4607:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4618:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4603:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4603:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4590:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4590:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4580:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4668:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4670:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4670:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4670:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4640:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4648:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4637:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4637:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "4634:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4765:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4825:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4836:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4821:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4821:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4845:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4775:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4775:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4765:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4873:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4919:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4930:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4915:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4915:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4902:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4902:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4981:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4983:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4983:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4983:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4953:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4961:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4950:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "4947:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5078:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5138:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5149:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5134:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5134:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5158:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5088:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5088:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5078:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4384:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4395:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4407:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4415:6:11",
														"type": ""
													}
												],
												"src": "4289:894:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:11"
															},
															"nodeType": "YulIf",
															"src": "5264:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5471:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5482:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5467:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5467:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5491:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5447:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:11",
														"type": ""
													}
												],
												"src": "5189:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5602:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5646:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5654:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5612:33:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5612:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5612:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5667:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5685:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5690:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5681:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5681:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "5667:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5575:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "5591:10:11",
														"type": ""
													}
												],
												"src": "5522:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5861:608:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5871:68:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5933:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5885:47:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:54:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5875:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6029:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6034:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5955:73:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6050:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6115:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6065:49:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:56:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "6054:7:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6130:21:11",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "6144:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6134:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6220:224:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6234:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6261:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6255:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6255:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "6238:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6281:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "6332:13:11"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6347:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6288:43:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6288:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6281:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6364:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6427:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "6374:52:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6374:60:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6182:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6185:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6179:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6193:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6195:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6204:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6207:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6200:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6200:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6195:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6164:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6166:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6175:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "6170:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6160:284:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6460:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5840:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5847:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5856:3:11",
														"type": ""
													}
												],
												"src": "5737:732:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6534:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6551:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6571:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6556:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6544:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6544:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6522:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6529:3:11",
														"type": ""
													}
												],
												"src": "6475:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6746:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6817:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6753:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6918:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "6829:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6829:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6931:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6942:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6938:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6724:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6732:3:11",
														"type": ""
													}
												],
												"src": "6590:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7108:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7118:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7189:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7125:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7118:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7290:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "7201:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7201:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7201:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7303:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7314:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7319:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7096:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7104:3:11",
														"type": ""
													}
												],
												"src": "6962:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7480:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7490:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7497:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7497:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7662:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "7573:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7573:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7675:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7686:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7691:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7682:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7468:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7476:3:11",
														"type": ""
													}
												],
												"src": "7334:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7761:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7778:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7801:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7783:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7783:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7771:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7749:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7756:3:11",
														"type": ""
													}
												],
												"src": "7706:108:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7885:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7902:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7925:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7907:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7907:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7895:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7873:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7880:3:11",
														"type": ""
													}
												],
												"src": "7820:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8092:225:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8102:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8114:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8125:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8110:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8102:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8160:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8145:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8145:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8194:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8296:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8305:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8202:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8064:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8076:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8087:4:11",
														"type": ""
													}
												],
												"src": "7944:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8415:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8425:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8437:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8433:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8425:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8499:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8512:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8523:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8508:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8461:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8461:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8387:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8399:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8410:4:11",
														"type": ""
													}
												],
												"src": "8323:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8710:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8720:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8732:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8743:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8728:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8728:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8720:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8767:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8778:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8763:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8786:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8792:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8782:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8756:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8756:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8756:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8812:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8946:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8820:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8820:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8812:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8690:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8705:4:11",
														"type": ""
													}
												],
												"src": "8539:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9135:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9145:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9157:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9168:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9145:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9192:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9203:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9188:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9211:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9217:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9207:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9181:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9181:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9237:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9371:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9245:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9245:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9237:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9115:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9130:4:11",
														"type": ""
													}
												],
												"src": "8964:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9560:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9570:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9582:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9593:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9578:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9578:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9570:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9617:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9628:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9613:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9613:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9636:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9642:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9606:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9606:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9606:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9662:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9796:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9670:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9662:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9540:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9555:4:11",
														"type": ""
													}
												],
												"src": "9389:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9912:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9922:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9934:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9945:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9930:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9922:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10002:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10015:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10026:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10011:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10011:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9958:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9958:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9884:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9896:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9907:4:11",
														"type": ""
													}
												],
												"src": "9814:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10083:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10093:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "10103:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10152:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10160:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "10132:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10132:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10067:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10076:6:11",
														"type": ""
													}
												],
												"src": "10042:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10217:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10243:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10237:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10237:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10210:6:11",
														"type": ""
													}
												],
												"src": "10177:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10340:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10445:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10447:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10447:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10447:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10417:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10425:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10414:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:30:11"
															},
															"nodeType": "YulIf",
															"src": "10411:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10477:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10489:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10497:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10485:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10477:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10539:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10551:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10557:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10547:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10539:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10324:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10335:4:11",
														"type": ""
													}
												],
												"src": "10258:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10657:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10762:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10764:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10764:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10764:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10734:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10742:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10731:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10731:30:11"
															},
															"nodeType": "YulIf",
															"src": "10728:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10794:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10814:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10802:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10802:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10794:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10856:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10868:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10874:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10864:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10856:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10641:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10652:4:11",
														"type": ""
													}
												],
												"src": "10575:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10964:60:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10974:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "10982:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10974:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10995:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11007:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11012:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10995:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10951:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10959:4:11",
														"type": ""
													}
												],
												"src": "10892:132:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11104:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11115:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11131:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11125:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11115:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11087:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11097:6:11",
														"type": ""
													}
												],
												"src": "11030:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11225:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11235:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11247:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11252:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11243:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "11235:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11212:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "11220:4:11",
														"type": ""
													}
												],
												"src": "11150:113:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11380:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11397:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11402:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11390:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11390:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11390:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11418:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11437:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11442:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11433:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11433:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11418:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11352:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11357:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11368:11:11",
														"type": ""
													}
												],
												"src": "11269:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11555:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11572:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11577:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11565:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11565:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11593:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11612:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11617:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11608:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11593:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11527:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11532:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11543:11:11",
														"type": ""
													}
												],
												"src": "11459:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11679:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11689:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11718:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11700:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11689:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11661:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11671:7:11",
														"type": ""
													}
												],
												"src": "11634:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11778:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11788:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11813:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11806:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11806:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11788:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11760:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11770:7:11",
														"type": ""
													}
												],
												"src": "11736:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11876:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11886:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11901:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11908:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11897:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11886:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11858:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11868:7:11",
														"type": ""
													}
												],
												"src": "11832:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12042:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12057:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12042:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12014:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12024:7:11",
														"type": ""
													}
												],
												"src": "11987:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12164:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12174:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12185:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12174:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12146:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12156:7:11",
														"type": ""
													}
												],
												"src": "12119:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12245:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12255:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12277:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12307:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12285:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12285:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12273:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12259:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12424:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12426:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12426:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12426:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12367:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12379:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12364:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12364:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12403:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12415:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12400:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12400:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12361:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12361:62:11"
															},
															"nodeType": "YulIf",
															"src": "12358:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12466:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12231:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12239:4:11",
														"type": ""
													}
												],
												"src": "12202:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12532:190:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12542:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12569:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12551:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12551:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12542:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12665:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12667:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12667:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12667:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12590:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12597:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12587:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12587:77:11"
															},
															"nodeType": "YulIf",
															"src": "12584:103:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12696:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12707:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12714:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12696:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12518:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12528:3:11",
														"type": ""
													}
												],
												"src": "12489:233:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12756:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12773:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12776:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12766:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12766:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12766:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12870:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12873:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12863:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12863:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12863:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12894:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12887:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12887:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12887:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12728:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12962:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12952:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13056:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13059:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13049:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13049:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13080:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13083:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13073:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13073:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13073:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12914:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13128:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13145:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13148:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13138:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13138:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13138:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13242:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13245:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13235:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13235:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13235:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13266:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13269:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13259:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13259:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13259:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13100:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13375:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13392:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13395:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13385:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13385:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13385:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13286:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13498:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13518:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13508:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13508:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13508:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "13409:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13621:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13638:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13641:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13631:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13631:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13631:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13532:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13744:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13761:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13764:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13754:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13754:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13655:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13826:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13836:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13854:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13861:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13850:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13850:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13870:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13866:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13866:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13846:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13836:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13809:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13819:6:11",
														"type": ""
													}
												],
												"src": "13778:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13992:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14014:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14022:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14010:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14010:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14026:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14003:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14003:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14082:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14090:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14078:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14078:15:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14095:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14071:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14071:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14071:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13984:6:11",
														"type": ""
													}
												],
												"src": "13886:230:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14228:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14250:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14258:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14246:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14246:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14262:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14239:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14318:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14326:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14314:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14314:15:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14331:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14307:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14307:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14220:6:11",
														"type": ""
													}
												],
												"src": "14122:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14462:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14484:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14492:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14480:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14480:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14496:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14473:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14473:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14473:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14552:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14560:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14548:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14548:15:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14565:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14541:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14541:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14541:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14454:6:11",
														"type": ""
													}
												],
												"src": "14356:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14633:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14690:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14699:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14702:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14692:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14692:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14692:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14656:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14681:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14663:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14663:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14653:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14653:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14646:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14646:43:11"
															},
															"nodeType": "YulIf",
															"src": "14643:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14626:5:11",
														"type": ""
													}
												],
												"src": "14590:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14758:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14814:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14814:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14781:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14803:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14788:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14788:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14778:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14778:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14771:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14771:40:11"
															},
															"nodeType": "YulIf",
															"src": "14768:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14751:5:11",
														"type": ""
													}
												],
												"src": "14718:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14882:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14938:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14947:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14950:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14940:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14940:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14940:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14905:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14929:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "14912:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14912:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14902:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14902:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14895:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14895:42:11"
															},
															"nodeType": "YulIf",
															"src": "14892:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14875:5:11",
														"type": ""
													}
												],
												"src": "14840:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15009:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15066:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15075:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15078:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15068:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15068:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15068:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15032:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15057:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15039:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15039:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15029:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15029:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15022:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:43:11"
															},
															"nodeType": "YulIf",
															"src": "15019:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15002:5:11",
														"type": ""
													}
												],
												"src": "14966:122:11"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b57806301ffc9a71461008b5780634e1273f4146100bb578063a22cb465146100eb578063e985e9c514610107575b600080fd5b610075600480360381019061007091906107b2565b610137565b6040516100829190610a40565b60405180910390f35b6100a560048036038101906100a0919061086a565b610200565b6040516100b291906109c5565b60405180910390f35b6100d560048036038101906100d091906107f2565b61026a565b6040516100e291906109a3565b60405180910390f35b61010560048036038101906101009190610772565b610383565b005b610121600480360381019061011c9190610732565b610399565b60405161012e91906109c5565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019f906109e0565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606081518351146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610a20565b60405180910390fd5b6000835167ffffffffffffffff8111156102cd576102cc610c6e565b5b6040519080825280602002602001820160405280156102fb5781602001602082028036833780820191505090505b50905060005b8451811015610378576103488582815181106103205761031f610c3f565b5b602002602001015185838151811061033b5761033a610c3f565b5b6020026020010151610137565b82828151811061035b5761035a610c3f565b5b6020026020010181815250508061037190610bc7565b9050610301565b508091505092915050565b61039561038e61042d565b8383610435565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610a00565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161059591906109c5565b60405180910390a3505050565b60006105b56105b084610a80565b610a5b565b905080838252602082019050828560208602820111156105d8576105d7610ca2565b5b60005b8581101561060857816105ee8882610682565b8452602084019350602083019250506001810190506105db565b5050509392505050565b600061062561062084610aac565b610a5b565b9050808382526020820190508285602086028201111561064857610647610ca2565b5b60005b85811015610678578161065e888261071d565b84526020840193506020830192505060018101905061064b565b5050509392505050565b60008135905061069181610daf565b92915050565b600082601f8301126106ac576106ab610c9d565b5b81356106bc8482602086016105a2565b91505092915050565b600082601f8301126106da576106d9610c9d565b5b81356106ea848260208601610612565b91505092915050565b60008135905061070281610dc6565b92915050565b60008135905061071781610ddd565b92915050565b60008135905061072c81610df4565b92915050565b6000806040838503121561074957610748610cac565b5b600061075785828601610682565b925050602061076885828601610682565b9150509250929050565b6000806040838503121561078957610788610cac565b5b600061079785828601610682565b92505060206107a8858286016106f3565b9150509250929050565b600080604083850312156107c9576107c8610cac565b5b60006107d785828601610682565b92505060206107e88582860161071d565b9150509250929050565b6000806040838503121561080957610808610cac565b5b600083013567ffffffffffffffff81111561082757610826610ca7565b5b61083385828601610697565b925050602083013567ffffffffffffffff81111561085457610853610ca7565b5b610860858286016106c5565b9150509250929050565b6000602082840312156108805761087f610cac565b5b600061088e84828501610708565b91505092915050565b60006108a38383610985565b60208301905092915050565b60006108ba82610ae8565b6108c48185610b00565b93506108cf83610ad8565b8060005b838110156109005781516108e78882610897565b97506108f283610af3565b9250506001810190506108d3565b5085935050505092915050565b61091681610b34565b82525050565b6000610929602b83610b11565b915061093482610cc2565b604082019050919050565b600061094c602983610b11565b915061095782610d11565b604082019050919050565b600061096f602983610b11565b915061097a82610d60565b604082019050919050565b61098e81610b8c565b82525050565b61099d81610b8c565b82525050565b600060208201905081810360008301526109bd81846108af565b905092915050565b60006020820190506109da600083018461090d565b92915050565b600060208201905081810360008301526109f98161091c565b9050919050565b60006020820190508181036000830152610a198161093f565b9050919050565b60006020820190508181036000830152610a3981610962565b9050919050565b6000602082019050610a556000830184610994565b92915050565b6000610a65610a76565b9050610a718282610b96565b919050565b6000604051905090565b600067ffffffffffffffff821115610a9b57610a9a610c6e565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ac757610ac6610c6e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b2d82610b6c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b9f82610cb1565b810181811067ffffffffffffffff82111715610bbe57610bbd610c6e565b5b80604052505050565b6000610bd282610b8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0557610c04610c10565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b610db881610b22565b8114610dc357600080fd5b50565b610dcf81610b34565b8114610dda57600080fd5b50565b610de681610b40565b8114610df157600080fd5b50565b610dfd81610b8c565b8114610e0857600080fd5b5056fea2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH2 0x348 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x33B JUMPI PUSH2 0x33A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x137 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x371 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x301 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x38E PUSH2 0x42D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x5B0 DUP5 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP2 PUSH2 0x5EE DUP9 DUP3 PUSH2 0x682 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x620 DUP5 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0xCA2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x678 JUMPI DUP2 PUSH2 0x65E DUP9 DUP3 PUSH2 0x71D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x64B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x691 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DA JUMPI PUSH2 0x6D9 PUSH2 0xC9D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x612 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x702 DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x717 DUP2 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72C DUP2 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH2 0x748 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x757 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x768 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x797 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7A8 DUP6 DUP3 DUP7 ADD PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E8 DUP6 DUP3 DUP7 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x833 DUP6 DUP3 DUP7 ADD PUSH2 0x697 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST PUSH2 0x860 DUP6 DUP3 DUP7 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x880 JUMPI PUSH2 0x87F PUSH2 0xCAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x88E DUP5 DUP3 DUP6 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP4 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP3 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x8C4 DUP2 DUP6 PUSH2 0xB00 JUMP JUMPDEST SWAP4 POP PUSH2 0x8CF DUP4 PUSH2 0xAD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x900 JUMPI DUP2 MLOAD PUSH2 0x8E7 DUP9 DUP3 PUSH2 0x897 JUMP JUMPDEST SWAP8 POP PUSH2 0x8F2 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8D3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x929 PUSH1 0x2B DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x934 DUP3 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94C PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x957 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96F PUSH1 0x29 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0x97A DUP3 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98E DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x99D DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9BD DUP2 DUP5 PUSH2 0x8AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA19 DUP2 PUSH2 0x93F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH2 0xA71 DUP3 DUP3 PUSH2 0xB96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D DUP3 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9F DUP3 PUSH2 0xCB1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBBE JUMPI PUSH2 0xBBD PUSH2 0xC6E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 DUP3 PUSH2 0xB8C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xB22 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xB40 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xE08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x4A SLOAD 0xEE 0xA6 0xDC 0xC4 SWAP2 0x4E 0x4D RETURNDATASIZE 0x2B PUSH7 0x8CDB5948040853 0xE5 REVERT 0xCE SWAP15 0xC0 0x2B PUSH13 0x4E5451933564736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "463:10649:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;829:155:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:508:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1894:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2114:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:228;1019:7;1065:1;1046:21;;:7;:21;;;;1038:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1132:9;:13;1142:2;1132:13;;;;;;;;;;;:22;1146:7;1132:22;;;;;;;;;;;;;;;;1125:29;;933:228;;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;1318:508:3:-;1469:16;1528:3;:10;1509:8;:15;:29;1501:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1595:30;1642:8;:15;1628:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:63;;1674:9;1669:120;1693:8;:15;1689:1;:19;1669:120;;;1748:30;1758:8;1767:1;1758:11;;;;;;;;:::i;:::-;;;;;;;;1771:3;1775:1;1771:6;;;;;;;;:::i;:::-;;;;;;;;1748:9;:30::i;:::-;1729:13;1743:1;1729:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;1710:3;;;;:::i;:::-;;;1669:120;;;;1806:13;1799:20;;;1318:508;;;;:::o;1894:153::-;1988:52;2007:12;:10;:12::i;:::-;2021:8;2031;1988:18;:52::i;:::-;1894:153;;:::o;2114:166::-;2213:4;2236:18;:27;2255:7;2236:27;;;;;;;;;;;;;;;:37;2264:8;2236:37;;;;;;;;;;;;;;;;;;;;;;;;;2229:44;;2114:166;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7910:323:3:-;8060:8;8051:17;;:5;:17;;;;8043:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8162:8;8124:18;:25;8143:5;8124:25;;;;;;;;;;;;;;;:35;8150:8;8124:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;8207:8;8185:41;;8200:5;8185:41;;;8217:8;8185:41;;;;;;:::i;:::-;;;;;;;;7910:323;;;:::o;24:722:11:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:139::-;1543:5;1581:6;1568:20;1559:29;;1597:33;1624:5;1597:33;:::i;:::-;1497:139;;;;:::o;1659:370::-;1730:5;1779:3;1772:4;1764:6;1760:17;1756:27;1746:122;;1787:79;;:::i;:::-;1746:122;1904:6;1891:20;1929:94;2019:3;2011:6;2004:4;1996:6;1992:17;1929:94;:::i;:::-;1920:103;;1736:293;1659:370;;;;:::o;2052:::-;2123:5;2172:3;2165:4;2157:6;2153:17;2149:27;2139:122;;2180:79;;:::i;:::-;2139:122;2297:6;2284:20;2322:94;2412:3;2404:6;2397:4;2389:6;2385:17;2322:94;:::i;:::-;2313:103;;2129:293;2052:370;;;;:::o;2428:133::-;2471:5;2509:6;2496:20;2487:29;;2525:30;2549:5;2525:30;:::i;:::-;2428:133;;;;:::o;2567:137::-;2612:5;2650:6;2637:20;2628:29;;2666:32;2692:5;2666:32;:::i;:::-;2567:137;;;;:::o;2710:139::-;2756:5;2794:6;2781:20;2772:29;;2810:33;2837:5;2810:33;:::i;:::-;2710:139;;;;:::o;2855:474::-;2923:6;2931;2980:2;2968:9;2959:7;2955:23;2951:32;2948:119;;;2986:79;;:::i;:::-;2948:119;3106:1;3131:53;3176:7;3167:6;3156:9;3152:22;3131:53;:::i;:::-;3121:63;;3077:117;3233:2;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3204:118;2855:474;;;;;:::o;3335:468::-;3400:6;3408;3457:2;3445:9;3436:7;3432:23;3428:32;3425:119;;;3463:79;;:::i;:::-;3425:119;3583:1;3608:53;3653:7;3644:6;3633:9;3629:22;3608:53;:::i;:::-;3598:63;;3554:117;3710:2;3736:50;3778:7;3769:6;3758:9;3754:22;3736:50;:::i;:::-;3726:60;;3681:115;3335:468;;;;;:::o;3809:474::-;3877:6;3885;3934:2;3922:9;3913:7;3909:23;3905:32;3902:119;;;3940:79;;:::i;:::-;3902:119;4060:1;4085:53;4130:7;4121:6;4110:9;4106:22;4085:53;:::i;:::-;4075:63;;4031:117;4187:2;4213:53;4258:7;4249:6;4238:9;4234:22;4213:53;:::i;:::-;4203:63;;4158:118;3809:474;;;;;:::o;4289:894::-;4407:6;4415;4464:2;4452:9;4443:7;4439:23;4435:32;4432:119;;;4470:79;;:::i;:::-;4432:119;4618:1;4607:9;4603:17;4590:31;4648:18;4640:6;4637:30;4634:117;;;4670:79;;:::i;:::-;4634:117;4775:78;4845:7;4836:6;4825:9;4821:22;4775:78;:::i;:::-;4765:88;;4561:302;4930:2;4919:9;4915:18;4902:32;4961:18;4953:6;4950:30;4947:117;;;4983:79;;:::i;:::-;4947:117;5088:78;5158:7;5149:6;5138:9;5134:22;5088:78;:::i;:::-;5078:88;;4873:303;4289:894;;;;;:::o;5189:327::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:52;5491:7;5482:6;5471:9;5467:22;5447:52;:::i;:::-;5437:62;;5393:116;5189:327;;;;:::o;5522:179::-;5591:10;5612:46;5654:3;5646:6;5612:46;:::i;:::-;5690:4;5685:3;5681:14;5667:28;;5522:179;;;;:::o;5737:732::-;5856:3;5885:54;5933:5;5885:54;:::i;:::-;5955:86;6034:6;6029:3;5955:86;:::i;:::-;5948:93;;6065:56;6115:5;6065:56;:::i;:::-;6144:7;6175:1;6160:284;6185:6;6182:1;6179:13;6160:284;;;6261:6;6255:13;6288:63;6347:3;6332:13;6288:63;:::i;:::-;6281:70;;6374:60;6427:6;6374:60;:::i;:::-;6364:70;;6220:224;6207:1;6204;6200:9;6195:14;;6160:284;;;6164:14;6460:3;6453:10;;5861:608;;;5737:732;;;;:::o;6475:109::-;6556:21;6571:5;6556:21;:::i;:::-;6551:3;6544:34;6475:109;;:::o;6590:366::-;6732:3;6753:67;6817:2;6812:3;6753:67;:::i;:::-;6746:74;;6829:93;6918:3;6829:93;:::i;:::-;6947:2;6942:3;6938:12;6931:19;;6590:366;;;:::o;6962:::-;7104:3;7125:67;7189:2;7184:3;7125:67;:::i;:::-;7118:74;;7201:93;7290:3;7201:93;:::i;:::-;7319:2;7314:3;7310:12;7303:19;;6962:366;;;:::o;7334:::-;7476:3;7497:67;7561:2;7556:3;7497:67;:::i;:::-;7490:74;;7573:93;7662:3;7573:93;:::i;:::-;7691:2;7686:3;7682:12;7675:19;;7334:366;;;:::o;7706:108::-;7783:24;7801:5;7783:24;:::i;:::-;7778:3;7771:37;7706:108;;:::o;7820:118::-;7907:24;7925:5;7907:24;:::i;:::-;7902:3;7895:37;7820:118;;:::o;7944:373::-;8087:4;8125:2;8114:9;8110:18;8102:26;;8174:9;8168:4;8164:20;8160:1;8149:9;8145:17;8138:47;8202:108;8305:4;8296:6;8202:108;:::i;:::-;8194:116;;7944:373;;;;:::o;8323:210::-;8410:4;8448:2;8437:9;8433:18;8425:26;;8461:65;8523:1;8512:9;8508:17;8499:6;8461:65;:::i;:::-;8323:210;;;;:::o;8539:419::-;8705:4;8743:2;8732:9;8728:18;8720:26;;8792:9;8786:4;8782:20;8778:1;8767:9;8763:17;8756:47;8820:131;8946:4;8820:131;:::i;:::-;8812:139;;8539:419;;;:::o;8964:::-;9130:4;9168:2;9157:9;9153:18;9145:26;;9217:9;9211:4;9207:20;9203:1;9192:9;9188:17;9181:47;9245:131;9371:4;9245:131;:::i;:::-;9237:139;;8964:419;;;:::o;9389:::-;9555:4;9593:2;9582:9;9578:18;9570:26;;9642:9;9636:4;9632:20;9628:1;9617:9;9613:17;9606:47;9670:131;9796:4;9670:131;:::i;:::-;9662:139;;9389:419;;;:::o;9814:222::-;9907:4;9945:2;9934:9;9930:18;9922:26;;9958:71;10026:1;10015:9;10011:17;10002:6;9958:71;:::i;:::-;9814:222;;;;:::o;10042:129::-;10076:6;10103:20;;:::i;:::-;10093:30;;10132:33;10160:4;10152:6;10132:33;:::i;:::-;10042:129;;;:::o;10177:75::-;10210:6;10243:2;10237:9;10227:19;;10177:75;:::o;10258:311::-;10335:4;10425:18;10417:6;10414:30;10411:56;;;10447:18;;:::i;:::-;10411:56;10497:4;10489:6;10485:17;10477:25;;10557:4;10551;10547:15;10539:23;;10258:311;;;:::o;10575:::-;10652:4;10742:18;10734:6;10731:30;10728:56;;;10764:18;;:::i;:::-;10728:56;10814:4;10806:6;10802:17;10794:25;;10874:4;10868;10864:15;10856:23;;10575:311;;;:::o;10892:132::-;10959:4;10982:3;10974:11;;11012:4;11007:3;11003:14;10995:22;;10892:132;;;:::o;11030:114::-;11097:6;11131:5;11125:12;11115:22;;11030:114;;;:::o;11150:113::-;11220:4;11252;11247:3;11243:14;11235:22;;11150:113;;;:::o;11269:184::-;11368:11;11402:6;11397:3;11390:19;11442:4;11437:3;11433:14;11418:29;;11269:184;;;;:::o;11459:169::-;11543:11;11577:6;11572:3;11565:19;11617:4;11612:3;11608:14;11593:29;;11459:169;;;;:::o;11634:96::-;11671:7;11700:24;11718:5;11700:24;:::i;:::-;11689:35;;11634:96;;;:::o;11736:90::-;11770:7;11813:5;11806:13;11799:21;11788:32;;11736:90;;;:::o;11832:149::-;11868:7;11908:66;11901:5;11897:78;11886:89;;11832:149;;;:::o;11987:126::-;12024:7;12064:42;12057:5;12053:54;12042:65;;11987:126;;;:::o;12119:77::-;12156:7;12185:5;12174:16;;12119:77;;;:::o;12202:281::-;12285:27;12307:4;12285:27;:::i;:::-;12277:6;12273:40;12415:6;12403:10;12400:22;12379:18;12367:10;12364:34;12361:62;12358:88;;;12426:18;;:::i;:::-;12358:88;12466:10;12462:2;12455:22;12245:238;12202:281;;:::o;12489:233::-;12528:3;12551:24;12569:5;12551:24;:::i;:::-;12542:33;;12597:66;12590:5;12587:77;12584:103;;;12667:18;;:::i;:::-;12584:103;12714:1;12707:5;12703:13;12696:20;;12489:233;;;:::o;12728:180::-;12776:77;12773:1;12766:88;12873:4;12870:1;12863:15;12897:4;12894:1;12887:15;12914:180;12962:77;12959:1;12952:88;13059:4;13056:1;13049:15;13083:4;13080:1;13073:15;13100:180;13148:77;13145:1;13138:88;13245:4;13242:1;13235:15;13269:4;13266:1;13259:15;13286:117;13395:1;13392;13385:12;13409:117;13518:1;13515;13508:12;13532:117;13641:1;13638;13631:12;13655:117;13764:1;13761;13754:12;13778:102;13819:6;13870:2;13866:7;13861:2;13854:5;13850:14;13846:28;13836:38;;13778:102;;;:::o;13886:230::-;14026:34;14022:1;14014:6;14010:14;14003:58;14095:13;14090:2;14082:6;14078:15;14071:38;13886:230;:::o;14122:228::-;14262:34;14258:1;14250:6;14246:14;14239:58;14331:11;14326:2;14318:6;14314:15;14307:36;14122:228;:::o;14356:::-;14496:34;14492:1;14484:6;14480:14;14473:58;14565:11;14560:2;14552:6;14548:15;14541:36;14356:228;:::o;14590:122::-;14663:24;14681:5;14663:24;:::i;:::-;14656:5;14653:35;14643:63;;14702:1;14699;14692:12;14643:63;14590:122;:::o;14718:116::-;14788:21;14803:5;14788:21;:::i;:::-;14781:5;14778:32;14768:60;;14824:1;14821;14814:12;14768:60;14718:116;:::o;14840:120::-;14912:23;14929:5;14912:23;:::i;:::-;14905:5;14902:34;14892:62;;14950:1;14947;14940:12;14892:62;14840:120;:::o;14966:122::-;15039:24;15057:5;15039:24;:::i;:::-;15032:5;15029:35;15019:63;;15078:1;15075;15068:12;15019:63;14966:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "729800",
								"executionCost": "766",
								"totalCost": "730566"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "638"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 11112,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d04a54eea6dcc4914e4d3d2b668cdb5948040853e5fdce9ec02b6c4e5451933564736f6c63430008070033",
									".code": [
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "FDD58E"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "4E1273F4"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 11112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1038,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1538,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1501,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1708,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1758,
											"end": 1766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1826,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1988,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 2047,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2236,
											"end": 2273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2280,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8060,
											"end": 8068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8043,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8162,
											"end": 8170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8149,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8205,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 8217,
											"end": 8225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8185,
											"end": 8226,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 8233,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1568,
											"end": 1588,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1730,
											"end": 1735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1787,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1746,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2019,
											"end": 2022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2008,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1929,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 2029,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2180,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 2139,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2322,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2422,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2549,
											"end": 2554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2561,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2637,
											"end": 2657,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2801,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2837,
											"end": 2842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2810,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2849,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 2982,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2959,
											"end": 2966,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2955,
											"end": 2978,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2983,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2986,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2948,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 3329,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3457,
											"end": 3459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3454,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3432,
											"end": 3455,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3460,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3425,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3653,
											"end": 3660,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3644,
											"end": 3650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3608,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3661,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3736,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3786,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3803,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3934,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3932,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 3937,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3940,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3902,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4085,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4138,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4031,
											"end": 4148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4258,
											"end": 4265,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4234,
											"end": 4256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4213,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 4283,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4466,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4435,
											"end": 4467,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4470,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4590,
											"end": 4621,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4667,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4834,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4775,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4765,
											"end": 4853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4765,
											"end": 4853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4928,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4961,
											"end": 4979,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4980,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4983,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4947,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5147,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5134,
											"end": 5156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5088,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5166,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5166,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 5176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 5183,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5491,
											"end": 5498,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5467,
											"end": 5489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5393,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5516,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5654,
											"end": 5657,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5612,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5685,
											"end": 5688,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5701,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5885,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6032,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5955,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6041,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6115,
											"end": 6120,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6065,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6144,
											"end": 6151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6185,
											"end": 6191,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6261,
											"end": 6267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6255,
											"end": 6268,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6347,
											"end": 6350,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6345,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6288,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6364,
											"end": 6434,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6364,
											"end": 6434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6220,
											"end": 6444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6200,
											"end": 6209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6195,
											"end": 6209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6195,
											"end": 6209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 6160,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6460,
											"end": 6463,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 6469,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6571,
											"end": 6576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6556,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6578,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6584,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6817,
											"end": 6819,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6820,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 7189,
											"end": 7191,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 7184,
											"end": 7187,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 7125,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7290,
											"end": 7293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7201,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 7328,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 7556,
											"end": 7559,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7497,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7662,
											"end": 7665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7693,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7700,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 7801,
											"end": 7806,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7778,
											"end": 7781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7771,
											"end": 7808,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7814,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7925,
											"end": 7930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7907,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7902,
											"end": 7905,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7895,
											"end": 7932,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7938,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8087,
											"end": 8091,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8128,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 8305,
											"end": 8309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 8202,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 8317,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8446,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8451,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8523,
											"end": 8524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8525,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8499,
											"end": 8505,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8461,
											"end": 8526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8323,
											"end": 8533,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8705,
											"end": 8709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8745,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8792,
											"end": 8801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8786,
											"end": 8790,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8802,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8763,
											"end": 8780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8756,
											"end": 8803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8820,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8812,
											"end": 8951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8958,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9130,
											"end": 9134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9170,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9166,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9227,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9204,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9201,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9188,
											"end": 9205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 9371,
											"end": 9375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 9245,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9237,
											"end": 9376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9237,
											"end": 9376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 9383,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9642,
											"end": 9651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9632,
											"end": 9652,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9613,
											"end": 9630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9606,
											"end": 9653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 9796,
											"end": 9800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 9670,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9808,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9907,
											"end": 9911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9945,
											"end": 9947,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9934,
											"end": 9943,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10026,
											"end": 10027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10015,
											"end": 10024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10028,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10008,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 9958,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 10036,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10076,
											"end": 10082,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10093,
											"end": 10123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10093,
											"end": 10123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 10160,
											"end": 10164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 10132,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10171,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10210,
											"end": 10216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10245,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10237,
											"end": 10246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10227,
											"end": 10246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10227,
											"end": 10246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10252,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10335,
											"end": 10339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10443,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10417,
											"end": 10423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10444,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 10411,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10489,
											"end": 10495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10485,
											"end": 10502,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10557,
											"end": 10561,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10551,
											"end": 10555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10547,
											"end": 10562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10539,
											"end": 10562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10539,
											"end": 10562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10258,
											"end": 10569,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10652,
											"end": 10656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 10760,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10761,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10728,
											"end": 10784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10802,
											"end": 10819,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10856,
											"end": 10879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10856,
											"end": 10879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10886,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 10985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10974,
											"end": 10985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10974,
											"end": 10985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11007,
											"end": 11010,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11003,
											"end": 11017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 11024,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11097,
											"end": 11103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11131,
											"end": 11136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 11137,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11115,
											"end": 11137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11115,
											"end": 11137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11144,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11220,
											"end": 11224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11247,
											"end": 11250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11243,
											"end": 11257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11235,
											"end": 11257,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11235,
											"end": 11257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11263,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11368,
											"end": 11379,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11409,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11446,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11440,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11447,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11453,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11572,
											"end": 11575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11565,
											"end": 11584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11617,
											"end": 11621,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11612,
											"end": 11615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11608,
											"end": 11622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11628,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 11718,
											"end": 11723,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 11700,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11730,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11806,
											"end": 11819,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11820,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11826,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11868,
											"end": 11875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11908,
											"end": 11974,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11901,
											"end": 11906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11897,
											"end": 11975,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11886,
											"end": 11975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11886,
											"end": 11975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11832,
											"end": 11981,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12024,
											"end": 12031,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12106,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12053,
											"end": 12107,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11987,
											"end": 12113,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12174,
											"end": 12190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12174,
											"end": 12190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12119,
											"end": 12196,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 12307,
											"end": 12311,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 12285,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12277,
											"end": 12283,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12273,
											"end": 12313,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12403,
											"end": 12413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12400,
											"end": 12422,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12397,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12367,
											"end": 12377,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12364,
											"end": 12398,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12361,
											"end": 12423,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12466,
											"end": 12476,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12477,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12245,
											"end": 12483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12202,
											"end": 12483,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12528,
											"end": 12531,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 12569,
											"end": 12574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12542,
											"end": 12575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12542,
											"end": 12575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12597,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12590,
											"end": 12595,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12587,
											"end": 12664,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 12584,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12714,
											"end": 12715,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12707,
											"end": 12712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12703,
											"end": 12716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12696,
											"end": 12716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12722,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12728,
											"end": 12908,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 12728,
											"end": 12908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12776,
											"end": 12853,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12773,
											"end": 12774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12766,
											"end": 12854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12877,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 12870,
											"end": 12871,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12863,
											"end": 12878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12894,
											"end": 12895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12902,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12914,
											"end": 13094,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 12914,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12962,
											"end": 13039,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12959,
											"end": 12960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12952,
											"end": 13040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13059,
											"end": 13063,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 13056,
											"end": 13057,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13049,
											"end": 13064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13083,
											"end": 13087,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13088,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13100,
											"end": 13280,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 13100,
											"end": 13280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13148,
											"end": 13225,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13138,
											"end": 13226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13245,
											"end": 13249,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 13242,
											"end": 13243,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13235,
											"end": 13250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13269,
											"end": 13273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13259,
											"end": 13274,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13286,
											"end": 13403,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 13286,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13385,
											"end": 13397,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13409,
											"end": 13526,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 13409,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13518,
											"end": 13519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13515,
											"end": 13516,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13508,
											"end": 13520,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13532,
											"end": 13649,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 13532,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 13643,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13655,
											"end": 13772,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 13655,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 13765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13762,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13819,
											"end": 13825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13866,
											"end": 13873,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13861,
											"end": 13863,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13854,
											"end": 13859,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13850,
											"end": 13864,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 13874,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13836,
											"end": 13874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13836,
											"end": 13874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13880,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14026,
											"end": 14060,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14010,
											"end": 14024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14003,
											"end": 14061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14095,
											"end": 14108,
											"name": "PUSH",
											"source": 11,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14082,
											"end": 14088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14071,
											"end": 14109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13886,
											"end": 14116,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14296,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 14258,
											"end": 14259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14239,
											"end": 14297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14342,
											"name": "PUSH",
											"source": 11,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14326,
											"end": 14328,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14318,
											"end": 14324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14307,
											"end": 14343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14122,
											"end": 14350,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14530,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14484,
											"end": 14490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14480,
											"end": 14494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14531,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14565,
											"end": 14576,
											"name": "PUSH",
											"source": 11,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14560,
											"end": 14562,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14548,
											"end": 14563,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14541,
											"end": 14577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14356,
											"end": 14584,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 14681,
											"end": 14686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 14663,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14656,
											"end": 14661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14653,
											"end": 14688,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14702,
											"end": 14703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14699,
											"end": 14700,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14692,
											"end": 14704,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 14643,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14712,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 14803,
											"end": 14808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 14788,
											"end": 14809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14778,
											"end": 14810,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14824,
											"end": 14825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14814,
											"end": 14826,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 14768,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14834,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 14929,
											"end": 14934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 14912,
											"end": 14935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14905,
											"end": 14910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14902,
											"end": 14936,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14950,
											"end": 14951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14947,
											"end": 14948,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14940,
											"end": 14952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 14892,
											"end": 14954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14960,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 15057,
											"end": 15062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15032,
											"end": 15037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15029,
											"end": 15064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15078,
											"end": 15079,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15075,
											"end": 15076,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15068,
											"end": 15080,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 15019,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 15088,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155.sol\":{\"keccak256\":\"0x31f8bc91c81a75610da8b7d241fca7fbe49d0ec717f2c9a7e4e772b176e5e99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f75046955c35d1f9391dea268bc26e1932953ddbac37df509a3c29b6aea13\",\"dweb:/ipfs/QmXKeAYA11csdhiw1x8gh4fVUUAqxW5xmzfCYxHCucfL5d\"]},\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155.sol\":{\"keccak256\":\"0x31f8bc91c81a75610da8b7d241fca7fbe49d0ec717f2c9a7e4e772b176e5e99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f75046955c35d1f9391dea268bc26e1932953ddbac37df509a3c29b6aea13\",\"dweb:/ipfs/QmXKeAYA11csdhiw1x8gh4fVUUAqxW5xmzfCYxHCucfL5d\"]},\"ERC1155Burnable.sol\":{\"keccak256\":\"0x8f0eaf8d0d8ab25da29572257231e55dadf6ade602a27f12c643eec3cac3b5d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49eb05bd8deac6529db5275052762fce41b3a26f16fe05220b27b1710885808\",\"dweb:/ipfs/QmYGFhSJrSuasrFGVPSCNrdqePkfEfe5LSK5wRWZLfYGnW\"]},\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165.sol\":{\"keccak256\":\"0xe751fcd285f3b8b713799541ea1e2d0b48b0198d45623dc1fc25831b56be68ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bf15989ff2a2efa214e77e2313a6ad9cbbd7e797d21bf3b212979d3309c11d\",\"dweb:/ipfs/QmXv6148okWDDQo6y7tb3LWby2GNw7VaLxg2ZrWGzTV8iH\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155.sol\":{\"keccak256\":\"0xc53a8423558d8ba0c7a045817f303a44bab2b4f045c721ea87b3f5a143971946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351168dc79e1f501f698e70ca332a8e21919f159d95bbaffa4dddea8f96abd13\",\"dweb:/ipfs/QmePSWuuhPVNQBhH8ggQpJNixDfTQEAaECFsGsCX6wjGe2\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver.sol\":{\"keccak256\":\"0x2a6bfb6eaf43d552e6c0e742847cef2713c15a0c83662fef44f0bf58288fd322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8761567f19649eb5b6cf1ca47cfbde2f98679816fdcc9dc3c6c218b464aec142\",\"dweb:/ipfs/QmdEvVSSSGyHaxwZKnbFqEqyqJ7eKDpSG4FzjG5DeRCCGm\"]},\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xe12b17fbc259a75f7ab3a457c41490562b33f07a3a9b86cb435f1e5ad0666c3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462d3965ab38215e3400b980cda44e0178b73141d90403e305484a8ba0d7cc9e\",\"dweb:/ipfs/QmeRJoQMh2pWgKsFzX8SkPfpvrZcuRfwXtTWA8hf8VURK9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"OnyxNft1155Auctions.sol": {
				"OnyxNft1155Auction": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "availableForBids",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "removeFormSale",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "CheckNftStatus",
							"outputs": [
								{
									"internalType": "enum OnyxNft1155Auction.status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CurrentStatus",
							"outputs": [
								{
									"internalType": "enum OnyxNft1155Auction.status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OnyxNft1155Auctions.sol\":56:3382  contract OnyxNft1155Auction {  //is SpaceERC20 ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OnyxNft1155Auctions.sol\":56:3382  contract OnyxNft1155Auction {  //is SpaceERC20 ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67c510c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe3306a6f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Auctions.sol\":258:285  status public CurrentStatus */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n    tag_8:\n        /* \"OnyxNft1155Auctions.sol\":3317:3323  status */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3341:3344  Nft */\n      0x01\n        /* \"OnyxNft1155Auctions.sol\":3341:3354  Nft[nftOwner] */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3345:3353  nftOwner */\n      dup5\n        /* \"OnyxNft1155Auctions.sol\":3341:3354  Nft[nftOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OnyxNft1155Auctions.sol\":3341:3361  Nft[nftOwner][nftId] */\n      0x00\n        /* \"OnyxNft1155Auctions.sol\":3355:3360  nftId */\n      dup4\n        /* \"OnyxNft1155Auctions.sol\":3341:3361  Nft[nftOwner][nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OnyxNft1155Auctions.sol\":3341:3372  Nft[nftOwner][nftId].salestatus */\n      0x09\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"OnyxNft1155Auctions.sol\":3334:3372  return Nft[nftOwner][nftId].salestatus */\n      swap1\n      pop\n        /* \"OnyxNft1155Auctions.sol\":3241:3379  function CheckNftStatus(address nftOwner, uint nftId) view external returns(status){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OnyxNft1155Auctions.sol\":258:285  status public CurrentStatus */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_16:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_18\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_20:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_22\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:771   */\n    tag_7:\n        /* \"#utility.yul\":365:371   */\n      0x00\n        /* \"#utility.yul\":373:379   */\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:509   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":428:507   */\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":390:509   */\n    tag_25:\n        /* \"#utility.yul\":548:549   */\n      0x00\n        /* \"#utility.yul\":573:626   */\n      tag_28\n        /* \"#utility.yul\":618:625   */\n      dup6\n        /* \"#utility.yul\":609:615   */\n      dup3\n        /* \"#utility.yul\":598:607   */\n      dup7\n        /* \"#utility.yul\":594:616   */\n      add\n        /* \"#utility.yul\":573:626   */\n      tag_16\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":563:626   */\n      swap3\n      pop\n        /* \"#utility.yul\":519:636   */\n      pop\n        /* \"#utility.yul\":675:677   */\n      0x20\n        /* \"#utility.yul\":701:754   */\n      tag_29\n        /* \"#utility.yul\":746:753   */\n      dup6\n        /* \"#utility.yul\":737:743   */\n      dup3\n        /* \"#utility.yul\":726:735   */\n      dup7\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":701:754   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":691:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:764   */\n      pop\n        /* \"#utility.yul\":297:771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:926   */\n    tag_30:\n        /* \"#utility.yul\":873:919   */\n      tag_32\n        /* \"#utility.yul\":913:918   */\n      dup2\n        /* \"#utility.yul\":873:919   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":868:871   */\n      dup3\n        /* \"#utility.yul\":861:920   */\n      mstore\n        /* \"#utility.yul\":777:926   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1172   */\n    tag_10:\n        /* \"#utility.yul\":1034:1038   */\n      0x00\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1061:1070   */\n      dup3\n        /* \"#utility.yul\":1057:1075   */\n      add\n        /* \"#utility.yul\":1049:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":1085:1165   */\n      tag_35\n        /* \"#utility.yul\":1162:1163   */\n      0x00\n        /* \"#utility.yul\":1151:1160   */\n      dup4\n        /* \"#utility.yul\":1147:1164   */\n      add\n        /* \"#utility.yul\":1138:1144   */\n      dup5\n        /* \"#utility.yul\":1085:1165   */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":932:1172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1355   */\n    tag_38:\n        /* \"#utility.yul\":1296:1303   */\n      0x00\n        /* \"#utility.yul\":1325:1349   */\n      tag_40\n        /* \"#utility.yul\":1343:1348   */\n      dup3\n        /* \"#utility.yul\":1325:1349   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1314:1349   */\n      swap1\n      pop\n        /* \"#utility.yul\":1259:1355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1361:1494   */\n    tag_42:\n        /* \"#utility.yul\":1409:1416   */\n      0x00\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1427:1443   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1488   */\n      tag_44\n        /* \"#utility.yul\":1482:1487   */\n      dup3\n        /* \"#utility.yul\":1444:1488   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1361:1494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1500:1626   */\n    tag_41:\n        /* \"#utility.yul\":1537:1544   */\n      0x00\n        /* \"#utility.yul\":1577:1619   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1570:1575   */\n      dup3\n        /* \"#utility.yul\":1566:1620   */\n      and\n        /* \"#utility.yul\":1555:1620   */\n      swap1\n      pop\n        /* \"#utility.yul\":1500:1626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1709   */\n    tag_47:\n        /* \"#utility.yul\":1669:1676   */\n      0x00\n        /* \"#utility.yul\":1698:1703   */\n      dup2\n        /* \"#utility.yul\":1687:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1632:1709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1715:1848   */\n    tag_33:\n        /* \"#utility.yul\":1774:1783   */\n      0x00\n        /* \"#utility.yul\":1807:1842   */\n      tag_50\n        /* \"#utility.yul\":1836:1841   */\n      dup3\n        /* \"#utility.yul\":1807:1842   */\n      tag_42\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1794:1842   */\n      swap1\n      pop\n        /* \"#utility.yul\":1715:1848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1854:2034   */\n    tag_51:\n        /* \"#utility.yul\":1902:1979   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1892:1980   */\n      mstore\n        /* \"#utility.yul\":1999:2003   */\n      0x21\n        /* \"#utility.yul\":1996:1997   */\n      0x04\n        /* \"#utility.yul\":1989:2004   */\n      mstore\n        /* \"#utility.yul\":2023:2027   */\n      0x24\n        /* \"#utility.yul\":2020:2021   */\n      0x00\n        /* \"#utility.yul\":2013:2028   */\n      revert\n        /* \"#utility.yul\":2163:2280   */\n    tag_27:\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2269:2270   */\n      dup1\n        /* \"#utility.yul\":2262:2274   */\n      revert\n        /* \"#utility.yul\":2286:2402   */\n    tag_45:\n        /* \"#utility.yul\":2370:2371   */\n      0x04\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2360:2372   */\n      lt\n        /* \"#utility.yul\":2350:2396   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2376:2394   */\n      tag_58\n      tag_51\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2350:2396   */\n    tag_57:\n        /* \"#utility.yul\":2286:2402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2408:2530   */\n    tag_19:\n        /* \"#utility.yul\":2481:2505   */\n      tag_60\n        /* \"#utility.yul\":2499:2504   */\n      dup2\n        /* \"#utility.yul\":2481:2505   */\n      tag_38\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2474:2479   */\n      dup2\n        /* \"#utility.yul\":2471:2506   */\n      eq\n        /* \"#utility.yul\":2461:2524   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2520:2521   */\n      0x00\n        /* \"#utility.yul\":2517:2518   */\n      dup1\n        /* \"#utility.yul\":2510:2522   */\n      revert\n        /* \"#utility.yul\":2461:2524   */\n    tag_61:\n        /* \"#utility.yul\":2408:2530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2536:2658   */\n    tag_23:\n        /* \"#utility.yul\":2609:2633   */\n      tag_63\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2609:2633   */\n      tag_47\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2599:2634   */\n      eq\n        /* \"#utility.yul\":2589:2652   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2648:2649   */\n      0x00\n        /* \"#utility.yul\":2645:2646   */\n      dup1\n        /* \"#utility.yul\":2638:2650   */\n      revert\n        /* \"#utility.yul\":2589:2652   */\n    tag_64:\n        /* \"#utility.yul\":2536:2658   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102a6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806367c510c91461003b578063e3306a6f1461006b575b600080fd5b6100556004803603810190610050919061012f565b610089565b604051610062919061017e565b60405180910390f35b6100736100f4565b604051610080919061017e565b60405180910390f35b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160009054906101000a900460ff16905092915050565b60008054906101000a900460ff1681565b60008135905061011481610242565b92915050565b60008135905061012981610259565b92915050565b6000806040838503121561014657610145610229565b5b600061015485828601610105565b92505060206101658582860161011a565b9150509250929050565b610178816101e8565b82525050565b6000602082019050610193600083018461016f565b92915050565b60006101a4826101be565b9050919050565b60008190506101b98261022e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f3826101ab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6004811061023f5761023e6101fa565b5b50565b61024b81610199565b811461025657600080fd5b50565b610262816101de565b811461026d57600080fd5b5056fea2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67C510C9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE3306A6F EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x114 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129 DUP2 PUSH2 0x259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0x229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP6 DUP3 DUP7 ADD PUSH2 0x105 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x165 DUP6 DUP3 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1B9 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x23F JUMPI PUSH2 0x23E PUSH2 0x1FA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x199 JUMP JUMPDEST DUP2 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x262 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP2 EQ PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC0 SHL CHAINID 0xB8 0x5F 0xB9 0x24 0x5C 0xB1 CALLDATASIZE LOG4 0xE1 PC PUSH1 0xC9 SHR 0xF6 0xB0 PUSH23 0xA84DB718B0451727AB115F7764736F6C63430008070033 ",
							"sourceMap": "56:3326:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CheckNftStatus_1750": {
									"entryPoint": 137,
									"id": 1750,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@CurrentStatus_1434": {
									"entryPoint": 244,
									"id": 1434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_enum$_status_$1431_to_t_uint8_fromStack": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_status_$1431__to_t_uint8__fromStack_reversed": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_status_$1431": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_status_$1431_to_t_uint8": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_status_$1431": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2661:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "7:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:11",
														"type": ""
													}
												],
												"src": "152:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "428:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:11"
															},
															"nodeType": "YulIf",
															"src": "390:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "519:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "534:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "538:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "563:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "598:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "609:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "594:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "594:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "618:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "573:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "573:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "563:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "646:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "661:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "675:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "665:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "691:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "726:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "737:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "701:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:11",
														"type": ""
													}
												],
												"src": "297:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "868:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "913:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_status_$1431_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "873:39:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "873:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:59:11"
														}
													]
												},
												"name": "abi_encode_t_enum$_status_$1431_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "839:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "846:3:11",
														"type": ""
													}
												],
												"src": "777:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1039:133:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1049:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1061:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1072:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1049:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1162:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_status_$1431_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1085:52:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:80:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1085:80:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_status_$1431__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1011:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1023:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1034:4:11",
														"type": ""
													}
												],
												"src": "932:240:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1238:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1211:6:11",
														"type": ""
													}
												],
												"src": "1178:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1304:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1314:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1343:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1325:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1314:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1286:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1296:7:11",
														"type": ""
													}
												],
												"src": "1259:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1417:77:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1427:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1438:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1427:7:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1482:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_status_$1431",
																	"nodeType": "YulIdentifier",
																	"src": "1444:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:44:11"
														}
													]
												},
												"name": "cleanup_t_enum$_status_$1431",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1399:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1409:7:11",
														"type": ""
													}
												],
												"src": "1361:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1545:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1555:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1570:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1577:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1566:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1555:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1537:7:11",
														"type": ""
													}
												],
												"src": "1500:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1677:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1687:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1698:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1687:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1659:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1669:7:11",
														"type": ""
													}
												],
												"src": "1632:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:64:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1794:48:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1836:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_status_$1431",
																	"nodeType": "YulIdentifier",
																	"src": "1807:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:35:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1794:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_status_$1431_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1764:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1774:9:11",
														"type": ""
													}
												],
												"src": "1715:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1882:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1989:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1854:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2146:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2139:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2139:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2040:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2252:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2262:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2163:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2340:62:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2374:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "2376:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2376:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2376:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2363:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2370:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2353:20:11"
															},
															"nodeType": "YulIf",
															"src": "2350:46:11"
														}
													]
												},
												"name": "validator_assert_t_enum$_status_$1431",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2286:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2451:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2508:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2520:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2510:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2510:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2510:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2474:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2499:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2481:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2481:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2471:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2471:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:43:11"
															},
															"nodeType": "YulIf",
															"src": "2461:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2444:5:11",
														"type": ""
													}
												],
												"src": "2408:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2636:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2645:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2648:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2638:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2638:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2602:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2627:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2609:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2609:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2599:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2599:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:43:11"
															},
															"nodeType": "YulIf",
															"src": "2589:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2572:5:11",
														"type": ""
													}
												],
												"src": "2536:122:11"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_status_$1431_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_status_$1431_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_status_$1431__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_status_$1431_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_status_$1431(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_status_$1431(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_status_$1431_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_status_$1431(value)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_assert_t_enum$_status_$1431(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806367c510c91461003b578063e3306a6f1461006b575b600080fd5b6100556004803603810190610050919061012f565b610089565b604051610062919061017e565b60405180910390f35b6100736100f4565b604051610080919061017e565b60405180910390f35b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160009054906101000a900460ff16905092915050565b60008054906101000a900460ff1681565b60008135905061011481610242565b92915050565b60008135905061012981610259565b92915050565b6000806040838503121561014657610145610229565b5b600061015485828601610105565b92505060206101658582860161011a565b9150509250929050565b610178816101e8565b82525050565b6000602082019050610193600083018461016f565b92915050565b60006101a4826101be565b9050919050565b60008190506101b98261022e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f3826101ab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6004811061023f5761023e6101fa565b5b50565b61024b81610199565b811461025657600080fd5b50565b610262816101de565b811461026d57600080fd5b5056fea2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67C510C9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE3306A6F EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x114 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129 DUP2 PUSH2 0x259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0x229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154 DUP6 DUP3 DUP7 ADD PUSH2 0x105 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x165 DUP6 DUP3 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x1E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1B9 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x23F JUMPI PUSH2 0x23E PUSH2 0x1FA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x199 JUMP JUMPDEST DUP2 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x262 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP2 EQ PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC0 SHL CHAINID 0xB8 0x5F 0xB9 0x24 0x5C 0xB1 CALLDATASIZE LOG4 0xE1 PC PUSH1 0xC9 SHR 0xF6 0xB0 PUSH23 0xA84DB718B0451727AB115F7764736F6C63430008070033 ",
							"sourceMap": "56:3326:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3241:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3241:138;3317:6;3341:3;:13;3345:8;3341:13;;;;;;;;;;;;;;;:20;3355:5;3341:20;;;;;;;;;;;:31;;;;;;;;;;;;3334:38;;3241:138;;;;:::o;258:27::-;;;;;;;;;;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:149::-;873:46;913:5;873:46;:::i;:::-;868:3;861:59;777:149;;:::o;932:240::-;1034:4;1072:2;1061:9;1057:18;1049:26;;1085:80;1162:1;1151:9;1147:17;1138:6;1085:80;:::i;:::-;932:240;;;;:::o;1259:96::-;1296:7;1325:24;1343:5;1325:24;:::i;:::-;1314:35;;1259:96;;;:::o;1361:133::-;1409:7;1438:5;1427:16;;1444:44;1482:5;1444:44;:::i;:::-;1361:133;;;:::o;1500:126::-;1537:7;1577:42;1570:5;1566:54;1555:65;;1500:126;;;:::o;1632:77::-;1669:7;1698:5;1687:16;;1632:77;;;:::o;1715:133::-;1774:9;1807:35;1836:5;1807:35;:::i;:::-;1794:48;;1715:133;;;:::o;1854:180::-;1902:77;1899:1;1892:88;1999:4;1996:1;1989:15;2023:4;2020:1;2013:15;2163:117;2272:1;2269;2262:12;2286:116;2370:1;2363:5;2360:12;2350:46;;2376:18;;:::i;:::-;2350:46;2286:116;:::o;2408:122::-;2481:24;2499:5;2481:24;:::i;:::-;2474:5;2471:35;2461:63;;2520:1;2517;2510:12;2461:63;2408:122;:::o;2536:::-;2609:24;2627:5;2609:24;:::i;:::-;2602:5;2599:35;2589:63;;2648:1;2645;2638:12;2589:63;2536:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "135600",
								"executionCost": "183",
								"totalCost": "135783"
							},
							"external": {
								"CheckNftStatus(address,uint256)": "3207",
								"CurrentStatus()": "2557"
							},
							"internal": {
								"_placeNftForBids(address,uint256)": "infinite",
								"_placeNftForFixedPrice(address,uint256,uint256)": "infinite",
								"_pushBidingValues(address,address,uint256,uint256,uint256)": "infinite",
								"_removeFromSale(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 3382,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eac01b46b85fb9245cb136a4e15860c91cf6b076a84db718b0451727ab115f7764736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "67C510C9"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "E3306A6F"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 3382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3353,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3341,
											"end": 3372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 258,
											"end": 285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 258,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 390,
											"end": 509,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 390,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 390,
											"end": 509,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 548,
											"end": 549,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 598,
											"end": 607,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 594,
											"end": 616,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 563,
											"end": 626,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 563,
											"end": 626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 519,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 691,
											"end": 754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 691,
											"end": 754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 646,
											"end": 764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 926,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 777,
											"end": 926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 873,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 913,
											"end": 918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 873,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 873,
											"end": 919,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 919,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 873,
											"end": 919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 868,
											"end": 871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 777,
											"end": 926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 926,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1085,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 932,
											"end": 1172,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1349,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1349,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1355,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1482,
											"end": 1487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1444,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1494,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1619,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1626,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1709,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1836,
											"end": 1841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1807,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1848,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1854,
											"end": 2034,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1854,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1902,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1980,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2003,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2280,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2163,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2372,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2350,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2402,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2530,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2609,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2634,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2638,
											"end": 2650,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2589,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2658,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CheckNftStatus(address,uint256)": "67c510c9",
							"CurrentStatus()": "e3306a6f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"availableForBids\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"removeFormSale\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"CheckNftStatus\",\"outputs\":[{\"internalType\":\"enum OnyxNft1155Auction.status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CurrentStatus\",\"outputs\":[{\"internalType\":\"enum OnyxNft1155Auction.status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OnyxNft1155Auctions.sol\":\"OnyxNft1155Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"OnyxNft1155Auctions.sol\":{\"keccak256\":\"0x9ee13388664f86c6026dab541f0d9dfdaff53622081ebfe2d1e9c07c3a99b2b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f10fc7133c21d37836b7abe071c161f760bfb591df625f071d3a1f820042ffbb\",\"dweb:/ipfs/QmNhQfnLqWHkJGnvLXsFub7L1Z7pj7PDnVJfaeWu5k44n9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"OnyxNft1155Royalties.sol": {
				"OnyxNftErc20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "RoyaltiesTransfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "Price",
									"type": "uint256"
								}
							],
							"name": "_deductOnyxNftFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OnyxNft1155Royalties.sol\":56:2439  contract OnyxNftErc20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OnyxNft1155Royalties.sol\":56:2439  contract OnyxNftErc20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd206b944\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"OnyxNft1155Royalties.sol\":1377:1381  uint */\n      0x00\n        /* \"OnyxNft1155Royalties.sol\":1424:1429  Price */\n      dup2\n        /* \"OnyxNft1155Royalties.sol\":1415:1420  10000 */\n      0x2710\n        /* \"OnyxNft1155Royalties.sol\":1408:1413  10000 */\n      dup1\n        /* \"OnyxNft1155Royalties.sol\":1402:1407  Price */\n      dup5\n        /* \"OnyxNft1155Royalties.sol\":1402:1413  Price/10000 */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"OnyxNft1155Royalties.sol\":1401:1420  (Price/10000)*10000 */\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"OnyxNft1155Royalties.sol\":1401:1429  (Price/10000)*10000 == Price */\n      eq\n        /* \"OnyxNft1155Royalties.sol\":1393:1478  require((Price/10000)*10000 == Price, \"Error! Onyx NFT fee Too small or in Decimals\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"OnyxNft1155Royalties.sol\":1504:1508  1000 */\n      0x03e8\n        /* \"OnyxNft1155Royalties.sol\":1501:1503  25 */\n      0x19\n        /* \"OnyxNft1155Royalties.sol\":1495:1500  Price */\n      dup4\n        /* \"OnyxNft1155Royalties.sol\":1495:1503  Price*25 */\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n        /* \"OnyxNft1155Royalties.sol\":1495:1508  Price*25/1000 */\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n        /* \"OnyxNft1155Royalties.sol\":1488:1508  return Price*25/1000 */\n      swap1\n      pop\n        /* \"OnyxNft1155Royalties.sol\":1318:1515  function _deductOnyxNftFee(uint Price) public pure returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_21:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_23\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":228:347   */\n    tag_26:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_29\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:853   */\n    tag_30:\n        /* \"#utility.yul\":629:632   */\n      0x00\n        /* \"#utility.yul\":650:717   */\n      tag_32\n        /* \"#utility.yul\":714:716   */\n      0x2c\n        /* \"#utility.yul\":709:712   */\n      dup4\n        /* \"#utility.yul\":650:717   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":643:717   */\n      swap2\n      pop\n        /* \"#utility.yul\":726:819   */\n      tag_34\n        /* \"#utility.yul\":815:818   */\n      dup3\n        /* \"#utility.yul\":726:819   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":844:846   */\n      0x40\n        /* \"#utility.yul\":839:842   */\n      dup3\n        /* \"#utility.yul\":835:847   */\n      add\n        /* \"#utility.yul\":828:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":487:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:977   */\n    tag_36:\n        /* \"#utility.yul\":946:970   */\n      tag_38\n        /* \"#utility.yul\":964:969   */\n      dup2\n        /* \"#utility.yul\":946:970   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":941:944   */\n      dup3\n        /* \"#utility.yul\":934:971   */\n      mstore\n        /* \"#utility.yul\":859:977   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1402   */\n    tag_17:\n        /* \"#utility.yul\":1149:1153   */\n      0x00\n        /* \"#utility.yul\":1187:1189   */\n      0x20\n        /* \"#utility.yul\":1176:1185   */\n      dup3\n        /* \"#utility.yul\":1172:1190   */\n      add\n        /* \"#utility.yul\":1164:1190   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1245   */\n      dup2\n        /* \"#utility.yul\":1230:1234   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      sub\n        /* \"#utility.yul\":1222:1223   */\n      0x00\n        /* \"#utility.yul\":1211:1220   */\n      dup4\n        /* \"#utility.yul\":1207:1224   */\n      add\n        /* \"#utility.yul\":1200:1247   */\n      mstore\n        /* \"#utility.yul\":1264:1395   */\n      tag_41\n        /* \"#utility.yul\":1390:1394   */\n      dup2\n        /* \"#utility.yul\":1264:1395   */\n      tag_30\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1256:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1630   */\n    tag_9:\n        /* \"#utility.yul\":1501:1505   */\n      0x00\n        /* \"#utility.yul\":1539:1541   */\n      0x20\n        /* \"#utility.yul\":1528:1537   */\n      dup3\n        /* \"#utility.yul\":1524:1542   */\n      add\n        /* \"#utility.yul\":1516:1542   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1623   */\n      tag_43\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1605:1622   */\n      add\n        /* \"#utility.yul\":1596:1602   */\n      dup5\n        /* \"#utility.yul\":1552:1623   */\n      tag_36\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1408:1630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1717:1886   */\n    tag_33:\n        /* \"#utility.yul\":1801:1812   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1830:1833   */\n      dup3\n        /* \"#utility.yul\":1823:1842   */\n      mstore\n        /* \"#utility.yul\":1875:1879   */\n      0x20\n        /* \"#utility.yul\":1870:1873   */\n      dup3\n        /* \"#utility.yul\":1866:1880   */\n      add\n        /* \"#utility.yul\":1851:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1717:1886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2077   */\n    tag_12:\n        /* \"#utility.yul\":1932:1933   */\n      0x00\n        /* \"#utility.yul\":1949:1969   */\n      tag_48\n        /* \"#utility.yul\":1967:1968   */\n      dup3\n        /* \"#utility.yul\":1949:1969   */\n      tag_39\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1944:1969   */\n      swap2\n      pop\n        /* \"#utility.yul\":1983:2003   */\n      tag_49\n        /* \"#utility.yul\":2001:2002   */\n      dup4\n        /* \"#utility.yul\":1983:2003   */\n      tag_39\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1978:2003   */\n      swap3\n      pop\n        /* \"#utility.yul\":2022:2023   */\n      dup3\n        /* \"#utility.yul\":2012:2047   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":2027:2045   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2012:2047   */\n    tag_50:\n        /* \"#utility.yul\":2069:2070   */\n      dup3\n        /* \"#utility.yul\":2066:2067   */\n      dup3\n        /* \"#utility.yul\":2062:2071   */\n      div\n        /* \"#utility.yul\":2057:2071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:2077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2083:2431   */\n    tag_14:\n        /* \"#utility.yul\":2123:2130   */\n      0x00\n        /* \"#utility.yul\":2146:2166   */\n      tag_54\n        /* \"#utility.yul\":2164:2165   */\n      dup3\n        /* \"#utility.yul\":2146:2166   */\n      tag_39\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2141:2166   */\n      swap2\n      pop\n        /* \"#utility.yul\":2180:2200   */\n      tag_55\n        /* \"#utility.yul\":2198:2199   */\n      dup4\n        /* \"#utility.yul\":2180:2200   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2175:2200   */\n      swap3\n      pop\n        /* \"#utility.yul\":2368:2369   */\n      dup2\n        /* \"#utility.yul\":2300:2366   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2296:2370   */\n      div\n        /* \"#utility.yul\":2293:2294   */\n      dup4\n        /* \"#utility.yul\":2290:2371   */\n      gt\n        /* \"#utility.yul\":2285:2286   */\n      dup3\n        /* \"#utility.yul\":2278:2287   */\n      iszero\n        /* \"#utility.yul\":2271:2288   */\n      iszero\n        /* \"#utility.yul\":2267:2372   */\n      and\n        /* \"#utility.yul\":2264:2395   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2375:2393   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2264:2395   */\n    tag_56:\n        /* \"#utility.yul\":2423:2424   */\n      dup3\n        /* \"#utility.yul\":2420:2421   */\n      dup3\n        /* \"#utility.yul\":2416:2425   */\n      mul\n        /* \"#utility.yul\":2405:2425   */\n      swap1\n      pop\n        /* \"#utility.yul\":2083:2431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2514   */\n    tag_39:\n        /* \"#utility.yul\":2474:2481   */\n      0x00\n        /* \"#utility.yul\":2503:2508   */\n      dup2\n        /* \"#utility.yul\":2492:2508   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:2700   */\n    tag_58:\n        /* \"#utility.yul\":2568:2645   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2565:2566   */\n      0x00\n        /* \"#utility.yul\":2558:2646   */\n      mstore\n        /* \"#utility.yul\":2665:2669   */\n      0x11\n        /* \"#utility.yul\":2662:2663   */\n      0x04\n        /* \"#utility.yul\":2655:2670   */\n      mstore\n        /* \"#utility.yul\":2689:2693   */\n      0x24\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2679:2694   */\n      revert\n        /* \"#utility.yul\":2706:2886   */\n    tag_52:\n        /* \"#utility.yul\":2754:2831   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2751:2752   */\n      0x00\n        /* \"#utility.yul\":2744:2832   */\n      mstore\n        /* \"#utility.yul\":2851:2855   */\n      0x12\n        /* \"#utility.yul\":2848:2849   */\n      0x04\n        /* \"#utility.yul\":2841:2856   */\n      mstore\n        /* \"#utility.yul\":2875:2879   */\n      0x24\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2865:2880   */\n      revert\n        /* \"#utility.yul\":3015:3132   */\n    tag_28:\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3121:3122   */\n      dup1\n        /* \"#utility.yul\":3114:3126   */\n      revert\n        /* \"#utility.yul\":3138:3369   */\n    tag_35:\n        /* \"#utility.yul\":3278:3312   */\n      0x4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72\n        /* \"#utility.yul\":3274:3275   */\n      0x00\n        /* \"#utility.yul\":3266:3272   */\n      dup3\n        /* \"#utility.yul\":3262:3276   */\n      add\n        /* \"#utility.yul\":3255:3313   */\n      mstore\n        /* \"#utility.yul\":3347:3361   */\n      0x20696e20446563696d616c730000000000000000000000000000000000000000\n        /* \"#utility.yul\":3342:3344   */\n      0x20\n        /* \"#utility.yul\":3334:3340   */\n      dup3\n        /* \"#utility.yul\":3330:3345   */\n      add\n        /* \"#utility.yul\":3323:3362   */\n      mstore\n        /* \"#utility.yul\":3138:3369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3497   */\n    tag_24:\n        /* \"#utility.yul\":3448:3472   */\n      tag_67\n        /* \"#utility.yul\":3466:3471   */\n      dup2\n        /* \"#utility.yul\":3448:3472   */\n      tag_39\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":3441:3446   */\n      dup2\n        /* \"#utility.yul\":3438:3473   */\n      eq\n        /* \"#utility.yul\":3428:3491   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":3487:3488   */\n      0x00\n        /* \"#utility.yul\":3484:3485   */\n      dup1\n        /* \"#utility.yul\":3477:3489   */\n      revert\n        /* \"#utility.yul\":3428:3491   */\n    tag_68:\n        /* \"#utility.yul\":3375:3497   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610331806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d206b94414610030575b600080fd5b61004a600480360381019061004591906100f2565b610060565b6040516100579190610171565b60405180910390f35b6000816127108084610072919061019d565b61007c91906101ce565b146100bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b390610151565b60405180910390fd5b6103e86019836100cc91906101ce565b6100d6919061019d565b9050919050565b6000813590506100ec816102e4565b92915050565b60006020828403121561010857610107610290565b5b6000610116848285016100dd565b91505092915050565b600061012c602c8361018c565b915061013782610295565b604082019050919050565b61014b81610228565b82525050565b6000602082019050818103600083015261016a8161011f565b9050919050565b60006020820190506101866000830184610142565b92915050565b600082825260208201905092915050565b60006101a882610228565b91506101b383610228565b9250826101c3576101c2610261565b5b828204905092915050565b60006101d982610228565b91506101e483610228565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561021d5761021c610232565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b6102ed81610228565b81146102f857600080fd5b5056fea264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD206B944 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST EQ PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP5 DUP3 DUP6 ADD PUSH2 0xDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C PUSH1 0x2C DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x137 DUP3 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x261 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x232 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x228 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xF13FB03028E7986E REVERT DUP14 OR LOG3 LOG1 0xDA 0xD1 0x24 GT PUSH13 0xDF614CD8F2995BF9DA606B904F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:2383:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_deductOnyxNftFee_1884": {
									"entryPoint": 96,
									"id": 1884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3500:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "7:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:11"
															},
															"nodeType": "YulIf",
															"src": "228:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:11",
														"type": ""
													}
												],
												"src": "152:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "650:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "815:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																	"nodeType": "YulIdentifier",
																	"src": "726:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "828:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "839:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "828:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "621:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "629:3:11",
														"type": ""
													}
												],
												"src": "487:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "941:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "964:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "946:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "934:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "912:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "919:3:11",
														"type": ""
													}
												],
												"src": "859:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1230:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1236:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1390:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1264:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1134:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1149:4:11",
														"type": ""
													}
												],
												"src": "983:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1528:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1524:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1516:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1552:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1478:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1490:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1501:4:11",
														"type": ""
													}
												],
												"src": "1408:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1669:6:11",
														"type": ""
													}
												],
												"src": "1636:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1813:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1830:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1851:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1851:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1785:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1790:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1801:11:11",
														"type": ""
													}
												],
												"src": "1717:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1944:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1949:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1944:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2001:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1983:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1978:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2025:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2022:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:9:11"
															},
															"nodeType": "YulIf",
															"src": "2012:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2066:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2057:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1923:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1926:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1932:1:11",
														"type": ""
													}
												],
												"src": "1892:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2131:300:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2141:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2164:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2146:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2141:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2175:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2180:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2175:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2375:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2285:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2278:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2278:9:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2271:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2293:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2300:66:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2368:1:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2296:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2296:74:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2290:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:81:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2267:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:105:11"
															},
															"nodeType": "YulIf",
															"src": "2264:131:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2405:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2420:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2423:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2416:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2405:7:11"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2114:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2117:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2123:7:11",
														"type": ""
													}
												],
												"src": "2083:348:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2482:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2492:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2503:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2492:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2464:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2474:7:11",
														"type": ""
													}
												],
												"src": "2437:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2689:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2520:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2754:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2865:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2706:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2892:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3104:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3121:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3124:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3015:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3244:125:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3274:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3262:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3262:14:11"
																	},
																	{
																		"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3278:34:11",
																		"type": "",
																		"value": "Error! Onyx NFT fee Too small or"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3255:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3334:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3330:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3330:15:11"
																	},
																	{
																		"hexValue": "20696e20446563696d616c73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3347:14:11",
																		"type": "",
																		"value": " in Decimals"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3323:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3323:39:11"
														}
													]
												},
												"name": "store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3236:6:11",
														"type": ""
													}
												],
												"src": "3138:231:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3418:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3475:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3484:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3487:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3477:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3477:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3477:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3441:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3466:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3448:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3448:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3438:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:43:11"
															},
															"nodeType": "YulIf",
															"src": "3428:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3411:5:11",
														"type": ""
													}
												],
												"src": "3375:122:11"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error! Onyx NFT fee Too small or\")\n\n        mstore(add(memPtr, 32), \" in Decimals\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d206b94414610030575b600080fd5b61004a600480360381019061004591906100f2565b610060565b6040516100579190610171565b60405180910390f35b6000816127108084610072919061019d565b61007c91906101ce565b146100bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b390610151565b60405180910390fd5b6103e86019836100cc91906101ce565b6100d6919061019d565b9050919050565b6000813590506100ec816102e4565b92915050565b60006020828403121561010857610107610290565b5b6000610116848285016100dd565b91505092915050565b600061012c602c8361018c565b915061013782610295565b604082019050919050565b61014b81610228565b82525050565b6000602082019050818103600083015261016a8161011f565b9050919050565b60006020820190506101866000830184610142565b92915050565b600082825260208201905092915050565b60006101a882610228565b91506101b383610228565b9250826101c3576101c2610261565b5b828204905092915050565b60006101d982610228565b91506101e483610228565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561021d5761021c610232565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7260008201527f20696e20446563696d616c730000000000000000000000000000000000000000602082015250565b6102ed81610228565b81146102f857600080fd5b5056fea264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD206B944 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2710 DUP1 DUP5 PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST EQ PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x19 DUP4 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC DUP2 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP5 DUP3 DUP6 ADD PUSH2 0xDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C PUSH1 0x2C DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x137 DUP3 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x261 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP3 PUSH2 0x228 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4 DUP4 PUSH2 0x228 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x232 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20696E20446563696D616C730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x228 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xF13FB03028E7986E REVERT DUP14 OR LOG3 LOG1 0xDA 0xD1 0x24 GT PUSH13 0xDF614CD8F2995BF9DA606B904F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:2383:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1377:4;1424:5;1415;1408;1402;:11;;;;:::i;:::-;1401:19;;;;:::i;:::-;:28;1393:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1504:4;1501:2;1495:5;:8;;;;:::i;:::-;:13;;;;:::i;:::-;1488:20;;1318:197;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:366::-;629:3;650:67;714:2;709:3;650:67;:::i;:::-;643:74;;726:93;815:3;726:93;:::i;:::-;844:2;839:3;835:12;828:19;;487:366;;;:::o;859:118::-;946:24;964:5;946:24;:::i;:::-;941:3;934:37;859:118;;:::o;983:419::-;1149:4;1187:2;1176:9;1172:18;1164:26;;1236:9;1230:4;1226:20;1222:1;1211:9;1207:17;1200:47;1264:131;1390:4;1264:131;:::i;:::-;1256:139;;983:419;;;:::o;1408:222::-;1501:4;1539:2;1528:9;1524:18;1516:26;;1552:71;1620:1;1609:9;1605:17;1596:6;1552:71;:::i;:::-;1408:222;;;;:::o;1717:169::-;1801:11;1835:6;1830:3;1823:19;1875:4;1870:3;1866:14;1851:29;;1717:169;;;;:::o;1892:185::-;1932:1;1949:20;1967:1;1949:20;:::i;:::-;1944:25;;1983:20;2001:1;1983:20;:::i;:::-;1978:25;;2022:1;2012:35;;2027:18;;:::i;:::-;2012:35;2069:1;2066;2062:9;2057:14;;1892:185;;;;:::o;2083:348::-;2123:7;2146:20;2164:1;2146:20;:::i;:::-;2141:25;;2180:20;2198:1;2180:20;:::i;:::-;2175:25;;2368:1;2300:66;2296:74;2293:1;2290:81;2285:1;2278:9;2271:17;2267:105;2264:131;;;2375:18;;:::i;:::-;2264:131;2423:1;2420;2416:9;2405:20;;2083:348;;;;:::o;2437:77::-;2474:7;2503:5;2492:16;;2437:77;;;:::o;2520:180::-;2568:77;2565:1;2558:88;2665:4;2662:1;2655:15;2689:4;2686:1;2679:15;2706:180;2754:77;2751:1;2744:88;2851:4;2848:1;2841:15;2875:4;2872:1;2865:15;3015:117;3124:1;3121;3114:12;3138:231;3278:34;3274:1;3266:6;3262:14;3255:58;3347:14;3342:2;3334:6;3330:15;3323:39;3138:231;:::o;3375:122::-;3448:24;3466:5;3448:24;:::i;:::-;3441:5;3438:35;3428:63;;3487:1;3484;3477:12;3428:63;3375:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163400",
								"executionCost": "208",
								"totalCost": "163608"
							},
							"external": {
								"_deductOnyxNftFee(uint256)": "infinite"
							},
							"internal": {
								"_SendMinterFee(uint256,uint256,address payable)": "infinite",
								"_royaltyAndOnyxNftFee(uint256,uint256,address payable,address payable)": "infinite",
								"_setTokenRoyalty(uint256,address payable,uint256)": "infinite",
								"_transferAmountToSeller(uint256,address payable)": "infinite",
								"deductAmount(address,uint256)": "infinite",
								"depositBidAmmount(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 2439,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067f13fb03028e7986efd8d17a3a1dad124116cdf614cd8f2995bf9da606b904f64736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "D206B944"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 56,
											"end": 2439,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1407,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1429,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1393,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1515,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 629,
											"end": 632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 643,
											"end": 717,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 643,
											"end": 717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 835,
											"end": 847,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 828,
											"end": 847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 828,
											"end": 847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 964,
											"end": 969,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 941,
											"end": 944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 934,
											"end": 971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1172,
											"end": 1190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1200,
											"end": 1247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2077,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2200,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2366,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2370,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2371,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2267,
											"end": 2372,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2431,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2514,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2520,
											"end": 2700,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2520,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2568,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2669,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2670,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2689,
											"end": 2693,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2886,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2706,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2754,
											"end": 2831,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2832,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3015,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3278,
											"end": 3312,
											"name": "PUSH",
											"source": 11,
											"value": "4572726F7221204F6E7978204E46542066656520546F6F20736D616C6C206F72"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3262,
											"end": 3276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3255,
											"end": 3313,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "PUSH",
											"source": 11,
											"value": "20696E20446563696D616C730000000000000000000000000000000000000000"
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3323,
											"end": 3362,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3369,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3446,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3473,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3375,
											"end": 3497,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_deductOnyxNftFee(uint256)": "d206b944"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"_deductOnyxNftFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OnyxNft1155Royalties.sol\":\"OnyxNftErc20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"OnyxNft1155Royalties.sol\":{\"keccak256\":\"0xeec794cb546dc7546deb5b39e4b9bf9df69d1f755cc3debf80a95762d5ec1d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9c6c906532cf1a6ef029b41d98613f12209ae0a746cf5b26d5cbd2c59546cb6\",\"dweb:/ipfs/QmSrgHGk811mkkvYUMoH1P7Pu9BRVUsiRR8K8KsRFE79oh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155": [
							1174
						],
						"ERC1155Burnable": [
							1243
						],
						"ERC165": [
							1267
						],
						"IERC1155": [
							1359
						],
						"IERC1155Receiver": [
							1400
						],
						"IERC165": [
							1412
						],
						"OnyxNft1155Auction": [
							1751
						],
						"OnyxNftErc20": [
							1978
						]
					},
					"id": 326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "130:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "154:33:2"
						},
						{
							"absolutePath": "ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 1175,
							"src": "188:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155Burnable.sol",
							"file": "./ERC1155Burnable.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 1244,
							"src": "213:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "OnyxNft1155Royalties.sol",
							"file": "./OnyxNft1155Royalties.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 1979,
							"src": "245:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "OnyxNft1155Auctions.sol",
							"file": "./OnyxNft1155Auctions.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 1752,
							"src": "282:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "130:187:2"
				},
				"id": 2
			},
			"ERC1155.sol": {
				"ast": {
					"absolutePath": "ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155": [
							1174
						],
						"ERC165": [
							1267
						],
						"IERC1155": [
							1359
						],
						"IERC1155Receiver": [
							1400
						],
						"IERC165": [
							1412
						]
					},
					"id": 1175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 1360,
							"src": "119:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 1401,
							"src": "144:32:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 297,
							"src": "177:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 319,
							"src": "201:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165.sol",
							"file": "./ERC165.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 1268,
							"src": "225:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 334,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "483:7:3"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:3"
								},
								{
									"baseName": {
										"id": 336,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1267,
										"src": "492:6:3"
									},
									"id": 337,
									"nodeType": "InheritanceSpecifier",
									"src": "492:6:3"
								},
								{
									"baseName": {
										"id": 338,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "500:8:3"
									},
									"id": 339,
									"nodeType": "InheritanceSpecifier",
									"src": "500:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 333,
								"nodeType": "StructuredDocumentation",
								"src": "248:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1174,
							"linearizedBaseContracts": [
								1174,
								1359,
								1267,
								1412,
								318
							],
							"name": "ERC1155",
							"nameLocation": "472:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 342,
									"libraryName": {
										"id": 340,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "521:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "515:26:3",
									"typeName": {
										"id": 341,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "653:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "596:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 347,
										"keyType": {
											"id": 343,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "604:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "596:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 346,
											"keyType": {
												"id": 344,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "623:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "615:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 345,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "634:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 354,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "772:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "719:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 353,
										"keyType": {
											"id": 349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "727:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "719:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 352,
											"keyType": {
												"id": 350,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "738:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 351,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "757:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1028:133:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 366,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1046:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1065:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1057:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 367,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1057:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1057:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1046:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1038:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1038:77:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 375,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "1132:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 377,
														"indexExpression": {
															"id": 376,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1142:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1132:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 379,
													"indexExpression": {
														"id": 378,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1146:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1132:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 380,
												"nodeType": "Return",
												"src": "1125:29:3"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "797:131:3",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "942:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1001:8:3"
									},
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "977:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "969:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:29:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1019:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:3"
									},
									"scope": 1174,
									"src": "933:228:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1491:335:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 397,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "1509:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1509:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 399,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "1528:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1528:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1509:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1540:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1501:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1501:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1501:83:3"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "1612:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "1595:30:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 407,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1595:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 408,
															"nodeType": "ArrayTypeName",
															"src": "1595:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 413,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1642:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1642:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1628:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 410,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 411,
															"nodeType": "ArrayTypeName",
															"src": "1632:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:63:3"
											},
											{
												"body": {
													"id": 441,
													"nodeType": "Block",
													"src": "1715:74:3",
													"statements": [
														{
															"expression": {
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 428,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1729:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 430,
																	"indexExpression": {
																		"id": 429,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "1743:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1729:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 432,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "1758:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 434,
																			"indexExpression": {
																				"id": 433,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "1767:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1758:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 435,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "1771:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 437,
																			"indexExpression": {
																				"id": 436,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "1775:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1771:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 431,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "1748:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1748:30:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1729:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 440,
															"nodeType": "ExpressionStatement",
															"src": "1729:49:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 421,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1689:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 422,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1693:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1693:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"initializationExpression": {
													"assignments": [
														418
													],
													"declarations": [
														{
															"constant": false,
															"id": 418,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1682:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 442,
															"src": "1674:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 417,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1674:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 420,
													"initialValue": {
														"hexValue": "30",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1686:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1674:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1710:3:3",
														"subExpression": {
															"id": 425,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "1712:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 427,
													"nodeType": "ExpressionStatement",
													"src": "1710:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1669:120:3"
											},
											{
												"expression": {
													"id": 443,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "1806:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 395,
												"id": 444,
												"nodeType": "Return",
												"src": "1799:20:3"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1167:146:3",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1327:14:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 391,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1443:8:3"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "1359:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1342:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 384,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1342:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 385,
													"nodeType": "ArrayTypeName",
													"src": "1342:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1386:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1369:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 387,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1369:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 388,
													"nodeType": "ArrayTypeName",
													"src": "1369:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:49:3"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1469:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1469:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "1469:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:18:3"
									},
									"scope": 1174,
									"src": "1318:508:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1348
									],
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1978:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 456,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2007:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2007:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "2021:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2031:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 455,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "1988:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1988:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "1988:52:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1832:57:3",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1903:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 453,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1969:8:3"
									},
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1929:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1921:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1944:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1939:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:33:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:0:3"
									},
									"scope": 1174,
									"src": "1894:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2219:61:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 474,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "2236:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 476,
														"indexExpression": {
															"id": 475,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2255:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2236:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 478,
													"indexExpression": {
														"id": 477,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "2264:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2236:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 473,
												"id": 479,
												"nodeType": "Return",
												"src": "2229:44:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "2053:56:3",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2123:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2195:8:3"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2165:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2157:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:35:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2213:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2213:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:6:3"
									},
									"scope": 1174,
									"src": "2114:166:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "2893:634:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "2911:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2925:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2917:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2917:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2917:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2911:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2903:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2903:66:3"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "2988:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "2980:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2980:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2999:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2980:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3043:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "3053:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3059:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 515,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "3081:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 514,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3063:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3063:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 518,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "3104:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 517,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3086:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 520,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3113:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 510,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "3022:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3022:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "3022:96:3"
											},
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "3137:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "3129:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3129:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 525,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "3151:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3161:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3151:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 529,
													"indexExpression": {
														"id": 528,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3165:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3151:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3129:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "3188:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 533,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "3203:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3188:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3180:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "3180:76:3"
											},
											{
												"id": 548,
												"nodeType": "UncheckedBlock",
												"src": "3266:77:3",
												"statements": [
													{
														"expression": {
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 538,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "3290:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 541,
																	"indexExpression": {
																		"id": 539,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "3300:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3290:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 542,
																"indexExpression": {
																	"id": 540,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "3304:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3290:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 543,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "3312:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 544,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "3326:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3312:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 547,
														"nodeType": "ExpressionStatement",
														"src": "3290:42:3"
													}
												]
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 549,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "3352:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 552,
															"indexExpression": {
																"id": 550,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "3362:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3352:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 553,
														"indexExpression": {
															"id": 551,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3366:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3352:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 554,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "3373:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3352:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "3352:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 558,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3410:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "3420:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3426:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3430:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3434:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "3395:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "3390:51:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3483:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "3493:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3499:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3503:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 570,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3507:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3515:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 565,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3452:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3452:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "3452:68:3"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2286:439:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "2739:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2774:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2766:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2796:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2788:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2836:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2828:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2865:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2852:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2852:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:119:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2893:0:3"
									},
									"scope": 1174,
									"src": "2730:797:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "4061:857:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 592,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "4079:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4079:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 594,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4093:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4093:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4079:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4071:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4071:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "4071:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 601,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "4170:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4184:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4176:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 602,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4176:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4176:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4170:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4188:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "4162:66:3"
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "4247:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "4239:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 610,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4239:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 612,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "4258:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4239:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4302:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4312:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4318:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4322:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 620,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4327:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 621,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4336:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 615,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "4281:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4281:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4281:60:3"
											},
											{
												"body": {
													"id": 681,
													"nodeType": "Block",
													"src": "4393:370:3",
													"statements": [
														{
															"assignments": [
																636
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 636,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "4415:2:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 681,
																	"src": "4407:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 635,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4407:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 640,
															"initialValue": {
																"baseExpression": {
																	"id": 637,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "4420:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 639,
																"indexExpression": {
																	"id": 638,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "4424:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4420:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4407:19:3"
														},
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "4448:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 681,
																	"src": "4440:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4440:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 646,
															"initialValue": {
																"baseExpression": {
																	"id": 643,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4457:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 645,
																"indexExpression": {
																	"id": 644,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "4465:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4457:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4440:27:3"
														},
														{
															"assignments": [
																648
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 648,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "4490:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 681,
																	"src": "4482:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 647,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4482:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 649,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "4504:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 651,
																	"indexExpression": {
																		"id": 650,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "4514:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4504:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 653,
																"indexExpression": {
																	"id": 652,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "4518:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4504:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4482:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 656,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "4545:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 657,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "4560:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4545:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4568:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 655,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4537:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4537:76:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 661,
															"nodeType": "ExpressionStatement",
															"src": "4537:76:3"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "4627:85:3",
															"statements": [
																{
																	"expression": {
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 662,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 348,
																					"src": "4655:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 663,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "4665:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4655:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 666,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "4669:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "4655:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 667,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 648,
																				"src": "4677:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 668,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "4691:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4677:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4655:42:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "4655:42:3"
																}
															]
														},
														{
															"expression": {
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 673,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "4725:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 676,
																		"indexExpression": {
																			"id": 674,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "4735:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4725:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 677,
																	"indexExpression": {
																		"id": 675,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "4739:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4725:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 678,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "4746:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4725:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 680,
															"nodeType": "ExpressionStatement",
															"src": "4725:27:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "4372:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 629,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4376:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4376:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4372:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"initializationExpression": {
													"assignments": [
														625
													],
													"declarations": [
														{
															"constant": false,
															"id": 625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4365:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 682,
															"src": "4357:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 624,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4357:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 627,
													"initialValue": {
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4369:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4357:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4388:3:3",
														"subExpression": {
															"id": 632,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4390:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 634,
													"nodeType": "ExpressionStatement",
													"src": "4388:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4352:411:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 684,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4792:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4802:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4808:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4812:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 688,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4817:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 683,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "4778:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4778:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "EmitStatement",
												"src": "4773:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 692,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4872:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4882:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4888:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4892:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 696,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4897:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4906:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 691,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4836:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4836:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "4836:75:3"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3533:335:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "3882:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3973:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3956:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 581,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 582,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4003:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3986:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 584,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3986:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 585,
													"nodeType": "ArrayTypeName",
													"src": "3986:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "4020:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4020:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:139:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1174,
									"src": "3873:1045:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "5421:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 714,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "5439:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5453:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5445:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 715,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5445:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5445:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5439:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5457:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5431:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5431:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "5431:62:3"
											},
											{
												"assignments": [
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5512:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "5504:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 723,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5504:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 725,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "5523:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5523:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5504:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "5567:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5585:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5577:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5577:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5577:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 734,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5589:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 736,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5611:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 735,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5593:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5593:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 739,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "5634:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 738,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5616:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5616:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 741,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5643:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 728,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "5546:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "5546:102:3"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 744,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "5658:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 747,
															"indexExpression": {
																"id": 745,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5668:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5658:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 748,
														"indexExpression": {
															"id": 746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5672:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5658:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 749,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "5679:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5658:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "5658:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 753,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "5715:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5733:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5725:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 754,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5725:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5737:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5741:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 760,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5745:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "5700:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "EmitStatement",
												"src": "5695:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "5793:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5811:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5803:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 765,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5803:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5803:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5815:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5819:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 771,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5823:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 772,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5831:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 763,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "5762:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "5762:74:3"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "4925:362:3",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5301:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5324:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5316:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5344:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5336:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5364:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5356:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5356:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5393:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5380:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5380:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5306:97:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5421:0:3"
									},
									"scope": 1174,
									"src": "5292:551:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "6188:526:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 787,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "6206:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6222:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6214:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 788,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6214:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6214:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6206:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6226:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6198:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6198:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "6198:66:3"
											},
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6283:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "6275:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 796,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6275:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 798,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6294:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6294:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6275:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "6338:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "6348:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6362:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6354:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 804,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6354:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6354:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 809,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "6384:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 808,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "6366:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6366:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 812,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "6407:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 811,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "6389:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6389:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6416:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 801,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "6317:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "6317:102:3"
											},
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "6438:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "6430:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 817,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6430:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 819,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "6452:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 821,
														"indexExpression": {
															"id": 820,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "6462:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6452:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 823,
													"indexExpression": {
														"id": 822,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "6466:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6452:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6430:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "6489:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 827,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "6504:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6489:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6512:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6481:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6481:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "6481:70:3"
											},
											{
												"id": 842,
												"nodeType": "UncheckedBlock",
												"src": "6561:77:3",
												"statements": [
													{
														"expression": {
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 832,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "6585:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 835,
																	"indexExpression": {
																		"id": 833,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "6595:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6585:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 836,
																"indexExpression": {
																	"id": 834,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "6599:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6585:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 837,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "6607:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 838,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "6621:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6607:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6585:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 841,
														"nodeType": "ExpressionStatement",
														"src": "6585:42:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 844,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "6668:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "6678:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6692:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6684:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 846,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6684:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6684:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "6696:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 851,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "6700:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "6653:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6653:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "EmitStatement",
												"src": "6648:59:3"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "5850:229:3",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6093:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6116:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6138:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "6130:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6158:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "6150:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:72:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6188:0:3"
									},
									"scope": 1174,
									"src": "6084:630:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "7037:738:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "7055:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7071:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7063:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 869,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7063:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7063:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7055:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7075:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7047:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7047:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "7047:66:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 878,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "7131:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7131:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 880,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "7145:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7145:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7131:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7161:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7123:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7123:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "7123:81:3"
											},
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7223:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "7215:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 886,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7215:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 888,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "7234:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7215:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "7278:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7288:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7302:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7294:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7294:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7294:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "7306:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "7311:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7320:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 891,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "7257:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7257:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "7257:66:3"
											},
											{
												"body": {
													"id": 952,
													"nodeType": "Block",
													"src": "7375:323:3",
													"statements": [
														{
															"assignments": [
																915
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 915,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7397:2:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 952,
																	"src": "7389:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 914,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7389:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 919,
															"initialValue": {
																"baseExpression": {
																	"id": 916,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "7402:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 918,
																"indexExpression": {
																	"id": 917,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "7406:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7402:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7389:19:3"
														},
														{
															"assignments": [
																921
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 921,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7430:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 952,
																	"src": "7422:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 920,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7422:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 925,
															"initialValue": {
																"baseExpression": {
																	"id": 922,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "7439:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 924,
																"indexExpression": {
																	"id": 923,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "7447:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7439:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7422:27:3"
														},
														{
															"assignments": [
																927
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 927,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7472:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 952,
																	"src": "7464:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 926,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7464:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 933,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 928,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "7486:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 930,
																	"indexExpression": {
																		"id": 929,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7496:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7486:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 932,
																"indexExpression": {
																	"id": 931,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "7500:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7486:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7464:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 935,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "7527:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 936,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "7542:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7527:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7550:38:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 934,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7519:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7519:70:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 940,
															"nodeType": "ExpressionStatement",
															"src": "7519:70:3"
														},
														{
															"id": 951,
															"nodeType": "UncheckedBlock",
															"src": "7603:85:3",
															"statements": [
																{
																	"expression": {
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 941,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 348,
																					"src": "7631:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 944,
																				"indexExpression": {
																					"id": 942,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 915,
																					"src": "7641:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7631:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 945,
																			"indexExpression": {
																				"id": 943,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "7645:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7631:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 946,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "7653:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 947,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 921,
																				"src": "7667:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7653:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7631:42:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 950,
																	"nodeType": "ExpressionStatement",
																	"src": "7631:42:3"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 907,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "7354:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 908,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "7358:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7358:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7354:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"initializationExpression": {
													"assignments": [
														904
													],
													"declarations": [
														{
															"constant": false,
															"id": 904,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7347:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 953,
															"src": "7339:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 903,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7339:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 906,
													"initialValue": {
														"hexValue": "30",
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7351:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7339:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7370:3:3",
														"subExpression": {
															"id": 911,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7370:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 913,
													"nodeType": "ExpressionStatement",
													"src": "7370:3:3"
												},
												"nodeType": "ForStatement",
												"src": "7334:364:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 955,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "7727:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7737:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7751:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7743:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 957,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7743:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7743:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "7755:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 962,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "7760:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 954,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "7713:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7713:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "EmitStatement",
												"src": "7708:60:3"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "6720:183:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "6917:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6945:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "6937:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6937:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6976:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "6959:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 859,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6959:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 860,
													"nodeType": "ArrayTypeName",
													"src": "6959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7006:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "6989:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 862,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6989:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 863,
													"nodeType": "ArrayTypeName",
													"src": "6989:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:92:3"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7037:0:3"
									},
									"scope": 1174,
									"src": "6908:867:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "8033:200:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 977,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "8051:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 978,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "8060:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8051:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8070:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8043:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8043:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "8043:71:3"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 983,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "8124:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 986,
															"indexExpression": {
																"id": 984,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "8143:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8124:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 987,
														"indexExpression": {
															"id": 985,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "8150:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8124:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 988,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "8162:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8124:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "8124:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 992,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "8200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "8207:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8217:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 991,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "8185:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8185:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "EmitStatement",
												"src": "8180:46:3"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "7781:124:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "7919:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7955:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "7947:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7947:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7978:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "7970:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "8001:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "7996:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7996:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7937:78:3"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8033:0:3"
									},
									"scope": 1174,
									"src": "7910:323:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "9379:2:3",
										"statements": []
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "8239:923:3",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "9176:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9214:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9206:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9232:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9262:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9254:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9291:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9274:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1006,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9274:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1007,
													"nodeType": "ArrayTypeName",
													"src": "9274:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9321:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9304:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1009,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9304:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1010,
													"nodeType": "ArrayTypeName",
													"src": "9304:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9351:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9338:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9338:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9196:165:3"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9379:0:3"
									},
									"scope": 1174,
									"src": "9167:214:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "9580:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "9594:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "9594:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9594:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "9590:516:3",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "9611:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1059,
																		"nodeType": "Block",
																		"src": "9728:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1048,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1046,
																						"src": "9750:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1049,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1400,
																								"src": "9762:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1400_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1050,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1381,
																							"src": "9762:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1051,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "9762:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "9750:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1058,
																				"nodeType": "IfStatement",
																				"src": "9746:152:3",
																				"trueBody": {
																					"id": 1057,
																					"nodeType": "Block",
																					"src": "9807:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1054,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "9836:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1053,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "9829:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1055,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9829:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1056,
																							"nodeType": "ExpressionStatement",
																							"src": "9829:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1060,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1047,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1046,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "9718:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1060,
																				"src": "9711:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1045,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "9711:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "9710:17:3"
																	},
																	"src": "9702:210:3"
																},
																{
																	"block": {
																		"id": 1068,
																		"nodeType": "Block",
																		"src": "9947:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1065,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1062,
																							"src": "9972:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1064,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "9965:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1066,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9965:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1067,
																				"nodeType": "ExpressionStatement",
																				"src": "9965:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1069,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1063,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1062,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "9939:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1069,
																				"src": "9925:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1061,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "9925:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "9924:22:3"
																	},
																	"src": "9913:81:3"
																},
																{
																	"block": {
																		"id": 1074,
																		"nodeType": "Block",
																		"src": "10001:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1071,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10026:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1070,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "10019:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1072,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10019:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1073,
																				"nodeType": "ExpressionStatement",
																				"src": "10019:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1075,
																	"nodeType": "TryCatchClause",
																	"src": "9995:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1039,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "9668:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1040,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "9678:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1041,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "9684:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1042,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "9688:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1043,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "9696:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1036,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "9646:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1035,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "9629:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1400_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9629:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1400",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1381,
																	"src": "9629:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9629:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1076,
															"nodeType": "TryStatement",
															"src": "9625:471:3"
														}
													]
												}
											}
										]
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "9396:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9444:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "9436:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9470:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "9462:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9492:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "9484:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9484:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9512:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "9504:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9504:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9532:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "9524:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9561:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "9548:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9548:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9426:145:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9580:0:3"
									},
									"scope": 1174,
									"src": "9387:725:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "10337:574:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1097,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "10351:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "10351:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10351:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "10347:558:3",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "10368:537:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1124,
																		"nodeType": "Block",
																		"src": "10522:189:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1113,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1111,
																						"src": "10544:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1114,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1400,
																								"src": "10556:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1400_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1115,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1399,
																							"src": "10556:39:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "10556:48:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "10544:60:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1123,
																				"nodeType": "IfStatement",
																				"src": "10540:157:3",
																				"trueBody": {
																					"id": 1122,
																					"nodeType": "Block",
																					"src": "10606:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1119,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "10635:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1118,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "10628:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1120,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10628:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1121,
																							"nodeType": "ExpressionStatement",
																							"src": "10628:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1125,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1112,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1111,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "10499:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1125,
																				"src": "10492:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1110,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "10492:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "10474:47:3"
																	},
																	"src": "10466:245:3"
																},
																{
																	"block": {
																		"id": 1133,
																		"nodeType": "Block",
																		"src": "10746:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1130,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1127,
																							"src": "10771:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1129,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "10764:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10764:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1132,
																				"nodeType": "ExpressionStatement",
																				"src": "10764:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1134,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1128,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1127,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "10738:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1134,
																				"src": "10724:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1126,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "10724:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "10723:22:3"
																	},
																	"src": "10712:81:3"
																},
																{
																	"block": {
																		"id": 1139,
																		"nodeType": "Block",
																		"src": "10800:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1136,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10825:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1135,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "10818:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10818:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1138,
																				"nodeType": "ExpressionStatement",
																				"src": "10818:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1140,
																	"nodeType": "TryCatchClause",
																	"src": "10794:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "10430:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "10440:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1106,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "10446:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1107,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "10451:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1108,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "10460:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1101,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "10403:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1100,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "10386:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1400_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10386:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1400",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1399,
																	"src": "10386:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10386:79:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1141,
															"nodeType": "TryStatement",
															"src": "10382:513:3"
														}
													]
												}
											}
										]
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "10127:35:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10180:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10172:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10206:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10198:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10228:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10220:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10220:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10257:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10240:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1087,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10240:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1088,
													"nodeType": "ArrayTypeName",
													"src": "10240:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10287:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10270:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1090,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10270:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1091,
													"nodeType": "ArrayTypeName",
													"src": "10270:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10317:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10304:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10304:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10162:165:3"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10337:0:3"
									},
									"scope": 1174,
									"src": "10118:793:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "11001:109:3",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "11028:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "11011:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1155,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11011:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1156,
															"nodeType": "ArrayTypeName",
															"src": "11011:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11050:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11036:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1158,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11040:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1159,
															"nodeType": "ArrayTypeName",
															"src": "11040:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11036:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11011:41:3"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1164,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "11062:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1166,
														"indexExpression": {
															"hexValue": "30",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11068:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11062:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1167,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "11073:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11062:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "11062:18:3"
											},
											{
												"expression": {
													"id": 1170,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "11098:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1171,
												"nodeType": "Return",
												"src": "11091:12:3"
											}
										]
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "10926:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "10952:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "10944:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10943:17:3"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "10983:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10983:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1150,
													"nodeType": "ArrayTypeName",
													"src": "10983:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10982:18:3"
									},
									"scope": 1174,
									"src": "10917:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1175,
							"src": "463:10649:3",
							"usedErrors": []
						}
					],
					"src": "94:11018:3"
				},
				"id": 3
			},
			"ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "ERC1155Burnable.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155": [
							1174
						],
						"ERC1155Burnable": [
							1243
						],
						"ERC165": [
							1267
						],
						"IERC1155": [
							1359
						],
						"IERC1155Receiver": [
							1400
						],
						"IERC165": [
							1412
						]
					},
					"id": 1244,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1244,
							"sourceUnit": 1175,
							"src": "138:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1174,
										"src": "378:7:4"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "378:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "163:177:4",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1243,
							"linearizedBaseContracts": [
								1243,
								1174,
								1359,
								1267,
								1412,
								318
							],
							"name": "ERC1155Burnable",
							"nameLocation": "359:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "495:215:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "526:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1191,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "537:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "537:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "526:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1195,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "570:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1196,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "579:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "579:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1194,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "553:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "553:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "526:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "606:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "505:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:154:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "505:154:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1204,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "684:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "693:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "697:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "678:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "678:25:4"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "401:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "423:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "415:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "448:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "440:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "460:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:74:4"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:4"
									},
									"scope": 1243,
									"src": "392:318:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "844:214:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1222,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "875:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1223,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "886:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "886:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "875:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1227,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "919:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1228,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "928:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "928:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1226,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "902:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "902:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "875:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "955:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:154:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "854:154:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "1030:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "1039:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1238,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "1044:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1235,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1019:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "1019:32:4"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "725:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "752:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "744:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "786:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "769:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1213,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1214,
													"nodeType": "ArrayTypeName",
													"src": "769:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "816:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "799:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1216,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1217,
													"nodeType": "ArrayTypeName",
													"src": "799:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:94:4"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:0:4"
									},
									"scope": 1243,
									"src": "716:342:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1244,
							"src": "341:719:4",
							"usedErrors": []
						}
					],
					"src": "113:947:4"
				},
				"id": 4
			},
			"ERC165.sol": {
				"ast": {
					"absolutePath": "ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1267
						],
						"IERC165": [
							1412
						]
					},
					"id": 1268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1245,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1413,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1248,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1412,
										"src": "754:7:5"
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1267,
							"linearizedBaseContracts": [
								1267,
								1412
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1411
									],
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1258,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1260,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1412_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1412_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1259,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1412",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1264,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1254,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1251,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 1267,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1268,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:887:5"
				},
				"id": 5
			},
			"IERC1155.sol": {
				"ast": {
					"absolutePath": "IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1359
						],
						"IERC165": [
							1412
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 1413,
							"src": "171:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1272,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1412,
										"src": "385:7:6"
									},
									"id": 1273,
									"nodeType": "InheritanceSpecifier",
									"src": "385:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1271,
								"nodeType": "StructuredDocumentation",
								"src": "196:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1359,
							"linearizedBaseContracts": [
								1359,
								1412
							],
							"name": "IERC1155",
							"nameLocation": "372:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "398:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1286,
									"name": "TransferSingle",
									"nameLocation": "530:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "561:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "545:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "587:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "571:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "609:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "593:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "621:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "613:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "633:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "625:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:95:6"
									},
									"src": "524:116:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "646:144:6",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1301,
									"name": "TransferBatch",
									"nameLocation": "801:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "840:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "824:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "874:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "858:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "904:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "888:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "926:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "916:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1294,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1295,
													"nodeType": "ArrayTypeName",
													"src": "916:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "949:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "939:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1297,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "939:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1298,
													"nodeType": "ArrayTypeName",
													"src": "939:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:147:6"
									},
									"src": "795:167:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "968:147:6",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1310,
									"name": "ApprovalForAll",
									"nameLocation": "1126:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1157:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1141:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1182:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1166:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1197:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1192:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1192:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:66:6"
									},
									"src": "1120:87:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "1213:343:6",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1317,
									"name": "URI",
									"nameLocation": "1567:3:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1578:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1571:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1571:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1601:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1585:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1570:34:6"
									},
									"src": "1561:44:6"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1611:173:6",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1798:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1816:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1808:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1833:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1825:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1807:29:6"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1860:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:9:6"
									},
									"scope": 1359,
									"src": "1789:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "1875:188:6",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2077:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2111:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2092:27:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1329,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2092:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1330,
													"nodeType": "ArrayTypeName",
													"src": "2092:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2140:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2121:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1332,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1333,
													"nodeType": "ArrayTypeName",
													"src": "2121:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:53:6"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2192:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2192:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "2192:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:18:6"
									},
									"scope": 1359,
									"src": "2068:142:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "2216:248:6",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2478:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2504:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2496:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2519:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2514:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2514:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:33:6"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:6"
									},
									"scope": 1359,
									"src": "2469:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "2544:135:6",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2693:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2718:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2710:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2735:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2727:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:35:6"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2768:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2768:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:6:6"
									},
									"scope": 1359,
									"src": "2684:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "362:2415:6",
							"usedErrors": []
						}
					],
					"src": "95:2682:6"
				},
				"id": 6
			},
			"IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1400
						],
						"IERC165": [
							1412
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 1413,
							"src": "127:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1364,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1412,
										"src": "222:7:7"
									},
									"id": 1365,
									"nodeType": "InheritanceSpecifier",
									"src": "222:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1363,
								"nodeType": "StructuredDocumentation",
								"src": "152:39:7",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								1412
							],
							"name": "IERC1155Receiver",
							"nameLocation": "202:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "236:826:7",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1076:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1111:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1103:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1129:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1159:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1151:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1179:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1171:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1209:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1194:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1194:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:126:7"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1238:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1238:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:8:7"
									},
									"scope": 1400,
									"src": "1067:179:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "1252:994:7",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2260:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2300:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2292:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2326:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2359:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2340:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1387,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2340:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1388,
													"nodeType": "ArrayTypeName",
													"src": "2340:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2391:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2372:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1390,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2372:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1391,
													"nodeType": "ArrayTypeName",
													"src": "2372:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2407:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2407:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:150:7"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2451:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2451:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:8:7"
									},
									"scope": 1400,
									"src": "2251:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "192:2269:7",
							"usedErrors": []
						}
					],
					"src": "103:2358:7"
				},
				"id": 7
			},
			"IERC165.sol": {
				"ast": {
					"absolutePath": "IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1412
						]
					},
					"id": 1413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1403,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1412,
							"linearizedBaseContracts": [
								1412
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1412,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1413,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:752:8"
				},
				"id": 8
			},
			"OnyxNft1155Auctions.sol": {
				"ast": {
					"absolutePath": "OnyxNft1155Auctions.sol",
					"exportedSymbols": {
						"OnyxNft1155Auction": [
							1751
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751
							],
							"name": "OnyxNft1155Auction",
							"nameLocation": "65:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1420,
									"name": "availableForBids",
									"nameLocation": "114:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "131:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "131:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "137:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "137:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "130:14:9"
									},
									"src": "108:38:9"
								},
								{
									"anonymous": false,
									"id": 1426,
									"name": "removeFormSale",
									"nameLocation": "157:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "173:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "179:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "179:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:15:9"
									},
									"src": "151:37:9"
								},
								{
									"canonicalName": "OnyxNft1155Auction.status",
									"id": 1431,
									"members": [
										{
											"id": 1427,
											"name": "NotOnSale",
											"nameLocation": "206:9:9",
											"nodeType": "EnumValue",
											"src": "206:9:9"
										},
										{
											"id": 1428,
											"name": "onAuction",
											"nameLocation": "217:9:9",
											"nodeType": "EnumValue",
											"src": "217:9:9"
										},
										{
											"id": 1429,
											"name": "onBidding",
											"nameLocation": "228:9:9",
											"nodeType": "EnumValue",
											"src": "228:9:9"
										},
										{
											"id": 1430,
											"name": "OnfixedPrice",
											"nameLocation": "239:12:9",
											"nodeType": "EnumValue",
											"src": "239:12:9"
										}
									],
									"name": "status",
									"nameLocation": "198:6:9",
									"nodeType": "EnumDefinition",
									"src": "193:60:9"
								},
								{
									"constant": false,
									"functionSelector": "e3306a6f",
									"id": 1434,
									"mutability": "mutable",
									"name": "CurrentStatus",
									"nameLocation": "272:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "258:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_status_$1431",
										"typeString": "enum OnyxNft1155Auction.status"
									},
									"typeName": {
										"id": 1433,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1432,
											"name": "status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1431,
											"src": "258:6:9"
										},
										"referencedDeclaration": 1431,
										"src": "258:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_status_$1431",
											"typeString": "enum OnyxNft1155Auction.status"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "OnyxNft1155Auction.NftDetails",
									"id": 1459,
									"members": [
										{
											"constant": false,
											"id": 1437,
											"mutability": "mutable",
											"name": "bidAmount",
											"nameLocation": "326:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "318:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "318:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1436,
												"nodeType": "ArrayTypeName",
												"src": "318:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1440,
											"mutability": "mutable",
											"name": "numOfCopies",
											"nameLocation": "353:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "345:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1439,
												"nodeType": "ArrayTypeName",
												"src": "345:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1443,
											"mutability": "mutable",
											"name": "bidderAddress",
											"nameLocation": "384:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "374:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1442,
												"nodeType": "ArrayTypeName",
												"src": "374:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "startingPrice",
											"nameLocation": "412:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "407:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1444,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "407:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1447,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "440:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "435:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1446,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "435:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "464:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "459:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1448,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "459:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1451,
											"mutability": "mutable",
											"name": "Exists",
											"nameLocation": "486:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "481:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1450,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "481:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1453,
											"mutability": "mutable",
											"name": "minimumPrice",
											"nameLocation": "553:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "548:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1452,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "548:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1455,
											"mutability": "mutable",
											"name": "index",
											"nameLocation": "580:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "575:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1454,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "575:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1458,
											"mutability": "mutable",
											"name": "salestatus",
											"nameLocation": "602:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "595:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_status_$1431",
												"typeString": "enum OnyxNft1155Auction.status"
											},
											"typeName": {
												"id": 1457,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1456,
													"name": "status",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1431,
													"src": "595:6:9"
												},
												"referencedDeclaration": 1431,
												"src": "595:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_status_$1431",
													"typeString": "enum OnyxNft1155Auction.status"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftDetails",
									"nameLocation": "298:10:9",
									"nodeType": "StructDefinition",
									"scope": 1751,
									"src": "291:328:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1466,
									"mutability": "mutable",
									"name": "Nft",
									"nameLocation": "725:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "681:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails))"
									},
									"typeName": {
										"id": 1465,
										"keyType": {
											"id": 1460,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "689:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "681:43:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails))"
										},
										"valueType": {
											"id": 1464,
											"keyType": {
												"id": 1461,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "706:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "698:25:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
												"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails)"
											},
											"valueType": {
												"id": 1463,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1462,
													"name": "NftDetails",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1459,
													"src": "712:10:9"
												},
												"referencedDeclaration": 1459,
												"src": "712:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftDetails_$1459_storage_ptr",
													"typeString": "struct OnyxNft1155Auction.NftDetails"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "780:108:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1473,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "798:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1475,
																		"indexExpression": {
																			"id": 1474,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "802:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1477,
																	"indexExpression": {
																		"id": 1476,
																		"name": "NftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "810:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "798:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Exists",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1451,
																"src": "798:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "827:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "798:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74204f776e6572206f66204e6674206f7220446f6573277420457869737420",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce8fa54ee8facebc029b17917de3e9c7b2815f752271b2d2bdd78bb54ac33033",
																"typeString": "literal_string \"Not Owner of Nft or Does't Exist \""
															},
															"value": "Not Owner of Nft or Does't Exist "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce8fa54ee8facebc029b17917de3e9c7b2815f752271b2d2bdd78bb54ac33033",
																"typeString": "literal_string \"Not Owner of Nft or Does't Exist \""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "790:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "790:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "790:80:9"
											},
											{
												"id": 1484,
												"nodeType": "PlaceholderStatement",
												"src": "880:1:9"
											}
										]
									},
									"id": 1486,
									"name": "NftExist",
									"nameLocation": "743:8:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "761:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "753:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "NftId",
												"nameLocation": "774:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "769:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "769:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:28:9"
									},
									"src": "734:154:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "939:118:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1431",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1493,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "957:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1495,
																		"indexExpression": {
																			"id": 1494,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "961:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "957:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1497,
																	"indexExpression": {
																		"id": 1496,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "968:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "957:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1458,
																"src": "957:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1499,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "989:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "NotOnSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1427,
																"src": "989:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "957:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e667420697320416c7265616479206f6e2053616c65",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1007:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_999bcd91e8e8034883f655a250a2f2a7fc819dc8d9e3d393d4ed5ac19f09f407",
																"typeString": "literal_string \"Error! Nft is Already on Sale\""
															},
															"value": "Error! Nft is Already on Sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_999bcd91e8e8034883f655a250a2f2a7fc819dc8d9e3d393d4ed5ac19f09f407",
																"typeString": "literal_string \"Error! Nft is Already on Sale\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "949:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "949:90:9"
											},
											{
												"id": 1505,
												"nodeType": "PlaceholderStatement",
												"src": "1049:1:9"
											}
										]
									},
									"id": 1507,
									"name": "notOnSale",
									"nameLocation": "902:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "921:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "913:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "932:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "927:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:26:9"
									},
									"src": "893:164:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "1106:128:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1431",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1514,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1124:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1516,
																		"indexExpression": {
																			"id": 1515,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1128:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1124:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1518,
																	"indexExpression": {
																		"id": 1517,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "1135:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1124:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1458,
																"src": "1124:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1520,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1156:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "onBidding",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1429,
																"src": "1156:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "1124:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e4654206973204e6f7420417661696c61626c6520666f7220426964696e67",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_920842a2f4b4ad44a84fc36951e15c80a2c3d941566bf8594b9d81bdfcdce679",
																"typeString": "literal_string \"Error! NFT is Not Available for Biding\""
															},
															"value": "Error! NFT is Not Available for Biding"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_920842a2f4b4ad44a84fc36951e15c80a2c3d941566bf8594b9d81bdfcdce679",
																"typeString": "literal_string \"Error! NFT is Not Available for Biding\""
															}
														],
														"id": 1513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1116:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:100:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "1116:100:9"
											},
											{
												"id": 1526,
												"nodeType": "PlaceholderStatement",
												"src": "1226:1:9"
											}
										]
									},
									"id": 1528,
									"name": "onBidding",
									"nameLocation": "1071:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1089:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1081:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1100:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1095:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:26:9"
									},
									"src": "1062:172:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "1293:125:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1431",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1535,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1312:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1537,
																		"indexExpression": {
																			"id": 1536,
																			"name": "nftOwnerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "1316:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1312:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1539,
																	"indexExpression": {
																		"id": 1538,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "1333:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1312:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1458,
																"src": "1312:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1541,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1354:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "NotOnSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1427,
																"src": "1354:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "1312:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e6674206973204e6f74206f6e2053616c65",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1372:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecbaf141d7f2c47453e740cfb519eacc221ef8c6d5d08c6c6bf3da84fddb35a2",
																"typeString": "literal_string \"Error! Nft is Not on Sale\""
															},
															"value": "Error! Nft is Not on Sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecbaf141d7f2c47453e740cfb519eacc221ef8c6d5d08c6c6bf3da84fddb35a2",
																"typeString": "literal_string \"Error! Nft is Not on Sale\""
															}
														],
														"id": 1534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1303:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1303:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "1303:97:9"
											},
											{
												"id": 1547,
												"nodeType": "PlaceholderStatement",
												"src": "1410:1:9"
											}
										]
									},
									"id": 1549,
									"name": "onSale",
									"nameLocation": "1248:6:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "nftOwnerAddress",
												"nameLocation": "1264:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1256:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1286:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1281:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1281:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:37:9"
									},
									"src": "1239:179:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "1473:129:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_status_$1431",
																"typeString": "enum OnyxNft1155Auction.status"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1556,
																			"name": "Nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1492:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																			}
																		},
																		"id": 1558,
																		"indexExpression": {
																			"id": 1557,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1551,
																			"src": "1496:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1492:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																			"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																		}
																	},
																	"id": 1560,
																	"indexExpression": {
																		"id": 1559,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "1503:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1492:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																		"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																	}
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "salestatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1458,
																"src": "1492:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1562,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1524:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																		"typeString": "type(enum OnyxNft1155Auction.status)"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "OnfixedPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1430,
																"src": "1524:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_status_$1431",
																	"typeString": "enum OnyxNft1155Auction.status"
																}
															},
															"src": "1492:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206973204e6f7420417661696c61626c6520666f72204669786564205072696365",
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1545:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e6d91cec41385810c77b9d3726cd6cf12114847051adc43986fb706c31bdb5d",
																"typeString": "literal_string \"NFT is Not Available for Fixed Price\""
															},
															"value": "NFT is Not Available for Fixed Price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e6d91cec41385810c77b9d3726cd6cf12114847051adc43986fb706c31bdb5d",
																"typeString": "literal_string \"NFT is Not Available for Fixed Price\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1483:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:101:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "1483:101:9"
											},
											{
												"id": 1568,
												"nodeType": "PlaceholderStatement",
												"src": "1594:1:9"
											}
										]
									},
									"id": 1570,
									"name": "onFixedPrice",
									"nameLocation": "1433:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1455:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1447:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1467:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1462:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:27:9"
									},
									"src": "1424:178:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "1763:288:9",
										"statements": [
											{
												"expression": {
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1585,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "1773:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1796:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 1586,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "1789:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																"typeString": "type(enum OnyxNft1155Auction.status)"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1789:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "1773:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "1773:25:9"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1591,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "1942:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1594,
																"indexExpression": {
																	"id": 1592,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "1946:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1942:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1595,
															"indexExpression": {
																"id": 1593,
																"name": "NftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "1954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1942:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salestatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1458,
														"src": "1942:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1597,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "1974:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "1942:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "1942:45:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1601,
															"name": "NftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "2020:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416363657074696e672042696473",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb74c78ba6e2fe5199bb8196a5d69a40d12d4afbd36d6b7bc7c3549fcb169dea",
																"typeString": "literal_string \"Accepting Bids\""
															},
															"value": "Accepting Bids"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_bb74c78ba6e2fe5199bb8196a5d69a40d12d4afbd36d6b7bc7c3549fcb169dea",
																"typeString": "literal_string \"Accepting Bids\""
															}
														],
														"id": 1600,
														"name": "availableForBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "2002:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "EmitStatement",
												"src": "1997:47:9"
											}
										]
									},
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1577,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1572,
													"src": "1715:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1578,
													"name": "NftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1574,
													"src": "1722:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1579,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1576,
												"name": "notOnSale",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1507,
												"src": "1705:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:23:9"
										},
										{
											"arguments": [
												{
													"id": 1581,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1572,
													"src": "1738:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1582,
													"name": "NftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1574,
													"src": "1747:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1583,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1580,
												"name": "NftExist",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1486,
												"src": "1729:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1729:24:9"
										}
									],
									"name": "_placeNftForBids",
									"nameLocation": "1659:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1684:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1676:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "NftId",
												"nameLocation": "1697:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1692:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1692:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:29:9"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1763:0:9"
									},
									"scope": 1751,
									"src": "1650:401:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "2397:210:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1630,
															"name": "_bidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "2450:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1623,
																		"name": "Nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "2407:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																		}
																	},
																	"id": 1626,
																	"indexExpression": {
																		"id": 1624,
																		"name": "nftOwnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2411:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2407:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																		"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																	}
																},
																"id": 1627,
																"indexExpression": {
																	"id": 1625,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "2428:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2407:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																	"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bidAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1437,
															"src": "2407:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2407:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2407:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "bidderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "2518:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1633,
																		"name": "Nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "2471:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																		}
																	},
																	"id": 1636,
																	"indexExpression": {
																		"id": 1634,
																		"name": "nftOwnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2475:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2471:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																		"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																	}
																},
																"id": 1637,
																"indexExpression": {
																	"id": 1635,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "2492:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2471:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																	"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bidderAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1443,
															"src": "2471:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2471:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2471:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "2471:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1650,
															"name": "_numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "2587:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1643,
																		"name": "Nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "2542:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																		}
																	},
																	"id": 1646,
																	"indexExpression": {
																		"id": 1644,
																		"name": "nftOwnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2546:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2542:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																		"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																	}
																},
																"id": 1647,
																"indexExpression": {
																	"id": 1645,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "2563:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2542:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																	"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numOfCopies",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1440,
															"src": "2542:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2542:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2542:58:9"
											}
										]
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1619,
													"name": "nftOwnerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1608,
													"src": "2366:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1620,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1612,
													"src": "2382:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1618,
												"name": "onBidding",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1528,
												"src": "2356:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2356:32:9"
										}
									],
									"name": "_pushBidingValues",
									"nameLocation": "2242:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "nftOwnerAddress",
												"nameLocation": "2269:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2261:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "bidderAddress",
												"nameLocation": "2293:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2285:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2313:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2308:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "_bidAmount",
												"nameLocation": "2325:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2320:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2320:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "_numOfCopies",
												"nameLocation": "2342:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2337:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2337:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:95:9"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:0:9"
									},
									"scope": 1751,
									"src": "2233:374:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "2745:151:9",
										"statements": [
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2756:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																}
															],
															"id": 1672,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2772:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																"typeString": "type(enum OnyxNft1155Auction.status)"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2772:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "2756:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "2756:25:9"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1677,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "2791:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1680,
																"indexExpression": {
																	"id": 1678,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "2795:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2791:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1681,
															"indexExpression": {
																"id": 1679,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "2802:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2791:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salestatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1458,
														"src": "2791:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1683,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2822:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "2791:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "2791:44:9"
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1686,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "2845:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1689,
																"indexExpression": {
																	"id": 1687,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "2849:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2845:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1690,
															"indexExpression": {
																"id": 1688,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "2856:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2845:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minimumPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1453,
														"src": "2845:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1692,
														"name": "Fixedamount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "2878:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2845:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "2845:44:9"
											}
										]
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1663,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1656,
													"src": "2699:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1664,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1658,
													"src": "2706:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1662,
												"name": "notOnSale",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1507,
												"src": "2689:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2689:23:9"
										},
										{
											"arguments": [
												{
													"id": 1667,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1656,
													"src": "2722:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1668,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1658,
													"src": "2730:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "NftExist",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1486,
												"src": "2713:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:23:9"
										}
									],
									"name": "_placeNftForFixedPrice",
									"nameLocation": "2621:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2652:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "2644:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2664:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "2659:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2659:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "Fixedamount",
												"nameLocation": "2676:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "2671:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2671:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:46:9"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:9"
									},
									"scope": 1751,
									"src": "2612:284:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "3026:210:9",
										"statements": [
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1711,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "3070:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3093:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1712,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "3086:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_status_$1431_$",
																"typeString": "type(enum OnyxNft1155Auction.status)"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3086:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "3070:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "3070:25:9"
											},
											{
												"expression": {
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1717,
																	"name": "Nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "3105:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																	}
																},
																"id": 1720,
																"indexExpression": {
																	"id": 1718,
																	"name": "ownerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "3109:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3105:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																	"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
																}
															},
															"id": 1721,
															"indexExpression": {
																"id": 1719,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "3123:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3105:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
																"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "salestatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1458,
														"src": "3105:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1723,
														"name": "CurrentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "3143:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_status_$1431",
															"typeString": "enum OnyxNft1155Auction.status"
														}
													},
													"src": "3105:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "3105:51:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1727,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3186:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4572726f7221204e46542069732072656d6f7665642066726f6d2053616c6520",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3194:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86b698c6d6784f76efc25df6ae071013e8d02922a2b89c1204fc3fce49cbcafb",
																"typeString": "literal_string \"Error! NFT is removed from Sale \""
															},
															"value": "Error! NFT is removed from Sale "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_86b698c6d6784f76efc25df6ae071013e8d02922a2b89c1204fc3fce49cbcafb",
																"typeString": "literal_string \"Error! NFT is removed from Sale \""
															}
														],
														"id": 1726,
														"name": "removeFormSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3171:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "EmitStatement",
												"src": "3166:63:9"
											}
										]
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1703,
													"name": "ownerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1698,
													"src": "2970:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1704,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1700,
													"src": "2983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1702,
												"name": "NftExist",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1486,
												"src": "2961:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2961:28:9"
										},
										{
											"arguments": [
												{
													"id": 1707,
													"name": "ownerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1698,
													"src": "2997:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1708,
													"name": "nftId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1700,
													"src": "3010:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1706,
												"name": "onSale",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1549,
												"src": "2990:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2990:26:9"
										}
									],
									"name": "_removeFromSale",
									"nameLocation": "2911:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "2935:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2927:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2954:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2949:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2926:34:9"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3026:0:9"
									},
									"scope": 1751,
									"src": "2902:334:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "3324:55:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1742,
																"name": "Nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "3341:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref))"
																}
															},
															"id": 1744,
															"indexExpression": {
																"id": 1743,
																"name": "nftOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "3345:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3341:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NftDetails_$1459_storage_$",
																"typeString": "mapping(uint256 => struct OnyxNft1155Auction.NftDetails storage ref)"
															}
														},
														"id": 1746,
														"indexExpression": {
															"id": 1745,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "3355:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3341:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NftDetails_$1459_storage",
															"typeString": "struct OnyxNft1155Auction.NftDetails storage ref"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "salestatus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1458,
													"src": "3341:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"functionReturnParameters": 1741,
												"id": 1748,
												"nodeType": "Return",
												"src": "3334:38:9"
											}
										]
									},
									"functionSelector": "67c510c9",
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CheckNftStatus",
									"nameLocation": "3250:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "nftOwner",
												"nameLocation": "3273:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3265:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "3288:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3283:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3283:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:30:9"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3317:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_status_$1431",
													"typeString": "enum OnyxNft1155Auction.status"
												},
												"typeName": {
													"id": 1739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1738,
														"name": "status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "3317:6:9"
													},
													"referencedDeclaration": 1431,
													"src": "3317:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_status_$1431",
														"typeString": "enum OnyxNft1155Auction.status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:8:9"
									},
									"scope": 1751,
									"src": "3241:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1752,
							"src": "56:3326:9",
							"usedErrors": []
						}
					],
					"src": "32:3350:9"
				},
				"id": 9
			},
			"OnyxNft1155Royalties.sol": {
				"ast": {
					"absolutePath": "OnyxNft1155Royalties.sol",
					"exportedSymbols": {
						"OnyxNftErc20": [
							1978
						]
					},
					"id": 1979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1978,
							"linearizedBaseContracts": [
								1978
							],
							"name": "OnyxNftErc20",
							"nameLocation": "65:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1761,
									"name": "RoyaltiesTransfer",
									"nameLocation": "91:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "109:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "109:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "115:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "121:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:10"
									},
									"src": "85:42:10"
								},
								{
									"canonicalName": "OnyxNftErc20.royaltyInfo",
									"id": 1766,
									"members": [
										{
											"constant": false,
											"id": 1763,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "177:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1766,
											"src": "161:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1762,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "161:15:10",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1765,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "203:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1766,
											"src": "196:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1764,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "196:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "royaltyInfo",
									"nameLocation": "139:11:10",
									"nodeType": "StructDefinition",
									"scope": 1978,
									"src": "132:84:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1770,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "247:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "221:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1769,
										"keyType": {
											"id": 1767,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "230:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "221:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1768,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "241:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1775,
									"mutability": "mutable",
									"name": "_royalties",
									"nameLocation": "293:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "261:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$1766_storage_$",
										"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo)"
									},
									"typeName": {
										"id": 1774,
										"keyType": {
											"id": 1771,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "261:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$1766_storage_$",
											"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo)"
										},
										"valueType": {
											"id": 1773,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1772,
												"name": "royaltyInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1766,
												"src": "280:11:10"
											},
											"referencedDeclaration": 1766,
											"src": "280:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_royaltyInfo_$1766_storage_ptr",
												"typeString": "struct OnyxNftErc20.royaltyInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1779,
									"mutability": "mutable",
									"name": "OnyxNftWhiteList",
									"nameLocation": "333:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "309:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1778,
										"keyType": {
											"id": 1776,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "318:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "309:23:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1777,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "327:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "447:135:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1789,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "465:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3530",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "474:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "465:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722120546f6f206869676820526f79616c74696573",
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c4e1455dcab7d55570ed81a90b7c4272ff551b906a619034b3a60d43964eb4",
																"typeString": "literal_string \"Error! Too high Royalties\""
															},
															"value": "Error! Too high Royalties"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c4e1455dcab7d55570ed81a90b7c4272ff551b906a619034b3a60d43964eb4",
																"typeString": "literal_string \"Error! Too high Royalties\""
															}
														],
														"id": 1788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "457:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "457:49:10"
											},
											{
												"expression": {
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1795,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "516:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_royaltyInfo_$1766_storage_$",
																"typeString": "mapping(uint256 => struct OnyxNftErc20.royaltyInfo storage ref)"
															}
														},
														"id": 1797,
														"indexExpression": {
															"id": 1796,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "527:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "516:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_royaltyInfo_$1766_storage",
															"typeString": "struct OnyxNftErc20.royaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1799,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "550:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1802,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "568:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "561:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1800,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "561:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "561:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1798,
															"name": "royaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "538:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_royaltyInfo_$1766_storage_ptr_$",
																"typeString": "type(struct OnyxNftErc20.royaltyInfo storage pointer)"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "538:37:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_royaltyInfo_$1766_memory_ptr",
															"typeString": "struct OnyxNftErc20.royaltyInfo memory"
														}
													},
													"src": "516:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_royaltyInfo_$1766_storage",
														"typeString": "struct OnyxNftErc20.royaltyInfo storage ref"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "516:59:10"
											}
										]
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenRoyalty",
									"nameLocation": "364:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "389:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "381:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "413:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "397:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "431:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "423:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:57:10"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:10"
									},
									"scope": 1978,
									"src": "355:227:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "721:591:10",
										"statements": [
											{
												"assignments": [
													1820
												],
												"declarations": [
													{
														"constant": false,
														"id": 1820,
														"mutability": "mutable",
														"name": "_TotalNftPrice",
														"nameLocation": "736:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1857,
														"src": "731:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1819,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "731:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1823,
												"initialValue": {
													"expression": {
														"id": 1821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "753:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "753:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:31:10"
											},
											{
												"assignments": [
													1825
												],
												"declarations": [
													{
														"constant": false,
														"id": 1825,
														"mutability": "mutable",
														"name": "_OnyxNftFee",
														"nameLocation": "881:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1857,
														"src": "876:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1824,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "876:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"arguments": [
														{
															"id": 1827,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "913:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1826,
														"name": "_deductOnyxNftFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "895:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "876:47:10"
											},
											{
												"assignments": [
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "_minterFee",
														"nameLocation": "938:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1857,
														"src": "933:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1830,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "933:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"arguments": [
														{
															"id": 1833,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "966:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1834,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "978:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1835,
															"name": "minterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "991:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1832,
														"name": "_SendMinterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "951:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,address payable) returns (uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "933:72:10"
											},
											{
												"expression": {
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1838,
														"name": "_TotalNftPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "1015:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1839,
																"name": "_TotalNftPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "1032:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1840,
																"name": "_OnyxNftFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1049:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1032:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1842,
															"name": "_minterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "1063:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1032:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:58:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "1015:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1847,
															"name": "_TotalNftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "1147:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1848,
															"name": "NftSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "1163:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1846,
														"name": "_transferAmountToSeller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1122:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
															"typeString": "function (uint256,address payable)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "1122:51:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1852,
															"name": "_OnyxNftFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "1266:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1853,
															"name": "_minterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "1278:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1854,
															"name": "_TotalNftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "1290:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1851,
														"name": "RoyaltiesTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "1248:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1856,
												"nodeType": "EmitStatement",
												"src": "1243:62:10"
											}
										]
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_royaltyAndOnyxNftFee",
									"nameLocation": "597:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "_NftPrice",
												"nameLocation": "625:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "620:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "620:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "641:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "636:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "636:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "minterAddress",
												"nameLocation": "669:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "653:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "NftSeller",
												"nameLocation": "700:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "684:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:91:10"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:10"
									},
									"scope": 1978,
									"src": "588:724:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "1383:132:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1866,
																				"name": "Price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1860,
																				"src": "1402:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 1867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1408:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "1402:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1869,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1401:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1415:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "1401:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1872,
																"name": "Price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "1424:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1401:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204f6e7978204e46542066656520546f6f20736d616c6c206f7220696e20446563696d616c73",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																"typeString": "literal_string \"Error! Onyx NFT fee Too small or in Decimals\""
															},
															"value": "Error! Onyx NFT fee Too small or in Decimals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36d9017948693e0c163a3a436da9aa8455551b8b7e2a47e361f63b77782eb1a1",
																"typeString": "literal_string \"Error! Onyx NFT fee Too small or in Decimals\""
															}
														],
														"id": 1865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1393:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:85:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "1393:85:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1877,
															"name": "Price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "1495:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3235",
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1501:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25_by_1",
																"typeString": "int_const 25"
															},
															"value": "25"
														},
														"src": "1495:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1504:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1495:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1864,
												"id": 1882,
												"nodeType": "Return",
												"src": "1488:20:10"
											}
										]
									},
									"functionSelector": "d206b944",
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deductOnyxNftFee",
									"nameLocation": "1327:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "Price",
												"nameLocation": "1350:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1345:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:12:10"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1377:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:10"
									},
									"scope": 1978,
									"src": "1318:197:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "1604:40:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1894,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "1630:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1891,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "1614:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1614:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1614:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "1614:23:10"
											}
										]
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountToSeller",
									"nameLocation": "1534:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1563:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1558:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1558:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1587:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1571:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:37:10"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:10"
									},
									"scope": 1978,
									"src": "1525:119:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "1757:292:10",
										"statements": [
											{
												"assignments": [
													1910
												],
												"declarations": [
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "AmountToSend",
														"nameLocation": "1772:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1925,
														"src": "1767:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1909,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1767:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1911,
															"name": "_NftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "1787:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1912,
															"name": "Percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "1797:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1787:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1808:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1787:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1767:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1920,
															"name": "AmountToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "1916:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1917,
															"name": "recepient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "1897:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1897:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1897:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "1897:32:10"
											},
											{
												"expression": {
													"id": 1923,
													"name": "AmountToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1910,
													"src": "2030:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1924,
												"nodeType": "Return",
												"src": "2023:19:10"
											}
										]
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_SendMinterFee",
									"nameLocation": "1659:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "_NftPrice",
												"nameLocation": "1679:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1674:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1674:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "Percentage",
												"nameLocation": "1695:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1690:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "recepient",
												"nameLocation": "1723:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1707:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:60:10"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1751:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1751:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:6:10"
									},
									"scope": 1978,
									"src": "1650:399:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "2126:121:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1934,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2144:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2144:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1936,
																"name": "amountToDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "2157:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2144:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f72207768696c65204465706f736974",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d13faf13e2c700f1b4d53a69c2423df55726b15356335aef038dfdfb3ebded2",
																"typeString": "literal_string \"Error while Deposit\""
															},
															"value": "Error while Deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d13faf13e2c700f1b4d53a69c2423df55726b15356335aef038dfdfb3ebded2",
																"typeString": "literal_string \"Error while Deposit\""
															}
														],
														"id": 1933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2136:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "2136:60:10"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "2206:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1943,
														"indexExpression": {
															"id": 1942,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "2215:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2206:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1944,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "2225:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2206:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2206:34:10"
											}
										]
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositBidAmmount",
									"nameLocation": "2063:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "2089:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2081:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "2100:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2095:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2095:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:36:10"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:10"
									},
									"scope": 1978,
									"src": "2054:193:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "2310:127:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1956,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "2328:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1958,
																	"indexExpression": {
																		"id": 1957,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "2337:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2328:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2343:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2328:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1961,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "2348:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1962,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "2358:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1964,
																	"indexExpression": {
																		"id": 1963,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "2367:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2358:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2348:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2328:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204c6f772042616c616e6365",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2375:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f12ccd525b8c4686a43d3a8e40d049e4990f4cc4a4adc0acb90e33c21636c237",
																"typeString": "literal_string \"Error! Low Balance\""
															},
															"value": "Error! Low Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f12ccd525b8c4686a43d3a8e40d049e4990f4cc4a4adc0acb90e33c21636c237",
																"typeString": "literal_string \"Error! Low Balance\""
															}
														],
														"id": 1955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2320:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "2320:76:10"
											},
											{
												"expression": {
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1970,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "2406:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1972,
														"indexExpression": {
															"id": 1971,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2415:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2406:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1973,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "2424:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2406:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "2406:24:10"
											}
										]
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductAmount",
									"nameLocation": "2261:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2282:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2274:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2293:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2288:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2288:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:27:10"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:10"
									},
									"scope": 1978,
									"src": "2252:185:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1979,
							"src": "56:2383:10",
							"usedErrors": []
						}
					],
					"src": "32:2407:10"
				},
				"id": 10
			}
		}
	}
}