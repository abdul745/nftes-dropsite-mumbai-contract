{
	"id": "f7c4d17b75c7a777efaacaba0c109031",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155_Dropsite.sol\"; \nimport \"./Strings.sol\";\ncontract Dropsite is ERC1155_Dropsite  { \n\n    //NFT category\n    // NFT Description & URL\n    string  data =\"\";\n\n    //NFTs distribution w.r.t Probabilities\n    //Max probability of Diamond(id=0) = 0.5%\n    //Max probability of Gold(id=1) = 10%\n    //Max probability of Silver(id=2) = 85%\n    uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; \n    \n    uint TotalNFTsMinted;     //Total NFTs\n    uint numOfCopies;         //A user can mint only 1 NFT\n    uint mintFees;\n\n    //Initial Minting\n    uint Diamond;            \n    uint Gold;\n    uint Silver; \n\n    //owner-NFT-ID Mapping\n    //Won NFTs w.r.t Addresses\n    struct nft_Owner{\n        uint[] owned_Dropsite_NFTs;\n    }\n    mapping (address=>nft_Owner)  dropsite_NFT_Owner;\n\n    //payments Mapping\n     mapping (address => uint) deposits;\n  modifier OnlyOwner {\n        require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\");\n        _;\n    }\n\n    //Pausing and activating the contract\n    modifier contractIsNotPaused(){\n        require (IsPaused == false, \"Dropsite is not Opened Yet.\" );\n        _;\n    }\n      bool public IsPaused = true;\n    address payable public  Owner;\n    string private _name;\n    constructor (string memory name){\n        _name = name;\n        Owner = payable(msg.sender);\n\n        TotalNFTsMinted=0;     //Total NFTs Minted\n        numOfCopies=1;         //A user can mint only 1 NFT\n        Diamond=0;            \n        Gold=0;\n        Silver=0;\n    }\n\n        //Check NFTs issued to an address\n    function returnOwner(address addr) public view contractIsNotPaused returns  (uint[] memory){\n        return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs;\n    }\n     \n     //To Check No of issued NFTs Category Wise\n     function checkMintedCategoryWise() public view OnlyOwner contractIsNotPaused returns(uint,uint,uint){\n         return (Diamond,Gold,Silver);\n     }\n\n    function setMintFee(uint _mintFee) public OnlyOwner contractIsNotPaused {\n        mintFees=_mintFee;\n    }\n    \n    function getMintFee() public view OnlyOwner contractIsNotPaused returns (uint) {\n        return mintFees;\n    }\n    \n\n     //To Check total Minted NFTs\n    function checkTotalMinted() public view OnlyOwner returns(uint){\n         return TotalNFTsMinted;\n     }\n     function stopDropsite() public OnlyOwner{\n        require(IsPaused==false, \"Dropsite is already Stopped\");\n        IsPaused=true;\n    }\n\n     function openDropsite() public OnlyOwner {\n        require(IsPaused==true, \"Dropsite is already Running\");\n        IsPaused=false;\n    }\n    \n     //To WithDraw All Ammount from Contract to Owners Address or any other Address \n    function withDraw(address payable to) public payable OnlyOwner {\n        uint Balance = address(this).balance;\n        require(Balance > 0 wei, \"Error! No Balance to withdraw\"); \n        to.transfer(Balance);\n    }  \n    \n    //To Check Contract Balance in Wei\n      function ContractBalance() public view OnlyOwner returns (uint){\n        return address(this).balance;\n    }\n\n    //Random Number to Select an item from nums Array(Probabilities)\n    //Will return an index b/w 0-20\n    function random() internal view returns (uint) {\n        // Returns 0-10\n    uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20;\n    return randomnumber;\n    }\n\n    //random number will be generated which will be the index to nums array.\n    //The number on that index will be considered as an nftID and will be alloted to the minter(user).\n   function updateConditions() internal contractIsNotPaused returns(uint) {\n       uint index = random();\n        uint nftId = nums[index];\n\n        // if nftID is 0, and less than 51 so 50 MAX - Diamond Category           \n        if(nftId == 0 && Diamond < 50) {\n             Diamond++;\n            data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)));\n            \n            return nftId;\n\n        // if nftID is 0 or 1 and Diamond is more than 150, it will go there in Gold Category\n        } else if(nftId <= 1 && Gold < 100) {\n            Gold++;\n            data = string(abi.encodePacked(\"Gold_\",Strings.toString(Gold)));\n            return nftId;\n\n        // if any of the above conditions are filled it will mint silver if enough silver available\n        } else if(nftId <= 2 && Silver <= 850) {\n            Silver++;\n            data=data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver)));\n            \n            return nftId;\n        }\n        else {\n            \n            //if nft ID is either 1 or 2, but Slots in Gold or Diamond are remaining, \n            //First Gold category will be filled then Diamond\n\n            if(Gold < 100) {\n                nftId = 1;\n                Gold++;\n                data = string(abi.encodePacked(\"Gold_\",Strings.toString(Gold)));\n                 \n                return nftId;\n            } else {\n                nftId = 0;\n                Diamond++;\n                data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)));\n                \n                return nftId;\n            }   \n    }\n   }\n\nfunction randomMinting(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n    \n}\n    //Random minting after Fiat Payments\n    function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n     require(noOfMints<4 && noOfMints>0,\"You can mint 1-3 NFTs\");\n    \n    }\n\n    //MATIC Amount will be deposited  \n    function depositAmount(address payee,uint amountToDeposit) internal {\n        deposits[payee] += amountToDeposit;\n    }\n    \n    //Random minting after Crypto Payments\n    function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n     require(msg.value == mintFees, \"Not Enough Balance\");\n\n \n    }\n}"
			},
			"Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.;\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}"
			},
			"ERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155_Dropsite.sol\";\nimport \"./IERC1155Receiver_Dropsite.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165_Dropsite.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155_Dropsite is Context, IERC1155_Dropsite  {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        string memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165_Dropsite {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual  returns (bool) {\n        return interfaceId == type(IERC165_Dropsite).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165_Dropsite {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        string calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155_Dropsite  is IERC165_Dropsite {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    // event TransferBatch(\n    //     address indexed operator,\n    //     address indexed from,\n    //     address indexed to,\n    //     uint256[] ids,\n    //     uint256[] values\n    // );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    // event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    // event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n//     function balanceOf(address account, uint256 id) external view returns (uint256);\n\n//     /**\n//      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n//      *\n//      * Requirements:\n//      *\n//      * - `accounts` and `ids` must have the same length.\n//      */\n//     function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n//         external\n//         view\n//         returns (uint256[] memory);\n\n//     /**\n//      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n//      *\n//      * Emits an {ApprovalForAll} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `operator` cannot be the caller.\n//      */\n//     function setApprovalForAll(address operator, bool approved) external;\n\n//     /**\n//      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n//      *\n//      * See {setApprovalForAll}.\n//      */\n//     function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165_Dropsite {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n   // function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xA5 SAR PUSH21 0x4406DBF977965FA373217CB8AA23A85821D5CC2A6C 0xDD 0xCE 0xE2 PUSH20 0xF57BAC64736F6C63430008070033000000000000 ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ca51d744406dbf977965fa373217cb8aa23a85821d5cc2a6cddcee273f57bac64736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dropsite.sol": {
				"Dropsite": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "CryptoRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "noOfMints",
									"type": "uint256"
								}
							],
							"name": "FiatRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkMintedCategoryWise",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkTotalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMintFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "randomMinting",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "returnOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintFee",
									"type": "uint256"
								}
							],
							"name": "setMintFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dropsite.sol\":146:6089  contract Dropsite is ERC1155_Dropsite  { ... */\n  mstore(0x40, 0x80)\n    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  mload(0x40)\n  dup1\n  0x0280\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Dropsite.sol\":466:467  0 */\n  0x00\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":468:469  1 */\n  0x01\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":470:471  1 */\n  0x01\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":472:473  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":474:475  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":476:477  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":478:479  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":480:481  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":482:483  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":484:485  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":486:487  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":488:489  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":490:491  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":492:493  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":494:495  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":496:497  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":498:499  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":500:501  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":502:503  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Dropsite.sol\":504:505  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  0x03\n  swap1\n  0x14\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"Dropsite.sol\":1269:1273  true */\n  0x01\n    /* \"Dropsite.sol\":1246:1273  bool public IsPaused = true */\n  0x0c\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1340:1615  constructor (string memory name){... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"Dropsite.sol\":1390:1394  name */\n  dup1\n    /* \"Dropsite.sol\":1382:1387  _name */\n  0x0d\n    /* \"Dropsite.sol\":1382:1394  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n    /* \"Dropsite.sol\":1420:1430  msg.sender */\n  caller\n    /* \"Dropsite.sol\":1404:1409  Owner */\n  0x0c\n  0x01\n    /* \"Dropsite.sol\":1404:1431  Owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1458:1459  0 */\n  0x00\n    /* \"Dropsite.sol\":1442:1457  TotalNFTsMinted */\n  0x04\n    /* \"Dropsite.sol\":1442:1459  TotalNFTsMinted=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1505:1506  1 */\n  0x01\n    /* \"Dropsite.sol\":1493:1504  numOfCopies */\n  0x05\n    /* \"Dropsite.sol\":1493:1506  numOfCopies=1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1561:1562  0 */\n  0x00\n    /* \"Dropsite.sol\":1553:1560  Diamond */\n  0x07\n    /* \"Dropsite.sol\":1553:1562  Diamond=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1589:1590  0 */\n  0x00\n    /* \"Dropsite.sol\":1584:1588  Gold */\n  0x08\n    /* \"Dropsite.sol\":1584:1590  Gold=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1607:1608  0 */\n  0x00\n    /* \"Dropsite.sol\":1600:1606  Silver */\n  0x09\n    /* \"Dropsite.sol\":1600:1608  Silver=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dropsite.sol\":1340:1615  constructor (string memory name){... */\n  pop\n    /* \"Dropsite.sol\":146:6089  contract Dropsite is ERC1155_Dropsite  { ... */\n  jump(tag_11)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_4:\n  dup3\n  add(0x1f, 0x14)\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_21\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_22:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_22)\ntag_23:\n  dup1\n  iszero\n  tag_24\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_23)\ntag_24:\n  pop\ntag_21:\n  pop\n  swap1\n  pop\n  tag_25\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_26)\ntag_27:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_29:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_31\n    /* \"#utility.yul\":137:186   */\n  tag_32\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":121:187   */\n  tag_34\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":262:374   */\ntag_35:\n    /* \"#utility.yul\":383:422   */\n  tag_38\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_40:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":531:653   */\ntag_42:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_45\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_7:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":906:1025   */\ntag_47:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1101:1218   */\ntag_50:\n    /* \"#utility.yul\":1242:1316   */\n  tag_53\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_40\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_34:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_55\n  tag_56\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_57\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_56:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_33:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_62\n  tag_63\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1693:1749   */\ntag_61:\n    /* \"#utility.yul\":1767:1796   */\n  tag_64\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_65\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_39:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_67:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_70:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_13:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_72:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_74\n  tag_75\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2412:2496   */\ntag_73:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_58:\n    /* \"#utility.yul\":2591:2618   */\n  tag_77\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_65\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_79\n  tag_63\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2664:2752   */\ntag_78:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_75:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_63:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_44:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_37:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_52:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_49:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_65:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Dropsite.sol\":146:6089  contract Dropsite is ERC1155_Dropsite  { ... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dropsite.sol\":146:6089  contract Dropsite is ERC1155_Dropsite  { ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x546fd992\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xaa90c726\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xaa90c726\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xeddd0d9c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfd6c3b1b\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x546fd992\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x60daa851\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7a5caab3\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x15460259\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x15460259\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27a8a072\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3b668059\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3d65df70\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x0390c11c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0a67d2c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1309a563\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dropsite.sol\":2307:2411  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2790:3004  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Dropsite.sol\":1246:1273  bool public IsPaused = true */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2559:2695  function openDropsite() public OnlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Dropsite.sol\":5423:5626  function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":3057:3165  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":5843:6087  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":5261:5377  function randomMinting(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":1882:2029  function checkMintedCategoryWise() public view OnlyOwner contractIsNotPaused returns(uint,uint,uint){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2151:2262  function getMintFee() public view OnlyOwner contractIsNotPaused returns (uint) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2417:2552  function stopDropsite() public OnlyOwner{... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Dropsite.sol\":1279:1308  address payable public  Owner */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2035:2141  function setMintFee(uint _mintFee) public OnlyOwner contractIsNotPaused {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"Dropsite.sol\":1663:1822  function returnOwner(address addr) public view contractIsNotPaused returns  (uint[] memory){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2307:2411  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_21:\n        /* \"Dropsite.sol\":2365:2369  uint */\n      0x00\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_86\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Dropsite.sol\":2388:2403  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":2381:2403  return TotalNFTsMinted */\n      swap1\n      pop\n        /* \"Dropsite.sol\":2307:2411  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":2790:3004  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_27:\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_93\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_90\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"Dropsite.sol\":2863:2875  uint Balance */\n      0x00\n        /* \"Dropsite.sol\":2878:2899  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2863:2899  uint Balance = address(this).balance */\n      swap1\n      pop\n        /* \"Dropsite.sol\":2927:2932  0 wei */\n      0x00\n        /* \"Dropsite.sol\":2917:2924  Balance */\n      dup2\n        /* \"Dropsite.sol\":2917:2932  Balance > 0 wei */\n      gt\n        /* \"Dropsite.sol\":2909:2966  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Dropsite.sol\":2977:2979  to */\n      dup2\n        /* \"Dropsite.sol\":2977:2988  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":2977:2997  to.transfer(Balance) */\n      0x08fc\n        /* \"Dropsite.sol\":2989:2996  Balance */\n      dup3\n        /* \"Dropsite.sol\":2977:2997  to.transfer(Balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n        /* \"Dropsite.sol\":2853:3004  {... */\n      pop\n        /* \"Dropsite.sol\":2790:3004  function withDraw(address payable to) public payable OnlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1246:1273  bool public IsPaused = true */\n    tag_30:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Dropsite.sol\":2559:2695  function openDropsite() public OnlyOwner {... */\n    tag_35:\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_103\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_90\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"Dropsite.sol\":2628:2632  true */\n      0x01\n        /* \"Dropsite.sol\":2618:2632  IsPaused==true */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":2618:2626  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":2618:2632  IsPaused==true */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":2610:2664  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"Dropsite.sol\":2683:2688  false */\n      0x00\n        /* \"Dropsite.sol\":2674:2682  IsPaused */\n      0x0c\n      0x00\n        /* \"Dropsite.sol\":2674:2688  IsPaused=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":2559:2695  function openDropsite() public OnlyOwner {... */\n      jump\t// out\n        /* \"Dropsite.sol\":5423:5626  function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_40:\n        /* \"Dropsite.sol\":5528:5532  uint */\n      0x00\n        /* \"Dropsite.sol\":5533:5546  string memory */\n      0x60\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_111\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_90\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"Dropsite.sol\":5573:5574  4 */\n      0x04\n        /* \"Dropsite.sol\":5563:5572  noOfMints */\n      dup4\n        /* \"Dropsite.sol\":5563:5574  noOfMints<4 */\n      lt\n        /* \"Dropsite.sol\":5563:5589  noOfMints<4 && noOfMints>0 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"Dropsite.sol\":5588:5589  0 */\n      0x00\n        /* \"Dropsite.sol\":5578:5587  noOfMints */\n      dup4\n        /* \"Dropsite.sol\":5578:5589  noOfMints>0 */\n      gt\n        /* \"Dropsite.sol\":5563:5589  noOfMints<4 && noOfMints>0 */\n    tag_119:\n        /* \"Dropsite.sol\":5555:5614  require(noOfMints<4 && noOfMints>0,\"You can mint 1-3 NFTs\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"Dropsite.sol\":5423:5626  function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":3057:3165  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_45:\n        /* \"Dropsite.sol\":3115:3119  uint */\n      0x00\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_124\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_90\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"Dropsite.sol\":3137:3158  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":3130:3158  return address(this).balance */\n      swap1\n      pop\n        /* \"Dropsite.sol\":3057:3165  function ContractBalance() public view OnlyOwner returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":5843:6087  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_50:\n        /* \"Dropsite.sol\":5933:5937  uint */\n      0x00\n        /* \"Dropsite.sol\":5938:5951  string memory */\n      0x60\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_117\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"Dropsite.sol\":5984:5988  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":5968:5983  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":5968:5988  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":5960:6018  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"Dropsite.sol\":6046:6054  mintFees */\n      sload(0x06)\n        /* \"Dropsite.sol\":6033:6042  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":6033:6054  msg.value == mintFees */\n      eq\n        /* \"Dropsite.sol\":6025:6077  require(msg.value == mintFees, \"Not Enough Balance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"Dropsite.sol\":5843:6087  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Dropsite.sol\":5261:5377  function randomMinting(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_55:\n        /* \"Dropsite.sol\":5349:5353  uint */\n      0x00\n        /* \"Dropsite.sol\":5354:5367  string memory */\n      0x60\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_139\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_90\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_117\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"Dropsite.sol\":5261:5377  function randomMinting(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Dropsite.sol\":1882:2029  function checkMintedCategoryWise() public view OnlyOwner contractIsNotPaused returns(uint,uint,uint){... */\n    tag_59:\n        /* \"Dropsite.sol\":1967:1971  uint */\n      0x00\n        /* \"Dropsite.sol\":1972:1976  uint */\n      dup1\n        /* \"Dropsite.sol\":1977:1981  uint */\n      0x00\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_147\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_90\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_117\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"Dropsite.sol\":2001:2008  Diamond */\n      sload(0x07)\n        /* \"Dropsite.sol\":2009:2013  Gold */\n      sload(0x08)\n        /* \"Dropsite.sol\":2014:2020  Silver */\n      sload(0x09)\n        /* \"Dropsite.sol\":1993:2021  return (Diamond,Gold,Silver) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Dropsite.sol\":1882:2029  function checkMintedCategoryWise() public view OnlyOwner contractIsNotPaused returns(uint,uint,uint){... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"Dropsite.sol\":2151:2262  function getMintFee() public view OnlyOwner contractIsNotPaused returns (uint) {... */\n    tag_64:\n        /* \"Dropsite.sol\":2224:2228  uint */\n      0x00\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_155\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_90\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_117\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Dropsite.sol\":2247:2255  mintFees */\n      sload(0x06)\n        /* \"Dropsite.sol\":2240:2255  return mintFees */\n      swap1\n      pop\n        /* \"Dropsite.sol\":2151:2262  function getMintFee() public view OnlyOwner contractIsNotPaused returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":2417:2552  function stopDropsite() public OnlyOwner{... */\n    tag_68:\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_163\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_90\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"Dropsite.sol\":2485:2490  false */\n      0x00\n        /* \"Dropsite.sol\":2475:2490  IsPaused==false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":2475:2483  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":2475:2490  IsPaused==false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":2467:2522  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"Dropsite.sol\":2541:2545  true */\n      0x01\n        /* \"Dropsite.sol\":2532:2540  IsPaused */\n      0x0c\n      0x00\n        /* \"Dropsite.sol\":2532:2545  IsPaused=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":2417:2552  function stopDropsite() public OnlyOwner{... */\n      jump\t// out\n        /* \"Dropsite.sol\":1279:1308  address payable public  Owner */\n    tag_71:\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Dropsite.sol\":2035:2141  function setMintFee(uint _mintFee) public OnlyOwner contractIsNotPaused {... */\n    tag_78:\n        /* \"Dropsite.sol\":1018:1023  Owner */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      tag_171\n        /* \"Dropsite.sol\":1002:1012  _msgSender */\n      tag_87\n        /* \"Dropsite.sol\":1002:1014  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"Dropsite.sol\":1002:1023  _msgSender() == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dropsite.sol\":994:1056  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_90\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_117\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"Dropsite.sol\":2126:2134  _mintFee */\n      dup1\n        /* \"Dropsite.sol\":2117:2125  mintFees */\n      0x06\n        /* \"Dropsite.sol\":2117:2134  mintFees=_mintFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dropsite.sol\":2035:2141  function setMintFee(uint _mintFee) public OnlyOwner contractIsNotPaused {... */\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":1663:1822  function returnOwner(address addr) public view contractIsNotPaused returns  (uint[] memory){... */\n    tag_82:\n        /* \"Dropsite.sol\":1740:1753  uint[] memory */\n      0x60\n        /* \"Dropsite.sol\":1183:1188  false */\n      0x00\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":1171:1179  IsPaused */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dropsite.sol\":1171:1188  IsPaused == false */\n      iszero\n      iszero\n      eq\n        /* \"Dropsite.sol\":1162:1221  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_117\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"Dropsite.sol\":1771:1789  dropsite_NFT_Owner */\n      0x0a\n        /* \"Dropsite.sol\":1771:1795  dropsite_NFT_Owner[addr] */\n      0x00\n        /* \"Dropsite.sol\":1790:1794  addr */\n      dup4\n        /* \"Dropsite.sol\":1771:1795  dropsite_NFT_Owner[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dropsite.sol\":1771:1815  dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      0x00\n      add\n        /* \"Dropsite.sol\":1764:1815  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_183:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_183\n      jumpi\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dropsite.sol\":1663:1822  function returnOwner(address addr) public view contractIsNotPaused returns  (uint[] memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_87:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_186:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_188\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_190:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_192\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":152:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:452   */\n    tag_194:\n        /* \"#utility.yul\":359:364   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup2\n        /* \"#utility.yul\":384:404   */\n      calldataload\n        /* \"#utility.yul\":375:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":413:446   */\n      tag_196\n        /* \"#utility.yul\":440:445   */\n      dup2\n        /* \"#utility.yul\":413:446   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":313:452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":458:787   */\n    tag_49:\n        /* \"#utility.yul\":517:523   */\n      0x00\n        /* \"#utility.yul\":566:568   */\n      0x20\n        /* \"#utility.yul\":554:563   */\n      dup3\n        /* \"#utility.yul\":545:552   */\n      dup5\n        /* \"#utility.yul\":541:564   */\n      sub\n        /* \"#utility.yul\":537:569   */\n      slt\n        /* \"#utility.yul\":534:653   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":572:651   */\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":534:653   */\n    tag_199:\n        /* \"#utility.yul\":692:693   */\n      0x00\n        /* \"#utility.yul\":717:770   */\n      tag_202\n        /* \"#utility.yul\":762:769   */\n      dup5\n        /* \"#utility.yul\":753:759   */\n      dup3\n        /* \"#utility.yul\":742:751   */\n      dup6\n        /* \"#utility.yul\":738:760   */\n      add\n        /* \"#utility.yul\":717:770   */\n      tag_186\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":707:770   */\n      swap2\n      pop\n        /* \"#utility.yul\":663:780   */\n      pop\n        /* \"#utility.yul\":458:787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1138   */\n    tag_26:\n        /* \"#utility.yul\":860:866   */\n      0x00\n        /* \"#utility.yul\":909:911   */\n      0x20\n        /* \"#utility.yul\":897:906   */\n      dup3\n        /* \"#utility.yul\":888:895   */\n      dup5\n        /* \"#utility.yul\":884:907   */\n      sub\n        /* \"#utility.yul\":880:912   */\n      slt\n        /* \"#utility.yul\":877:996   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":915:994   */\n      tag_205\n      tag_201\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":877:996   */\n    tag_204:\n        /* \"#utility.yul\":1035:1036   */\n      0x00\n        /* \"#utility.yul\":1060:1121   */\n      tag_206\n        /* \"#utility.yul\":1113:1120   */\n      dup5\n        /* \"#utility.yul\":1104:1110   */\n      dup3\n        /* \"#utility.yul\":1093:1102   */\n      dup6\n        /* \"#utility.yul\":1089:1111   */\n      add\n        /* \"#utility.yul\":1060:1121   */\n      tag_190\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1050:1121   */\n      swap2\n      pop\n        /* \"#utility.yul\":1006:1131   */\n      pop\n        /* \"#utility.yul\":793:1138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1144:1618   */\n    tag_39:\n        /* \"#utility.yul\":1212:1218   */\n      0x00\n        /* \"#utility.yul\":1220:1226   */\n      dup1\n        /* \"#utility.yul\":1269:1271   */\n      0x40\n        /* \"#utility.yul\":1257:1266   */\n      dup4\n        /* \"#utility.yul\":1248:1255   */\n      dup6\n        /* \"#utility.yul\":1244:1267   */\n      sub\n        /* \"#utility.yul\":1240:1272   */\n      slt\n        /* \"#utility.yul\":1237:1356   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1275:1354   */\n      tag_209\n      tag_201\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1237:1356   */\n    tag_208:\n        /* \"#utility.yul\":1395:1396   */\n      0x00\n        /* \"#utility.yul\":1420:1473   */\n      tag_210\n        /* \"#utility.yul\":1465:1472   */\n      dup6\n        /* \"#utility.yul\":1456:1462   */\n      dup3\n        /* \"#utility.yul\":1445:1454   */\n      dup7\n        /* \"#utility.yul\":1441:1463   */\n      add\n        /* \"#utility.yul\":1420:1473   */\n      tag_186\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1410:1473   */\n      swap3\n      pop\n        /* \"#utility.yul\":1366:1483   */\n      pop\n        /* \"#utility.yul\":1522:1524   */\n      0x20\n        /* \"#utility.yul\":1548:1601   */\n      tag_211\n        /* \"#utility.yul\":1593:1600   */\n      dup6\n        /* \"#utility.yul\":1584:1590   */\n      dup3\n        /* \"#utility.yul\":1573:1582   */\n      dup7\n        /* \"#utility.yul\":1569:1591   */\n      add\n        /* \"#utility.yul\":1548:1601   */\n      tag_194\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1538:1601   */\n      swap2\n      pop\n        /* \"#utility.yul\":1493:1611   */\n      pop\n        /* \"#utility.yul\":1144:1618   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1953   */\n    tag_77:\n        /* \"#utility.yul\":1683:1689   */\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1720:1729   */\n      dup3\n        /* \"#utility.yul\":1711:1718   */\n      dup5\n        /* \"#utility.yul\":1707:1730   */\n      sub\n        /* \"#utility.yul\":1703:1735   */\n      slt\n        /* \"#utility.yul\":1700:1819   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1738:1817   */\n      tag_214\n      tag_201\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1700:1819   */\n    tag_213:\n        /* \"#utility.yul\":1858:1859   */\n      0x00\n        /* \"#utility.yul\":1883:1936   */\n      tag_215\n        /* \"#utility.yul\":1928:1935   */\n      dup5\n        /* \"#utility.yul\":1919:1925   */\n      dup3\n        /* \"#utility.yul\":1908:1917   */\n      dup6\n        /* \"#utility.yul\":1904:1926   */\n      add\n        /* \"#utility.yul\":1883:1936   */\n      tag_194\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1873:1936   */\n      swap2\n      pop\n        /* \"#utility.yul\":1829:1946   */\n      pop\n        /* \"#utility.yul\":1624:1953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2138   */\n    tag_216:\n        /* \"#utility.yul\":2028:2038   */\n      0x00\n        /* \"#utility.yul\":2049:2095   */\n      tag_218\n        /* \"#utility.yul\":2091:2094   */\n      dup4\n        /* \"#utility.yul\":2083:2089   */\n      dup4\n        /* \"#utility.yul\":2049:2095   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2127:2131   */\n      0x20\n        /* \"#utility.yul\":2122:2125   */\n      dup4\n        /* \"#utility.yul\":2118:2132   */\n      add\n        /* \"#utility.yul\":2104:2132   */\n      swap1\n      pop\n        /* \"#utility.yul\":1959:2138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2144:2286   */\n    tag_220:\n        /* \"#utility.yul\":2247:2279   */\n      tag_222\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2247:2279   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2242:2245   */\n      dup3\n        /* \"#utility.yul\":2235:2280   */\n      mstore\n        /* \"#utility.yul\":2144:2286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2322:3054   */\n    tag_224:\n        /* \"#utility.yul\":2441:2444   */\n      0x00\n        /* \"#utility.yul\":2470:2524   */\n      tag_226\n        /* \"#utility.yul\":2518:2523   */\n      dup3\n        /* \"#utility.yul\":2470:2524   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2540:2626   */\n      tag_228\n        /* \"#utility.yul\":2619:2625   */\n      dup2\n        /* \"#utility.yul\":2614:2617   */\n      dup6\n        /* \"#utility.yul\":2540:2626   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2533:2626   */\n      swap4\n      pop\n        /* \"#utility.yul\":2650:2706   */\n      tag_230\n        /* \"#utility.yul\":2700:2705   */\n      dup4\n        /* \"#utility.yul\":2650:2706   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2729:2736   */\n      dup1\n        /* \"#utility.yul\":2760:2761   */\n      0x00\n        /* \"#utility.yul\":2745:3029   */\n    tag_232:\n        /* \"#utility.yul\":2770:2776   */\n      dup4\n        /* \"#utility.yul\":2767:2768   */\n      dup2\n        /* \"#utility.yul\":2764:2777   */\n      lt\n        /* \"#utility.yul\":2745:3029   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2846:2852   */\n      dup2\n        /* \"#utility.yul\":2840:2853   */\n      mload\n        /* \"#utility.yul\":2873:2936   */\n      tag_235\n        /* \"#utility.yul\":2932:2935   */\n      dup9\n        /* \"#utility.yul\":2917:2930   */\n      dup3\n        /* \"#utility.yul\":2873:2936   */\n      tag_216\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2866:2936   */\n      swap8\n      pop\n        /* \"#utility.yul\":2959:3019   */\n      tag_236\n        /* \"#utility.yul\":3012:3018   */\n      dup4\n        /* \"#utility.yul\":2959:3019   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2949:3019   */\n      swap3\n      pop\n        /* \"#utility.yul\":2805:3029   */\n      pop\n        /* \"#utility.yul\":2792:2793   */\n      0x01\n        /* \"#utility.yul\":2789:2790   */\n      dup2\n        /* \"#utility.yul\":2785:2794   */\n      add\n        /* \"#utility.yul\":2780:2794   */\n      swap1\n      pop\n        /* \"#utility.yul\":2745:3029   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":2749:2763   */\n      pop\n        /* \"#utility.yul\":3045:3048   */\n      dup6\n        /* \"#utility.yul\":3038:3048   */\n      swap4\n      pop\n        /* \"#utility.yul\":2446:3054   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2322:3054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3169   */\n    tag_238:\n        /* \"#utility.yul\":3141:3162   */\n      tag_240\n        /* \"#utility.yul\":3156:3161   */\n      dup2\n        /* \"#utility.yul\":3141:3162   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3136:3139   */\n      dup3\n        /* \"#utility.yul\":3129:3163   */\n      mstore\n        /* \"#utility.yul\":3060:3169   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3539   */\n    tag_242:\n        /* \"#utility.yul\":3263:3266   */\n      0x00\n        /* \"#utility.yul\":3291:3330   */\n      tag_244\n        /* \"#utility.yul\":3324:3329   */\n      dup3\n        /* \"#utility.yul\":3291:3330   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3346:3417   */\n      tag_246\n        /* \"#utility.yul\":3410:3416   */\n      dup2\n        /* \"#utility.yul\":3405:3408   */\n      dup6\n        /* \"#utility.yul\":3346:3417   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3339:3417   */\n      swap4\n      pop\n        /* \"#utility.yul\":3426:3478   */\n      tag_248\n        /* \"#utility.yul\":3471:3477   */\n      dup2\n        /* \"#utility.yul\":3466:3469   */\n      dup6\n        /* \"#utility.yul\":3459:3463   */\n      0x20\n        /* \"#utility.yul\":3452:3457   */\n      dup7\n        /* \"#utility.yul\":3448:3464   */\n      add\n        /* \"#utility.yul\":3426:3478   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3503:3532   */\n      tag_250\n        /* \"#utility.yul\":3525:3531   */\n      dup2\n        /* \"#utility.yul\":3503:3532   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3498:3501   */\n      dup5\n        /* \"#utility.yul\":3494:3533   */\n      add\n        /* \"#utility.yul\":3487:3533   */\n      swap2\n      pop\n        /* \"#utility.yul\":3267:3539   */\n      pop\n        /* \"#utility.yul\":3175:3539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3545:3911   */\n    tag_252:\n        /* \"#utility.yul\":3687:3690   */\n      0x00\n        /* \"#utility.yul\":3708:3775   */\n      tag_254\n        /* \"#utility.yul\":3772:3774   */\n      0x12\n        /* \"#utility.yul\":3767:3770   */\n      dup4\n        /* \"#utility.yul\":3708:3775   */\n      tag_247\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3701:3775   */\n      swap2\n      pop\n        /* \"#utility.yul\":3784:3877   */\n      tag_255\n        /* \"#utility.yul\":3873:3876   */\n      dup3\n        /* \"#utility.yul\":3784:3877   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3902:3904   */\n      0x20\n        /* \"#utility.yul\":3897:3900   */\n      dup3\n        /* \"#utility.yul\":3893:3905   */\n      add\n        /* \"#utility.yul\":3886:3905   */\n      swap1\n      pop\n        /* \"#utility.yul\":3545:3911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3917:4283   */\n    tag_257:\n        /* \"#utility.yul\":4059:4062   */\n      0x00\n        /* \"#utility.yul\":4080:4147   */\n      tag_259\n        /* \"#utility.yul\":4144:4146   */\n      0x1b\n        /* \"#utility.yul\":4139:4142   */\n      dup4\n        /* \"#utility.yul\":4080:4147   */\n      tag_247\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4073:4147   */\n      swap2\n      pop\n        /* \"#utility.yul\":4156:4249   */\n      tag_260\n        /* \"#utility.yul\":4245:4248   */\n      dup3\n        /* \"#utility.yul\":4156:4249   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4274:4276   */\n      0x20\n        /* \"#utility.yul\":4269:4272   */\n      dup3\n        /* \"#utility.yul\":4265:4277   */\n      add\n        /* \"#utility.yul\":4258:4277   */\n      swap1\n      pop\n        /* \"#utility.yul\":3917:4283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4289:4655   */\n    tag_262:\n        /* \"#utility.yul\":4431:4434   */\n      0x00\n        /* \"#utility.yul\":4452:4519   */\n      tag_264\n        /* \"#utility.yul\":4516:4518   */\n      0x1b\n        /* \"#utility.yul\":4511:4514   */\n      dup4\n        /* \"#utility.yul\":4452:4519   */\n      tag_247\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4445:4519   */\n      swap2\n      pop\n        /* \"#utility.yul\":4528:4621   */\n      tag_265\n        /* \"#utility.yul\":4617:4620   */\n      dup3\n        /* \"#utility.yul\":4528:4621   */\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4646:4648   */\n      0x20\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4637:4649   */\n      add\n        /* \"#utility.yul\":4630:4649   */\n      swap1\n      pop\n        /* \"#utility.yul\":4289:4655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4661:5027   */\n    tag_267:\n        /* \"#utility.yul\":4803:4806   */\n      0x00\n        /* \"#utility.yul\":4824:4891   */\n      tag_269\n        /* \"#utility.yul\":4888:4890   */\n      0x15\n        /* \"#utility.yul\":4883:4886   */\n      dup4\n        /* \"#utility.yul\":4824:4891   */\n      tag_247\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4817:4891   */\n      swap2\n      pop\n        /* \"#utility.yul\":4900:4993   */\n      tag_270\n        /* \"#utility.yul\":4989:4992   */\n      dup3\n        /* \"#utility.yul\":4900:4993   */\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5018:5020   */\n      0x20\n        /* \"#utility.yul\":5013:5016   */\n      dup3\n        /* \"#utility.yul\":5009:5021   */\n      add\n        /* \"#utility.yul\":5002:5021   */\n      swap1\n      pop\n        /* \"#utility.yul\":4661:5027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5033:5399   */\n    tag_272:\n        /* \"#utility.yul\":5175:5178   */\n      0x00\n        /* \"#utility.yul\":5196:5263   */\n      tag_274\n        /* \"#utility.yul\":5260:5262   */\n      0x1c\n        /* \"#utility.yul\":5255:5258   */\n      dup4\n        /* \"#utility.yul\":5196:5263   */\n      tag_247\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5189:5263   */\n      swap2\n      pop\n        /* \"#utility.yul\":5272:5365   */\n      tag_275\n        /* \"#utility.yul\":5361:5364   */\n      dup3\n        /* \"#utility.yul\":5272:5365   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5390:5392   */\n      0x20\n        /* \"#utility.yul\":5385:5388   */\n      dup3\n        /* \"#utility.yul\":5381:5393   */\n      add\n        /* \"#utility.yul\":5374:5393   */\n      swap1\n      pop\n        /* \"#utility.yul\":5033:5399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5405:5771   */\n    tag_277:\n        /* \"#utility.yul\":5547:5550   */\n      0x00\n        /* \"#utility.yul\":5568:5635   */\n      tag_279\n        /* \"#utility.yul\":5632:5634   */\n      0x1b\n        /* \"#utility.yul\":5627:5630   */\n      dup4\n        /* \"#utility.yul\":5568:5635   */\n      tag_247\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5561:5635   */\n      swap2\n      pop\n        /* \"#utility.yul\":5644:5737   */\n      tag_280\n        /* \"#utility.yul\":5733:5736   */\n      dup3\n        /* \"#utility.yul\":5644:5737   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5762:5764   */\n      0x20\n        /* \"#utility.yul\":5757:5760   */\n      dup3\n        /* \"#utility.yul\":5753:5765   */\n      add\n        /* \"#utility.yul\":5746:5765   */\n      swap1\n      pop\n        /* \"#utility.yul\":5405:5771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5777:6143   */\n    tag_282:\n        /* \"#utility.yul\":5919:5922   */\n      0x00\n        /* \"#utility.yul\":5940:6007   */\n      tag_284\n        /* \"#utility.yul\":6004:6006   */\n      0x19\n        /* \"#utility.yul\":5999:6002   */\n      dup4\n        /* \"#utility.yul\":5940:6007   */\n      tag_247\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5933:6007   */\n      swap2\n      pop\n        /* \"#utility.yul\":6016:6109   */\n      tag_285\n        /* \"#utility.yul\":6105:6108   */\n      dup3\n        /* \"#utility.yul\":6016:6109   */\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6134:6136   */\n      0x20\n        /* \"#utility.yul\":6129:6132   */\n      dup3\n        /* \"#utility.yul\":6125:6137   */\n      add\n        /* \"#utility.yul\":6118:6137   */\n      swap1\n      pop\n        /* \"#utility.yul\":5777:6143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6149:6515   */\n    tag_287:\n        /* \"#utility.yul\":6291:6294   */\n      0x00\n        /* \"#utility.yul\":6312:6379   */\n      tag_289\n        /* \"#utility.yul\":6376:6378   */\n      0x1d\n        /* \"#utility.yul\":6371:6374   */\n      dup4\n        /* \"#utility.yul\":6312:6379   */\n      tag_247\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6305:6379   */\n      swap2\n      pop\n        /* \"#utility.yul\":6388:6481   */\n      tag_290\n        /* \"#utility.yul\":6477:6480   */\n      dup3\n        /* \"#utility.yul\":6388:6481   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6506:6508   */\n      0x20\n        /* \"#utility.yul\":6501:6504   */\n      dup3\n        /* \"#utility.yul\":6497:6509   */\n      add\n        /* \"#utility.yul\":6490:6509   */\n      swap1\n      pop\n        /* \"#utility.yul\":6149:6515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6521:6629   */\n    tag_219:\n        /* \"#utility.yul\":6598:6622   */\n      tag_293\n        /* \"#utility.yul\":6616:6621   */\n      dup2\n        /* \"#utility.yul\":6598:6622   */\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6593:6596   */\n      dup3\n        /* \"#utility.yul\":6586:6623   */\n      mstore\n        /* \"#utility.yul\":6521:6629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6635:6753   */\n    tag_295:\n        /* \"#utility.yul\":6722:6746   */\n      tag_297\n        /* \"#utility.yul\":6740:6745   */\n      dup2\n        /* \"#utility.yul\":6722:6746   */\n      tag_294\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6717:6720   */\n      dup3\n        /* \"#utility.yul\":6710:6747   */\n      mstore\n        /* \"#utility.yul\":6635:6753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6759:7013   */\n    tag_73:\n        /* \"#utility.yul\":6868:6872   */\n      0x00\n        /* \"#utility.yul\":6906:6908   */\n      0x20\n        /* \"#utility.yul\":6895:6904   */\n      dup3\n        /* \"#utility.yul\":6891:6909   */\n      add\n        /* \"#utility.yul\":6883:6909   */\n      swap1\n      pop\n        /* \"#utility.yul\":6919:7006   */\n      tag_299\n        /* \"#utility.yul\":7003:7004   */\n      0x00\n        /* \"#utility.yul\":6992:7001   */\n      dup4\n        /* \"#utility.yul\":6988:7005   */\n      add\n        /* \"#utility.yul\":6979:6985   */\n      dup5\n        /* \"#utility.yul\":6919:7006   */\n      tag_220\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6759:7013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7019:7392   */\n    tag_84:\n        /* \"#utility.yul\":7162:7166   */\n      0x00\n        /* \"#utility.yul\":7200:7202   */\n      0x20\n        /* \"#utility.yul\":7189:7198   */\n      dup3\n        /* \"#utility.yul\":7185:7203   */\n      add\n        /* \"#utility.yul\":7177:7203   */\n      swap1\n      pop\n        /* \"#utility.yul\":7249:7258   */\n      dup2\n        /* \"#utility.yul\":7243:7247   */\n      dup2\n        /* \"#utility.yul\":7239:7259   */\n      sub\n        /* \"#utility.yul\":7235:7236   */\n      0x00\n        /* \"#utility.yul\":7224:7233   */\n      dup4\n        /* \"#utility.yul\":7220:7237   */\n      add\n        /* \"#utility.yul\":7213:7260   */\n      mstore\n        /* \"#utility.yul\":7277:7385   */\n      tag_301\n        /* \"#utility.yul\":7380:7384   */\n      dup2\n        /* \"#utility.yul\":7371:7377   */\n      dup5\n        /* \"#utility.yul\":7277:7385   */\n      tag_224\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7269:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7019:7392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7398:7608   */\n    tag_32:\n        /* \"#utility.yul\":7485:7489   */\n      0x00\n        /* \"#utility.yul\":7523:7525   */\n      0x20\n        /* \"#utility.yul\":7512:7521   */\n      dup3\n        /* \"#utility.yul\":7508:7526   */\n      add\n        /* \"#utility.yul\":7500:7526   */\n      swap1\n      pop\n        /* \"#utility.yul\":7536:7601   */\n      tag_303\n        /* \"#utility.yul\":7598:7599   */\n      0x00\n        /* \"#utility.yul\":7587:7596   */\n      dup4\n        /* \"#utility.yul\":7583:7600   */\n      add\n        /* \"#utility.yul\":7574:7580   */\n      dup5\n        /* \"#utility.yul\":7536:7601   */\n      tag_238\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7398:7608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7614:8033   */\n    tag_137:\n        /* \"#utility.yul\":7780:7784   */\n      0x00\n        /* \"#utility.yul\":7818:7820   */\n      0x20\n        /* \"#utility.yul\":7807:7816   */\n      dup3\n        /* \"#utility.yul\":7803:7821   */\n      add\n        /* \"#utility.yul\":7795:7821   */\n      swap1\n      pop\n        /* \"#utility.yul\":7867:7876   */\n      dup2\n        /* \"#utility.yul\":7861:7865   */\n      dup2\n        /* \"#utility.yul\":7857:7877   */\n      sub\n        /* \"#utility.yul\":7853:7854   */\n      0x00\n        /* \"#utility.yul\":7842:7851   */\n      dup4\n        /* \"#utility.yul\":7838:7855   */\n      add\n        /* \"#utility.yul\":7831:7878   */\n      mstore\n        /* \"#utility.yul\":7895:8026   */\n      tag_305\n        /* \"#utility.yul\":8021:8025   */\n      dup2\n        /* \"#utility.yul\":7895:8026   */\n      tag_252\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7887:8026   */\n      swap1\n      pop\n        /* \"#utility.yul\":7614:8033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8039:8458   */\n    tag_109:\n        /* \"#utility.yul\":8205:8209   */\n      0x00\n        /* \"#utility.yul\":8243:8245   */\n      0x20\n        /* \"#utility.yul\":8232:8241   */\n      dup3\n        /* \"#utility.yul\":8228:8246   */\n      add\n        /* \"#utility.yul\":8220:8246   */\n      swap1\n      pop\n        /* \"#utility.yul\":8292:8301   */\n      dup2\n        /* \"#utility.yul\":8286:8290   */\n      dup2\n        /* \"#utility.yul\":8282:8302   */\n      sub\n        /* \"#utility.yul\":8278:8279   */\n      0x00\n        /* \"#utility.yul\":8267:8276   */\n      dup4\n        /* \"#utility.yul\":8263:8280   */\n      add\n        /* \"#utility.yul\":8256:8303   */\n      mstore\n        /* \"#utility.yul\":8320:8451   */\n      tag_307\n        /* \"#utility.yul\":8446:8450   */\n      dup2\n        /* \"#utility.yul\":8320:8451   */\n      tag_257\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8312:8451   */\n      swap1\n      pop\n        /* \"#utility.yul\":8039:8458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8464:8883   */\n    tag_169:\n        /* \"#utility.yul\":8630:8634   */\n      0x00\n        /* \"#utility.yul\":8668:8670   */\n      0x20\n        /* \"#utility.yul\":8657:8666   */\n      dup3\n        /* \"#utility.yul\":8653:8671   */\n      add\n        /* \"#utility.yul\":8645:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8717:8726   */\n      dup2\n        /* \"#utility.yul\":8711:8715   */\n      dup2\n        /* \"#utility.yul\":8707:8727   */\n      sub\n        /* \"#utility.yul\":8703:8704   */\n      0x00\n        /* \"#utility.yul\":8692:8701   */\n      dup4\n        /* \"#utility.yul\":8688:8705   */\n      add\n        /* \"#utility.yul\":8681:8728   */\n      mstore\n        /* \"#utility.yul\":8745:8876   */\n      tag_309\n        /* \"#utility.yul\":8871:8875   */\n      dup2\n        /* \"#utility.yul\":8745:8876   */\n      tag_262\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8737:8876   */\n      swap1\n      pop\n        /* \"#utility.yul\":8464:8883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8889:9308   */\n    tag_122:\n        /* \"#utility.yul\":9055:9059   */\n      0x00\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9082:9091   */\n      dup3\n        /* \"#utility.yul\":9078:9096   */\n      add\n        /* \"#utility.yul\":9070:9096   */\n      swap1\n      pop\n        /* \"#utility.yul\":9142:9151   */\n      dup2\n        /* \"#utility.yul\":9136:9140   */\n      dup2\n        /* \"#utility.yul\":9132:9152   */\n      sub\n        /* \"#utility.yul\":9128:9129   */\n      0x00\n        /* \"#utility.yul\":9117:9126   */\n      dup4\n        /* \"#utility.yul\":9113:9130   */\n      add\n        /* \"#utility.yul\":9106:9153   */\n      mstore\n        /* \"#utility.yul\":9170:9301   */\n      tag_311\n        /* \"#utility.yul\":9296:9300   */\n      dup2\n        /* \"#utility.yul\":9170:9301   */\n      tag_267\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9162:9301   */\n      swap1\n      pop\n        /* \"#utility.yul\":8889:9308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9314:9733   */\n    tag_90:\n        /* \"#utility.yul\":9480:9484   */\n      0x00\n        /* \"#utility.yul\":9518:9520   */\n      0x20\n        /* \"#utility.yul\":9507:9516   */\n      dup3\n        /* \"#utility.yul\":9503:9521   */\n      add\n        /* \"#utility.yul\":9495:9521   */\n      swap1\n      pop\n        /* \"#utility.yul\":9567:9576   */\n      dup2\n        /* \"#utility.yul\":9561:9565   */\n      dup2\n        /* \"#utility.yul\":9557:9577   */\n      sub\n        /* \"#utility.yul\":9553:9554   */\n      0x00\n        /* \"#utility.yul\":9542:9551   */\n      dup4\n        /* \"#utility.yul\":9538:9555   */\n      add\n        /* \"#utility.yul\":9531:9578   */\n      mstore\n        /* \"#utility.yul\":9595:9726   */\n      tag_313\n        /* \"#utility.yul\":9721:9725   */\n      dup2\n        /* \"#utility.yul\":9595:9726   */\n      tag_272\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9587:9726   */\n      swap1\n      pop\n        /* \"#utility.yul\":9314:9733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9739:10158   */\n    tag_117:\n        /* \"#utility.yul\":9905:9909   */\n      0x00\n        /* \"#utility.yul\":9943:9945   */\n      0x20\n        /* \"#utility.yul\":9932:9941   */\n      dup3\n        /* \"#utility.yul\":9928:9946   */\n      add\n        /* \"#utility.yul\":9920:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9992:10001   */\n      dup2\n        /* \"#utility.yul\":9986:9990   */\n      dup2\n        /* \"#utility.yul\":9982:10002   */\n      sub\n        /* \"#utility.yul\":9978:9979   */\n      0x00\n        /* \"#utility.yul\":9967:9976   */\n      dup4\n        /* \"#utility.yul\":9963:9980   */\n      add\n        /* \"#utility.yul\":9956:10003   */\n      mstore\n        /* \"#utility.yul\":10020:10151   */\n      tag_315\n        /* \"#utility.yul\":10146:10150   */\n      dup2\n        /* \"#utility.yul\":10020:10151   */\n      tag_277\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10012:10151   */\n      swap1\n      pop\n        /* \"#utility.yul\":9739:10158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10583   */\n    tag_134:\n        /* \"#utility.yul\":10330:10334   */\n      0x00\n        /* \"#utility.yul\":10368:10370   */\n      0x20\n        /* \"#utility.yul\":10357:10366   */\n      dup3\n        /* \"#utility.yul\":10353:10371   */\n      add\n        /* \"#utility.yul\":10345:10371   */\n      swap1\n      pop\n        /* \"#utility.yul\":10417:10426   */\n      dup2\n        /* \"#utility.yul\":10411:10415   */\n      dup2\n        /* \"#utility.yul\":10407:10427   */\n      sub\n        /* \"#utility.yul\":10403:10404   */\n      0x00\n        /* \"#utility.yul\":10392:10401   */\n      dup4\n        /* \"#utility.yul\":10388:10405   */\n      add\n        /* \"#utility.yul\":10381:10428   */\n      mstore\n        /* \"#utility.yul\":10445:10576   */\n      tag_317\n        /* \"#utility.yul\":10571:10575   */\n      dup2\n        /* \"#utility.yul\":10445:10576   */\n      tag_282\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10437:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10164:10583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10589:11008   */\n    tag_99:\n        /* \"#utility.yul\":10755:10759   */\n      0x00\n        /* \"#utility.yul\":10793:10795   */\n      0x20\n        /* \"#utility.yul\":10782:10791   */\n      dup3\n        /* \"#utility.yul\":10778:10796   */\n      add\n        /* \"#utility.yul\":10770:10796   */\n      swap1\n      pop\n        /* \"#utility.yul\":10842:10851   */\n      dup2\n        /* \"#utility.yul\":10836:10840   */\n      dup2\n        /* \"#utility.yul\":10832:10852   */\n      sub\n        /* \"#utility.yul\":10828:10829   */\n      0x00\n        /* \"#utility.yul\":10817:10826   */\n      dup4\n        /* \"#utility.yul\":10813:10830   */\n      add\n        /* \"#utility.yul\":10806:10853   */\n      mstore\n        /* \"#utility.yul\":10870:11001   */\n      tag_319\n        /* \"#utility.yul\":10996:11000   */\n      dup2\n        /* \"#utility.yul\":10870:11001   */\n      tag_287\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10862:11001   */\n      swap1\n      pop\n        /* \"#utility.yul\":10589:11008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11014:11236   */\n    tag_23:\n        /* \"#utility.yul\":11107:11111   */\n      0x00\n        /* \"#utility.yul\":11145:11147   */\n      0x20\n        /* \"#utility.yul\":11134:11143   */\n      dup3\n        /* \"#utility.yul\":11130:11148   */\n      add\n        /* \"#utility.yul\":11122:11148   */\n      swap1\n      pop\n        /* \"#utility.yul\":11158:11229   */\n      tag_321\n        /* \"#utility.yul\":11226:11227   */\n      0x00\n        /* \"#utility.yul\":11215:11224   */\n      dup4\n        /* \"#utility.yul\":11211:11228   */\n      add\n        /* \"#utility.yul\":11202:11208   */\n      dup5\n        /* \"#utility.yul\":11158:11229   */\n      tag_295\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":11014:11236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11242:11665   */\n    tag_42:\n        /* \"#utility.yul\":11383:11387   */\n      0x00\n        /* \"#utility.yul\":11421:11423   */\n      0x40\n        /* \"#utility.yul\":11410:11419   */\n      dup3\n        /* \"#utility.yul\":11406:11424   */\n      add\n        /* \"#utility.yul\":11398:11424   */\n      swap1\n      pop\n        /* \"#utility.yul\":11434:11505   */\n      tag_323\n        /* \"#utility.yul\":11502:11503   */\n      0x00\n        /* \"#utility.yul\":11491:11500   */\n      dup4\n        /* \"#utility.yul\":11487:11504   */\n      add\n        /* \"#utility.yul\":11478:11484   */\n      dup6\n        /* \"#utility.yul\":11434:11505   */\n      tag_295\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11552:11561   */\n      dup2\n        /* \"#utility.yul\":11546:11550   */\n      dup2\n        /* \"#utility.yul\":11542:11562   */\n      sub\n        /* \"#utility.yul\":11537:11539   */\n      0x20\n        /* \"#utility.yul\":11526:11535   */\n      dup4\n        /* \"#utility.yul\":11522:11540   */\n      add\n        /* \"#utility.yul\":11515:11563   */\n      mstore\n        /* \"#utility.yul\":11580:11658   */\n      tag_324\n        /* \"#utility.yul\":11653:11657   */\n      dup2\n        /* \"#utility.yul\":11644:11650   */\n      dup5\n        /* \"#utility.yul\":11580:11658   */\n      tag_242\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11572:11658   */\n      swap1\n      pop\n        /* \"#utility.yul\":11242:11665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11671:12113   */\n    tag_61:\n        /* \"#utility.yul\":11820:11824   */\n      0x00\n        /* \"#utility.yul\":11858:11860   */\n      0x60\n        /* \"#utility.yul\":11847:11856   */\n      dup3\n        /* \"#utility.yul\":11843:11861   */\n      add\n        /* \"#utility.yul\":11835:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11871:11942   */\n      tag_326\n        /* \"#utility.yul\":11939:11940   */\n      0x00\n        /* \"#utility.yul\":11928:11937   */\n      dup4\n        /* \"#utility.yul\":11924:11941   */\n      add\n        /* \"#utility.yul\":11915:11921   */\n      dup7\n        /* \"#utility.yul\":11871:11942   */\n      tag_295\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":11952:12024   */\n      tag_327\n        /* \"#utility.yul\":12020:12022   */\n      0x20\n        /* \"#utility.yul\":12009:12018   */\n      dup4\n        /* \"#utility.yul\":12005:12023   */\n      add\n        /* \"#utility.yul\":11996:12002   */\n      dup6\n        /* \"#utility.yul\":11952:12024   */\n      tag_295\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12034:12106   */\n      tag_328\n        /* \"#utility.yul\":12102:12104   */\n      0x40\n        /* \"#utility.yul\":12091:12100   */\n      dup4\n        /* \"#utility.yul\":12087:12105   */\n      add\n        /* \"#utility.yul\":12078:12084   */\n      dup5\n        /* \"#utility.yul\":12034:12106   */\n      tag_295\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11671:12113   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12200:12332   */\n    tag_231:\n        /* \"#utility.yul\":12267:12271   */\n      0x00\n        /* \"#utility.yul\":12290:12293   */\n      dup2\n        /* \"#utility.yul\":12282:12293   */\n      swap1\n      pop\n        /* \"#utility.yul\":12320:12324   */\n      0x20\n        /* \"#utility.yul\":12315:12318   */\n      dup3\n        /* \"#utility.yul\":12311:12325   */\n      add\n        /* \"#utility.yul\":12303:12325   */\n      swap1\n      pop\n        /* \"#utility.yul\":12200:12332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12338:12452   */\n    tag_227:\n        /* \"#utility.yul\":12405:12411   */\n      0x00\n        /* \"#utility.yul\":12439:12444   */\n      dup2\n        /* \"#utility.yul\":12433:12445   */\n      mload\n        /* \"#utility.yul\":12423:12445   */\n      swap1\n      pop\n        /* \"#utility.yul\":12338:12452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12458:12557   */\n    tag_245:\n        /* \"#utility.yul\":12510:12516   */\n      0x00\n        /* \"#utility.yul\":12544:12549   */\n      dup2\n        /* \"#utility.yul\":12538:12550   */\n      mload\n        /* \"#utility.yul\":12528:12550   */\n      swap1\n      pop\n        /* \"#utility.yul\":12458:12557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12563:12676   */\n    tag_237:\n        /* \"#utility.yul\":12633:12637   */\n      0x00\n        /* \"#utility.yul\":12665:12669   */\n      0x20\n        /* \"#utility.yul\":12660:12663   */\n      dup3\n        /* \"#utility.yul\":12656:12670   */\n      add\n        /* \"#utility.yul\":12648:12670   */\n      swap1\n      pop\n        /* \"#utility.yul\":12563:12676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12682:12866   */\n    tag_229:\n        /* \"#utility.yul\":12781:12792   */\n      0x00\n        /* \"#utility.yul\":12815:12821   */\n      dup3\n        /* \"#utility.yul\":12810:12813   */\n      dup3\n        /* \"#utility.yul\":12803:12822   */\n      mstore\n        /* \"#utility.yul\":12855:12859   */\n      0x20\n        /* \"#utility.yul\":12850:12853   */\n      dup3\n        /* \"#utility.yul\":12846:12860   */\n      add\n        /* \"#utility.yul\":12831:12860   */\n      swap1\n      pop\n        /* \"#utility.yul\":12682:12866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12872:13041   */\n    tag_247:\n        /* \"#utility.yul\":12956:12967   */\n      0x00\n        /* \"#utility.yul\":12990:12996   */\n      dup3\n        /* \"#utility.yul\":12985:12988   */\n      dup3\n        /* \"#utility.yul\":12978:12997   */\n      mstore\n        /* \"#utility.yul\":13030:13034   */\n      0x20\n        /* \"#utility.yul\":13025:13028   */\n      dup3\n        /* \"#utility.yul\":13021:13035   */\n      add\n        /* \"#utility.yul\":13006:13035   */\n      swap1\n      pop\n        /* \"#utility.yul\":12872:13041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13047:13143   */\n    tag_337:\n        /* \"#utility.yul\":13084:13091   */\n      0x00\n        /* \"#utility.yul\":13113:13137   */\n      tag_339\n        /* \"#utility.yul\":13131:13136   */\n      dup3\n        /* \"#utility.yul\":13113:13137   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13102:13137   */\n      swap1\n      pop\n        /* \"#utility.yul\":13047:13143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13149:13253   */\n    tag_223:\n        /* \"#utility.yul\":13194:13201   */\n      0x00\n        /* \"#utility.yul\":13223:13247   */\n      tag_342\n        /* \"#utility.yul\":13241:13246   */\n      dup3\n        /* \"#utility.yul\":13223:13247   */\n      tag_340\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13212:13247   */\n      swap1\n      pop\n        /* \"#utility.yul\":13149:13253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13259:13349   */\n    tag_241:\n        /* \"#utility.yul\":13293:13300   */\n      0x00\n        /* \"#utility.yul\":13336:13341   */\n      dup2\n        /* \"#utility.yul\":13329:13342   */\n      iszero\n        /* \"#utility.yul\":13322:13343   */\n      iszero\n        /* \"#utility.yul\":13311:13343   */\n      swap1\n      pop\n        /* \"#utility.yul\":13259:13349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13355:13481   */\n    tag_340:\n        /* \"#utility.yul\":13392:13399   */\n      0x00\n        /* \"#utility.yul\":13432:13474   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13425:13430   */\n      dup3\n        /* \"#utility.yul\":13421:13475   */\n      and\n        /* \"#utility.yul\":13410:13475   */\n      swap1\n      pop\n        /* \"#utility.yul\":13355:13481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13487:13564   */\n    tag_294:\n        /* \"#utility.yul\":13524:13531   */\n      0x00\n        /* \"#utility.yul\":13553:13558   */\n      dup2\n        /* \"#utility.yul\":13542:13558   */\n      swap1\n      pop\n        /* \"#utility.yul\":13487:13564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13570:13877   */\n    tag_249:\n        /* \"#utility.yul\":13638:13639   */\n      0x00\n        /* \"#utility.yul\":13648:13761   */\n    tag_347:\n        /* \"#utility.yul\":13662:13668   */\n      dup4\n        /* \"#utility.yul\":13659:13660   */\n      dup2\n        /* \"#utility.yul\":13656:13669   */\n      lt\n        /* \"#utility.yul\":13648:13761   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":13747:13748   */\n      dup1\n        /* \"#utility.yul\":13742:13745   */\n      dup3\n        /* \"#utility.yul\":13738:13749   */\n      add\n        /* \"#utility.yul\":13732:13750   */\n      mload\n        /* \"#utility.yul\":13728:13729   */\n      dup2\n        /* \"#utility.yul\":13723:13726   */\n      dup5\n        /* \"#utility.yul\":13719:13730   */\n      add\n        /* \"#utility.yul\":13712:13751   */\n      mstore\n        /* \"#utility.yul\":13684:13686   */\n      0x20\n        /* \"#utility.yul\":13681:13682   */\n      dup2\n        /* \"#utility.yul\":13677:13687   */\n      add\n        /* \"#utility.yul\":13672:13687   */\n      swap1\n      pop\n        /* \"#utility.yul\":13648:13761   */\n      jump(tag_347)\n    tag_349:\n        /* \"#utility.yul\":13779:13785   */\n      dup4\n        /* \"#utility.yul\":13776:13777   */\n      dup2\n        /* \"#utility.yul\":13773:13786   */\n      gt\n        /* \"#utility.yul\":13770:13871   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":13859:13860   */\n      0x00\n        /* \"#utility.yul\":13850:13856   */\n      dup5\n        /* \"#utility.yul\":13845:13848   */\n      dup5\n        /* \"#utility.yul\":13841:13857   */\n      add\n        /* \"#utility.yul\":13834:13861   */\n      mstore\n        /* \"#utility.yul\":13770:13871   */\n    tag_350:\n        /* \"#utility.yul\":13619:13877   */\n      pop\n        /* \"#utility.yul\":13570:13877   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14006:14123   */\n    tag_201:\n        /* \"#utility.yul\":14115:14116   */\n      0x00\n        /* \"#utility.yul\":14112:14113   */\n      dup1\n        /* \"#utility.yul\":14105:14117   */\n      revert\n        /* \"#utility.yul\":14129:14231   */\n    tag_251:\n        /* \"#utility.yul\":14170:14176   */\n      0x00\n        /* \"#utility.yul\":14221:14223   */\n      0x1f\n        /* \"#utility.yul\":14217:14224   */\n      not\n        /* \"#utility.yul\":14212:14214   */\n      0x1f\n        /* \"#utility.yul\":14205:14210   */\n      dup4\n        /* \"#utility.yul\":14201:14215   */\n      add\n        /* \"#utility.yul\":14197:14225   */\n      and\n        /* \"#utility.yul\":14187:14225   */\n      swap1\n      pop\n        /* \"#utility.yul\":14129:14231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14237:14405   */\n    tag_256:\n        /* \"#utility.yul\":14377:14397   */\n      0x4e6f7420456e6f7567682042616c616e63650000000000000000000000000000\n        /* \"#utility.yul\":14373:14374   */\n      0x00\n        /* \"#utility.yul\":14365:14371   */\n      dup3\n        /* \"#utility.yul\":14361:14375   */\n      add\n        /* \"#utility.yul\":14354:14398   */\n      mstore\n        /* \"#utility.yul\":14237:14405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14411:14588   */\n    tag_261:\n        /* \"#utility.yul\":14551:14580   */\n      0x44726f707369746520697320616c72656164792052756e6e696e670000000000\n        /* \"#utility.yul\":14547:14548   */\n      0x00\n        /* \"#utility.yul\":14539:14545   */\n      dup3\n        /* \"#utility.yul\":14535:14549   */\n      add\n        /* \"#utility.yul\":14528:14581   */\n      mstore\n        /* \"#utility.yul\":14411:14588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14594:14771   */\n    tag_266:\n        /* \"#utility.yul\":14734:14763   */\n      0x44726f707369746520697320616c72656164792053746f707065640000000000\n        /* \"#utility.yul\":14730:14731   */\n      0x00\n        /* \"#utility.yul\":14722:14728   */\n      dup3\n        /* \"#utility.yul\":14718:14732   */\n      add\n        /* \"#utility.yul\":14711:14764   */\n      mstore\n        /* \"#utility.yul\":14594:14771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14777:14948   */\n    tag_271:\n        /* \"#utility.yul\":14917:14940   */\n      0x596f752063616e206d696e7420312d33204e4654730000000000000000000000\n        /* \"#utility.yul\":14913:14914   */\n      0x00\n        /* \"#utility.yul\":14905:14911   */\n      dup3\n        /* \"#utility.yul\":14901:14915   */\n      add\n        /* \"#utility.yul\":14894:14941   */\n      mstore\n        /* \"#utility.yul\":14777:14948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14954:15132   */\n    tag_276:\n        /* \"#utility.yul\":15094:15124   */\n      0x4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000\n        /* \"#utility.yul\":15090:15091   */\n      0x00\n        /* \"#utility.yul\":15082:15088   */\n      dup3\n        /* \"#utility.yul\":15078:15092   */\n      add\n        /* \"#utility.yul\":15071:15125   */\n      mstore\n        /* \"#utility.yul\":14954:15132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15138:15315   */\n    tag_281:\n        /* \"#utility.yul\":15278:15307   */\n      0x44726f7073697465206973206e6f74204f70656e6564205965742e0000000000\n        /* \"#utility.yul\":15274:15275   */\n      0x00\n        /* \"#utility.yul\":15266:15272   */\n      dup3\n        /* \"#utility.yul\":15262:15276   */\n      add\n        /* \"#utility.yul\":15255:15308   */\n      mstore\n        /* \"#utility.yul\":15138:15315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15321:15496   */\n    tag_286:\n        /* \"#utility.yul\":15461:15488   */\n      0x4d6178204d696e74696e67204c696d6974207265616368656400000000000000\n        /* \"#utility.yul\":15457:15458   */\n      0x00\n        /* \"#utility.yul\":15449:15455   */\n      dup3\n        /* \"#utility.yul\":15445:15459   */\n      add\n        /* \"#utility.yul\":15438:15489   */\n      mstore\n        /* \"#utility.yul\":15321:15496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15502:15681   */\n    tag_291:\n        /* \"#utility.yul\":15642:15673   */\n      0x4572726f7221204e6f2042616c616e636520746f207769746864726177000000\n        /* \"#utility.yul\":15638:15639   */\n      0x00\n        /* \"#utility.yul\":15630:15636   */\n      dup3\n        /* \"#utility.yul\":15626:15640   */\n      add\n        /* \"#utility.yul\":15619:15674   */\n      mstore\n        /* \"#utility.yul\":15502:15681   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15687:15809   */\n    tag_189:\n        /* \"#utility.yul\":15760:15784   */\n      tag_364\n        /* \"#utility.yul\":15778:15783   */\n      dup2\n        /* \"#utility.yul\":15760:15784   */\n      tag_337\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":15753:15758   */\n      dup2\n        /* \"#utility.yul\":15750:15785   */\n      eq\n        /* \"#utility.yul\":15740:15803   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":15799:15800   */\n      0x00\n        /* \"#utility.yul\":15796:15797   */\n      dup1\n        /* \"#utility.yul\":15789:15801   */\n      revert\n        /* \"#utility.yul\":15740:15803   */\n    tag_365:\n        /* \"#utility.yul\":15687:15809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15815:15953   */\n    tag_193:\n        /* \"#utility.yul\":15896:15928   */\n      tag_367\n        /* \"#utility.yul\":15922:15927   */\n      dup2\n        /* \"#utility.yul\":15896:15928   */\n      tag_223\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":15889:15894   */\n      dup2\n        /* \"#utility.yul\":15886:15929   */\n      eq\n        /* \"#utility.yul\":15876:15947   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":15943:15944   */\n      0x00\n        /* \"#utility.yul\":15940:15941   */\n      dup1\n        /* \"#utility.yul\":15933:15945   */\n      revert\n        /* \"#utility.yul\":15876:15947   */\n    tag_368:\n        /* \"#utility.yul\":15815:15953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15959:16081   */\n    tag_197:\n        /* \"#utility.yul\":16032:16056   */\n      tag_370\n        /* \"#utility.yul\":16050:16055   */\n      dup2\n        /* \"#utility.yul\":16032:16056   */\n      tag_294\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":16025:16030   */\n      dup2\n        /* \"#utility.yul\":16022:16057   */\n      eq\n        /* \"#utility.yul\":16012:16075   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":16071:16072   */\n      0x00\n        /* \"#utility.yul\":16068:16069   */\n      dup1\n        /* \"#utility.yul\":16061:16073   */\n      revert\n        /* \"#utility.yul\":16012:16075   */\n    tag_371:\n        /* \"#utility.yul\":15959:16081   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d70784db56efe53cc8b89b6282b21e771f290145a644857a09c9825144f916bb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_446": {
									"entryPoint": null,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:9"
															},
															"nodeType": "YulIf",
															"src": "262:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:9",
														"type": ""
													}
												],
												"src": "7:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:9"
															},
															"nodeType": "YulIf",
															"src": "531:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:9",
														"type": ""
													}
												],
												"src": "448:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:9"
															},
															"nodeType": "YulIf",
															"src": "906:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:9",
														"type": ""
													}
												],
												"src": "809:524:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:9",
														"type": ""
													}
												],
												"src": "1339:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:9",
														"type": ""
													}
												],
												"src": "1474:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:9"
															},
															"nodeType": "YulIf",
															"src": "1693:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:9",
														"type": ""
													}
												],
												"src": "1555:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:9",
																"statements": []
															},
															"src": "1947:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:9"
															},
															"nodeType": "YulIf",
															"src": "2069:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:9",
														"type": ""
													}
												],
												"src": "1869:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:9"
															},
															"nodeType": "YulIf",
															"src": "2321:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:9"
															},
															"nodeType": "YulIf",
															"src": "2412:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:9",
														"type": ""
													}
												],
												"src": "2182:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:9"
															},
															"nodeType": "YulIf",
															"src": "2664:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:9",
														"type": ""
													}
												],
												"src": "2508:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:9",
														"type": ""
													}
												],
												"src": "3659:102:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2B SWAP3 SWAP2 SWAP1 PUSH3 0x1E8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x3 SWAP1 PUSH1 0x14 PUSH3 0x110 SWAP3 SWAP2 SWAP1 PUSH3 0x279 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C46 CODESIZE SUB DUP1 PUSH3 0x1C46 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x15F SWAP2 SWAP1 PUSH3 0x3B7 JUMP JUMPDEST DUP1 PUSH1 0xD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x177 SWAP3 SWAP2 SWAP1 PUSH3 0x1E8 JUMP JUMPDEST POP CALLER PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP PUSH3 0x58C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1F6 SWAP1 PUSH3 0x49D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x21A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x266 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x235 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x266 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x266 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x265 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x248 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x275 SWAP2 SWAP1 PUSH3 0x31A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x14 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x307 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D6 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x296 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x305 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x2D6 JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH3 0x316 SWAP2 SWAP1 PUSH3 0x31A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x335 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x31B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x350 PUSH3 0x34A DUP5 PUSH3 0x431 JUMP JUMPDEST PUSH3 0x408 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x36F JUMPI PUSH3 0x36E PUSH3 0x56C JUMP JUMPDEST JUMPDEST PUSH3 0x37C DUP5 DUP3 DUP6 PUSH3 0x467 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x39C JUMPI PUSH3 0x39B PUSH3 0x567 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3AE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x339 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3D0 JUMPI PUSH3 0x3CF PUSH3 0x576 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3F1 JUMPI PUSH3 0x3F0 PUSH3 0x571 JUMP JUMPDEST JUMPDEST PUSH3 0x3FF DUP5 DUP3 DUP6 ADD PUSH3 0x384 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x414 PUSH3 0x427 JUMP JUMPDEST SWAP1 POP PUSH3 0x422 DUP3 DUP3 PUSH3 0x4D3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x44F JUMPI PUSH3 0x44E PUSH3 0x538 JUMP JUMPDEST JUMPDEST PUSH3 0x45A DUP3 PUSH3 0x57B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x487 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x46A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x497 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4CD JUMPI PUSH3 0x4CC PUSH3 0x509 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4DE DUP3 PUSH3 0x57B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x500 JUMPI PUSH3 0x4FF PUSH3 0x538 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AA DUP1 PUSH3 0x59C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x546FD992 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xAA90C726 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xFD6C3B1B EQ PUSH2 0x306 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x546FD992 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x270 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x15460259 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x27A8A072 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x1D4 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0xBED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x386 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D3 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x425 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x472 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x562 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x670 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP4 LT DUP1 ISZERO PUSH2 0x72C JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B5 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE EQ PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x93F PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA36 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB39 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDC SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2E PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5E PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE01 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE63 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xEE4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1B DUP2 PUSH2 0x162F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF30 DUP2 PUSH2 0x1646 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF45 DUP2 PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF60 PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF6F DUP5 DUP3 DUP6 ADD PUSH2 0xF0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9C DUP5 DUP3 DUP6 ADD PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH2 0xFBB PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCA DUP6 DUP3 DUP7 ADD PUSH2 0xF0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFDB DUP6 DUP3 DUP7 ADD PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP5 DUP3 DUP6 ADD PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101E DUP4 DUP4 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1033 DUP2 PUSH2 0x1456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1044 DUP3 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x104E DUP2 DUP6 PUSH2 0x1422 JUMP JUMPDEST SWAP4 POP PUSH2 0x1059 DUP4 PUSH2 0x13EF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x108A JUMPI DUP2 MLOAD PUSH2 0x1071 DUP9 DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP8 POP PUSH2 0x107C DUP4 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x105D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP2 PUSH2 0x1468 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B1 DUP3 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x10BB DUP2 DUP6 PUSH2 0x1433 JUMP JUMPDEST SWAP4 POP PUSH2 0x10CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x149E JUMP JUMPDEST PUSH2 0x10D4 DUP2 PUSH2 0x14D6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EC PUSH1 0x12 DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F7 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F PUSH1 0x1B DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A DUP3 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1132 PUSH1 0x1B DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x113D DUP3 PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 PUSH1 0x15 DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x1160 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 PUSH1 0x1C DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP3 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B PUSH1 0x1B DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 DUP3 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BE PUSH1 0x19 DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C9 DUP3 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E1 PUSH1 0x1D DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC DUP3 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x1494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0x1494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x122A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x102A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124A DUP2 DUP5 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1267 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1286 DUP2 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12A6 DUP2 PUSH2 0x1102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12C6 DUP2 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E6 DUP2 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1306 DUP2 PUSH2 0x116B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1326 DUP2 PUSH2 0x118E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1346 DUP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1366 DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1382 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x139D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1206 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13AF DUP2 DUP5 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13CD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x13E7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1206 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144F DUP3 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1461 DUP3 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F7567682042616C616E63650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E206D696E7420312D33204E4654730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D6178204D696E74696E67204C696D6974207265616368656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1638 DUP2 PUSH2 0x1444 JUMP JUMPDEST DUP2 EQ PUSH2 0x1643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x164F DUP2 PUSH2 0x1456 JUMP JUMPDEST DUP2 EQ PUSH2 0x165A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1666 DUP2 PUSH2 0x1494 JUMP JUMPDEST DUP2 EQ PUSH2 0x1671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SMOD DUP5 0xDB JUMP 0xEF 0xE5 EXTCODECOPY 0xC8 0xB8 SWAP12 PUSH3 0x82B21E PUSH24 0x1F290145A644857A09C9825144F916BB64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "146:5943:2:-:0;;;241:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;440:66;;;;;;;;466:1;440:66;;;;;;468:1;440:66;;;;;;470:1;440:66;;;;;;472:1;440:66;;;;;;474:1;440:66;;;;;;476:1;440:66;;;;;;478:1;440:66;;;;;;480:1;440:66;;;;;;482:1;440:66;;;;;;484:1;440:66;;;;;;486:1;440:66;;;;;;488:1;440:66;;;;;;490:1;440:66;;;;;;492:1;440:66;;;;;;494:1;440:66;;;;;;496:1;440:66;;;;;;498:1;440:66;;;;;;500:1;440:66;;;;;;502:1;440:66;;;;;;504:1;440:66;;;;;;;;;;;;;:::i;:::-;;1269:4;1246:27;;;;;;;;;;;;;;;;;;;;1340:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:4;1382:5;:12;;;;;;;;;;;;:::i;:::-;;1420:10;1404:5;;:27;;;;;;;;;;;;;;;;;;1458:1;1442:15;:17;;;;1505:1;1493:11;:13;;;;1561:1;1553:7;:9;;;;1589:1;1584:4;:6;;;;1607:1;1600:6;:8;;;;1340:275;146:5943;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:9:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;146:5943:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ContractBalance_594": {
									"entryPoint": 1906,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@CryptoRandomMint_859": {
									"entryPoint": 2065,
									"id": 859,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@FiatRandomMint_818": {
									"entryPoint": 1579,
									"id": 818,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@IsPaused_404": {
									"entryPoint": 1294,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Owner_406": {
									"entryPoint": 3319,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": 3844,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkMintedCategoryWise_481": {
									"entryPoint": 2544,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@checkTotalMinted_517": {
									"entryPoint": 835,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMintFee_507": {
									"entryPoint": 2806,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@openDropsite_551": {
									"entryPoint": 1313,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@randomMinting_791": {
									"entryPoint": 2298,
									"id": 791,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@returnOwner_462": {
									"entryPoint": 3604,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setMintFee_495": {
									"entryPoint": 3357,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stopDropsite_534": {
									"entryPoint": 3053,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withDraw_580": {
									"entryPoint": 996,
									"id": 580,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16084:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "7:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:9"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:9",
														"type": ""
													}
												],
												"src": "152:155:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "397:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "384:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "440:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "413:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "413:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "343:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "351:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:9",
														"type": ""
													}
												],
												"src": "313:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "524:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "545:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "554:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:32:9"
															},
															"nodeType": "YulIf",
															"src": "534:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "663:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "678:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "682:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "707:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "742:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "738:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "738:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "762:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "717:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "717:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "707:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "494:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "505:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "517:6:9",
														"type": ""
													}
												],
												"src": "458:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "867:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "913:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "915:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "888:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "897:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "884:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "880:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:32:9"
															},
															"nodeType": "YulIf",
															"src": "877:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1006:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1021:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1025:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1050:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1093:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1104:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1089:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1089:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1113:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1060:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1050:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "837:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "848:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "860:6:9",
														"type": ""
													}
												],
												"src": "793:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1273:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1275:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1275:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1275:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1248:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1244:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1244:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1269:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:32:9"
															},
															"nodeType": "YulIf",
															"src": "1237:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1366:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1381:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1395:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1385:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1410:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1445:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1456:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1441:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1441:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1465:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1420:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1420:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1410:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1493:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1508:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1512:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1538:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1573:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1584:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1569:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1569:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1593:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1548:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1538:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1189:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1200:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1212:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1220:6:9",
														"type": ""
													}
												],
												"src": "1144:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1736:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1738:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1738:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1738:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1707:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:32:9"
															},
															"nodeType": "YulIf",
															"src": "1700:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1829:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1844:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1848:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1873:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1908:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1919:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1904:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1904:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1928:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1883:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1873:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1660:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1671:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1683:6:9",
														"type": ""
													}
												],
												"src": "1624:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2039:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2091:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2049:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2049:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2104:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2122:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2104:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2012:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2028:10:9",
														"type": ""
													}
												],
												"src": "1959:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2242:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2273:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2247:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2247:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2235:45:9"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2213:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2220:3:9",
														"type": ""
													}
												],
												"src": "2144:142:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2456:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2518:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2470:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2460:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2533:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2614:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2540:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2533:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2635:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2700:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2650:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "2639:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2715:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "2729:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2719:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2805:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2819:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2846:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2840:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2840:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "2823:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2866:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "2917:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2932:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2873:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2873:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2866:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2949:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3012:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2959:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2949:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2767:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2770:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2764:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2778:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2780:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2789:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2785:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2785:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2780:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2749:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2751:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2760:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "2755:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2745:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3038:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3045:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2425:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2432:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2441:3:9",
														"type": ""
													}
												],
												"src": "2322:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3119:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3136:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3156:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3141:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3129:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3107:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3114:3:9",
														"type": ""
													}
												],
												"src": "3060:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3267:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3277:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3324:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3291:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3281:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3339:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3405:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3410:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3346:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3452:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3459:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3448:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3466:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3471:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3426:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3487:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3525:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3503:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3494:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3487:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3248:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3255:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3263:3:9",
														"type": ""
													}
												],
												"src": "3175:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3691:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3701:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3772:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3708:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3873:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e",
																	"nodeType": "YulIdentifier",
																	"src": "3784:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3784:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3897:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3679:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3687:3:9",
														"type": ""
													}
												],
												"src": "3545:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4063:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4073:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4139:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4144:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4080:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4245:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																	"nodeType": "YulIdentifier",
																	"src": "4156:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4258:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4269:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4265:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4258:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4051:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4059:3:9",
														"type": ""
													}
												],
												"src": "3917:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4435:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4445:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4511:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4452:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4445:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4617:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																	"nodeType": "YulIdentifier",
																	"src": "4528:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4528:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4630:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4646:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4630:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4423:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4431:3:9",
														"type": ""
													}
												],
												"src": "4289:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4807:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4817:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4883:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4888:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4824:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4824:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4817:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4989:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6",
																	"nodeType": "YulIdentifier",
																	"src": "4900:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4900:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5002:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5013:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5018:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4795:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4803:3:9",
														"type": ""
													}
												],
												"src": "4661:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5179:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5189:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5255:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5196:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5189:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5361:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																	"nodeType": "YulIdentifier",
																	"src": "5272:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5374:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5385:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5381:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5167:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5175:3:9",
														"type": ""
													}
												],
												"src": "5033:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5551:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5561:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5627:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5632:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5568:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5568:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5561:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5733:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																	"nodeType": "YulIdentifier",
																	"src": "5644:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5644:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5644:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5746:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5757:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5762:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5746:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5539:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5547:3:9",
														"type": ""
													}
												],
												"src": "5405:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5923:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5933:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5999:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6004:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5940:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5933:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6105:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																	"nodeType": "YulIdentifier",
																	"src": "6016:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6016:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6118:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6129:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6134:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6125:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6125:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5911:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5919:3:9",
														"type": ""
													}
												],
												"src": "5777:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6295:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6305:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6371:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6376:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6312:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6305:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6477:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																	"nodeType": "YulIdentifier",
																	"src": "6388:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6490:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6501:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6506:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6490:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6283:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6291:3:9",
														"type": ""
													}
												],
												"src": "6149:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6576:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6593:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6616:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6598:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6598:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6586:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6564:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6571:3:9",
														"type": ""
													}
												],
												"src": "6521:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6700:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6740:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6722:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6722:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6688:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6695:3:9",
														"type": ""
													}
												],
												"src": "6635:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6873:140:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6883:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6979:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7003:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6919:59:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:87:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6919:87:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6845:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6857:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6868:4:9",
														"type": ""
													}
												],
												"src": "6759:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7167:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7177:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7189:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7200:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7185:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7177:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7224:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7235:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7220:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7243:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7249:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7239:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7213:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7213:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7269:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7371:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7380:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7277:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7269:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7139:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7151:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7162:4:9",
														"type": ""
													}
												],
												"src": "7019:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7490:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7500:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7512:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7523:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7500:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7574:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7587:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7598:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7583:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7583:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7536:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7536:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7462:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7474:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7485:4:9",
														"type": ""
													}
												],
												"src": "7398:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7785:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7795:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7807:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7818:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7803:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7803:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7795:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7842:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7853:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7838:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7838:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7861:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7867:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7857:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7831:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7831:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7831:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7887:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8021:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7895:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7765:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7780:4:9",
														"type": ""
													}
												],
												"src": "7614:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8210:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8220:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8232:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8243:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8228:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8220:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8267:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8278:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8263:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8263:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8286:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8292:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8282:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8256:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8256:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8312:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8446:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8320:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8320:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8312:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8190:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8205:4:9",
														"type": ""
													}
												],
												"src": "8039:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8635:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8645:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8657:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8668:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8653:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8645:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8692:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8703:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8688:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8688:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8711:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8717:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8681:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8681:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8737:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8871:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8745:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8745:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8737:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8615:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8630:4:9",
														"type": ""
													}
												],
												"src": "8464:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9060:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9070:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9082:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9078:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9070:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9136:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9142:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9162:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9296:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9170:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9170:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9040:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9055:4:9",
														"type": ""
													}
												],
												"src": "8889:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9485:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9495:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9507:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9518:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9503:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9495:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9542:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9553:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9538:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9538:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9561:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9567:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9557:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9531:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9531:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9531:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9587:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9721:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9595:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9595:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9587:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9465:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9480:4:9",
														"type": ""
													}
												],
												"src": "9314:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9910:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9920:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9932:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9943:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9928:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9928:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9920:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9967:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9978:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9963:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9963:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9986:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9992:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9982:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9982:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9956:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10012:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10146:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10020:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10020:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10012:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9890:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9905:4:9",
														"type": ""
													}
												],
												"src": "9739:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10335:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10345:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10357:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10368:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10353:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10353:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10345:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10392:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10403:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10388:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10388:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10411:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10381:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10381:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10437:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10571:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10445:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10445:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10437:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10315:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10330:4:9",
														"type": ""
													}
												],
												"src": "10164:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10760:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10770:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10782:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10793:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10778:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10778:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10770:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10817:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10828:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10813:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10836:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10806:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10806:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10862:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10996:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10870:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10862:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10740:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10755:4:9",
														"type": ""
													}
												],
												"src": "10589:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11112:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11122:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11134:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11145:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11130:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11130:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11122:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11202:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11215:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11226:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11211:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11158:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11084:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11096:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11107:4:9",
														"type": ""
													}
												],
												"src": "11014:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11388:277:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11398:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11410:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11421:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11406:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11398:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11491:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11487:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11434:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11434:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11434:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11526:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11537:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11546:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11552:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11542:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11542:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11515:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11515:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11515:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11572:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11644:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11653:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11580:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11580:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11572:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11352:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11364:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11372:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11383:4:9",
														"type": ""
													}
												],
												"src": "11242:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11825:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11835:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11847:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11858:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11843:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11835:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11915:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11939:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11924:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11871:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11871:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11871:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11996:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12009:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12020:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12005:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12005:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11952:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11952:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11952:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12078:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12091:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12102:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12087:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12087:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12034:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12034:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11781:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11793:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11801:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11809:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11820:4:9",
														"type": ""
													}
												],
												"src": "11671:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12159:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12169:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12185:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12179:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12152:6:9",
														"type": ""
													}
												],
												"src": "12119:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12272:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12282:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12290:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12282:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12303:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12315:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12320:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12311:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12303:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12259:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12267:4:9",
														"type": ""
													}
												],
												"src": "12200:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12412:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12423:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12439:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12433:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12433:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12395:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12405:6:9",
														"type": ""
													}
												],
												"src": "12338:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12517:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12528:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12544:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12538:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12538:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12528:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12500:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12510:6:9",
														"type": ""
													}
												],
												"src": "12458:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12638:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12648:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12660:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12665:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12656:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12656:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "12648:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12625:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "12633:4:9",
														"type": ""
													}
												],
												"src": "12563:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12793:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12810:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12815:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12803:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12803:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12831:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12850:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12855:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12846:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12846:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12831:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12765:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12770:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12781:11:9",
														"type": ""
													}
												],
												"src": "12682:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12968:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12985:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12990:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12978:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12978:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12978:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13006:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13025:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13030:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13021:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13006:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12940:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12945:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12956:11:9",
														"type": ""
													}
												],
												"src": "12872:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13092:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13102:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13131:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13113:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13113:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13102:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13074:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13084:7:9",
														"type": ""
													}
												],
												"src": "13047:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13202:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13212:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13241:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13223:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13223:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13212:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13184:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13194:7:9",
														"type": ""
													}
												],
												"src": "13149:104:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13301:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13311:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13336:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13329:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13329:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13322:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13322:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13311:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13283:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13293:7:9",
														"type": ""
													}
												],
												"src": "13259:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13400:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13410:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13425:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13432:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13421:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13421:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13410:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13382:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13392:7:9",
														"type": ""
													}
												],
												"src": "13355:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13532:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13542:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13553:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13542:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13514:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13524:7:9",
														"type": ""
													}
												],
												"src": "13487:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13619:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13629:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13638:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13633:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13698:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13723:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13728:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13719:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13719:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13742:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13747:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13738:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13738:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13732:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13732:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13712:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13712:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13712:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13659:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13662:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13656:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13670:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13672:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13681:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13684:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13677:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13677:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13672:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13652:3:9",
																"statements": []
															},
															"src": "13648:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13795:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13845:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13850:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13841:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13841:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13859:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13834:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13834:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13834:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13776:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13779:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13773:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13773:13:9"
															},
															"nodeType": "YulIf",
															"src": "13770:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13601:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13606:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13611:6:9",
														"type": ""
													}
												],
												"src": "13570:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13972:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13989:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13992:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13982:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13982:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13883:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14095:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14112:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14115:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14105:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14006:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14177:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14187:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14205:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14212:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14201:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14201:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14221:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14217:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14217:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14197:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14197:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14187:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14160:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14170:6:9",
														"type": ""
													}
												],
												"src": "14129:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14343:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14365:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14373:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14361:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14361:14:9"
																	},
																	{
																		"hexValue": "4e6f7420456e6f7567682042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14377:20:9",
																		"type": "",
																		"value": "Not Enough Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14354:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14354:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14335:6:9",
														"type": ""
													}
												],
												"src": "14237:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14517:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14539:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14547:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14535:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:14:9"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14551:29:9",
																		"type": "",
																		"value": "Dropsite is already Running"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14528:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14509:6:9",
														"type": ""
													}
												],
												"src": "14411:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14700:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14722:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14730:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14718:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14718:14:9"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14734:29:9",
																		"type": "",
																		"value": "Dropsite is already Stopped"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14711:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14711:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14711:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14692:6:9",
														"type": ""
													}
												],
												"src": "14594:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14883:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14905:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14913:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14901:14:9"
																	},
																	{
																		"hexValue": "596f752063616e206d696e7420312d33204e465473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14917:23:9",
																		"type": "",
																		"value": "You can mint 1-3 NFTs"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14894:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14894:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14894:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14875:6:9",
														"type": ""
													}
												],
												"src": "14777:171:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15060:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15082:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15090:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15078:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15078:14:9"
																	},
																	{
																		"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15094:30:9",
																		"type": "",
																		"value": "Only NFT-ES Owner can Access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15071:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15071:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15071:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15052:6:9",
														"type": ""
													}
												],
												"src": "14954:178:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15244:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15266:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15274:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15262:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15262:14:9"
																	},
																	{
																		"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15278:29:9",
																		"type": "",
																		"value": "Dropsite is not Opened Yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15255:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15255:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15255:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15236:6:9",
														"type": ""
													}
												],
												"src": "15138:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15427:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15449:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15457:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15445:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15445:14:9"
																	},
																	{
																		"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15461:27:9",
																		"type": "",
																		"value": "Max Minting Limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15438:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15438:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15438:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15419:6:9",
														"type": ""
													}
												],
												"src": "15321:175:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15608:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15630:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15638:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15626:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15626:14:9"
																	},
																	{
																		"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15642:31:9",
																		"type": "",
																		"value": "Error! No Balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15619:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15619:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15600:6:9",
														"type": ""
													}
												],
												"src": "15502:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15730:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15787:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15796:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15799:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15789:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15789:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15789:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15753:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15778:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15760:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15760:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15750:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15750:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15743:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15743:43:9"
															},
															"nodeType": "YulIf",
															"src": "15740:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15723:5:9",
														"type": ""
													}
												],
												"src": "15687:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15866:87:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15931:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15940:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15943:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15933:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15933:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15933:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15889:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15922:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "15896:25:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15896:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15886:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15886:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15879:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15879:51:9"
															},
															"nodeType": "YulIf",
															"src": "15876:71:9"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15859:5:9",
														"type": ""
													}
												],
												"src": "15815:138:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16002:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16059:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16068:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16071:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16061:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16061:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16061:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16025:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16050:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16032:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16032:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16022:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16022:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16015:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16015:43:9"
															},
															"nodeType": "YulIf",
															"src": "16012:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15995:5:9",
														"type": ""
													}
												],
												"src": "15959:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Enough Balance\")\n\n    }\n\n    function store_literal_in_memory_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dropsite is already Running\")\n\n    }\n\n    function store_literal_in_memory_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dropsite is already Stopped\")\n\n    }\n\n    function store_literal_in_memory_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can mint 1-3 NFTs\")\n\n    }\n\n    function store_literal_in_memory_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only NFT-ES Owner can Access\")\n\n    }\n\n    function store_literal_in_memory_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dropsite is not Opened Yet.\")\n\n    }\n\n    function store_literal_in_memory_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max Minting Limit reached\")\n\n    }\n\n    function store_literal_in_memory_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error! No Balance to withdraw\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x546FD992 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xAA90C726 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xFD6C3B1B EQ PUSH2 0x306 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x546FD992 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x270 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x15460259 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x27A8A072 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x1D4 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0xBED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x386 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D3 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x425 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x472 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x562 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x670 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP4 LT DUP1 ISZERO PUSH2 0x72C JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B5 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE EQ PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x93F PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA36 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB39 PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDC SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2E PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5E PUSH2 0xF04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE01 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE63 SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xEE4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1B DUP2 PUSH2 0x162F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF30 DUP2 PUSH2 0x1646 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF45 DUP2 PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF60 PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF6F DUP5 DUP3 DUP6 ADD PUSH2 0xF0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9C DUP5 DUP3 DUP6 ADD PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH2 0xFBB PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCA DUP6 DUP3 DUP7 ADD PUSH2 0xF0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFDB DUP6 DUP3 DUP7 ADD PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP5 DUP3 DUP6 ADD PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101E DUP4 DUP4 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1033 DUP2 PUSH2 0x1456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1044 DUP3 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x104E DUP2 DUP6 PUSH2 0x1422 JUMP JUMPDEST SWAP4 POP PUSH2 0x1059 DUP4 PUSH2 0x13EF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x108A JUMPI DUP2 MLOAD PUSH2 0x1071 DUP9 DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP8 POP PUSH2 0x107C DUP4 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x105D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP2 PUSH2 0x1468 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B1 DUP3 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x10BB DUP2 DUP6 PUSH2 0x1433 JUMP JUMPDEST SWAP4 POP PUSH2 0x10CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x149E JUMP JUMPDEST PUSH2 0x10D4 DUP2 PUSH2 0x14D6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EC PUSH1 0x12 DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F7 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F PUSH1 0x1B DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A DUP3 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1132 PUSH1 0x1B DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x113D DUP3 PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 PUSH1 0x15 DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x1160 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 PUSH1 0x1C DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP3 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B PUSH1 0x1B DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 DUP3 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BE PUSH1 0x19 DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C9 DUP3 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E1 PUSH1 0x1D DUP4 PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC DUP3 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x1494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0x1494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x122A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x102A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124A DUP2 DUP5 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1267 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1286 DUP2 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12A6 DUP2 PUSH2 0x1102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12C6 DUP2 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E6 DUP2 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1306 DUP2 PUSH2 0x116B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1326 DUP2 PUSH2 0x118E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1346 DUP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1366 DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1382 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x139D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1206 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13AF DUP2 DUP5 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13CD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x13E7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1206 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144F DUP3 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1461 DUP3 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F7567682042616C616E63650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E206D696E7420312D33204E4654730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D6178204D696E74696E67204C696D6974207265616368656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1638 DUP2 PUSH2 0x1444 JUMP JUMPDEST DUP2 EQ PUSH2 0x1643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x164F DUP2 PUSH2 0x1456 JUMP JUMPDEST DUP2 EQ PUSH2 0x165A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1666 DUP2 PUSH2 0x1494 JUMP JUMPDEST DUP2 EQ PUSH2 0x1671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SMOD DUP5 0xDB JUMP 0xEF 0xE5 EXTCODECOPY 0xC8 0xB8 SWAP12 PUSH3 0x82B21E PUSH24 0x1F290145A644857A09C9825144F916BB64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "146:5943:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2790:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1246:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2559:136;;;;;;;;;;;;;:::i;:::-;;5423:203;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3057:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5843:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;5261:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1882:147;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2151:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2417:135;;;;;;;;;;;;;:::i;:::-;;1279:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2035:106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1663:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2307:104;2365:4;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2388:15:::1;;2381:22;;2307:104:::0;:::o;2790:214::-;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2863:12:::1;2878:21;2863:36;;2927:5;2917:7;:15;2909:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2977:2;:11;;:20;2989:7;2977:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2853:151;2790:214:::0;:::o;1246:27::-;;;;;;;;;;;;;:::o;2559:136::-;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2628:4:::1;2618:14;;:8;;;;;;;;;;;:14;;;2610:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2683:5;2674:8;;:14;;;;;;;;;;;;;;;;;;2559:136::o:0;5423:203::-;5528:4;5533:13;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:5:::1;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5573:1:::2;5563:9;:11;:26;;;;;5588:1;5578:9;:11;5563:26;5555:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5423:203:::0;;;;;:::o;3057:108::-;3115:4;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:21:::1;3130:28;;3057:108:::0;:::o;5843:244::-;5933:4;5938:13;1183:5;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5984:4:::1;5968:15;;:20;5960:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;6046:8;;6033:9;:21;6025:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5843:244:::0;;;:::o;5261:116::-;5349:4;5354:13;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:5:::1;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5261:116:::0;;;:::o;1882:147::-;1967:4;1972;1977;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:5:::1;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2001:7:::2;;2009:4;;2014:6;;1993:28;;;;;;1882:147:::0;;;:::o;2151:111::-;2224:4;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:5:::1;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2247:8:::2;;2240:15;;2151:111:::0;:::o;2417:135::-;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2485:5:::1;2475:15;;:8;;;;;;;;;;;:15;;;2467:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2541:4;2532:8;;:13;;;;;;;;;;;;;;;;;;2417:135::o:0;1279:29::-;;;;;;;;;;;;;:::o;2035:106::-;1018:5;;;;;;;;;;;1002:21;;:12;:10;:12::i;:::-;:21;;;994:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:5:::1;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2126:8:::2;2117;:17;;;;2035:106:::0;:::o;1663:159::-;1740:13;1183:5;1171:17;;:8;;;;;;;;;;;:17;;;1162:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1771:18:::1;:24;1790:4;1771:24;;;;;;;;;;;;;;;:44;;1764:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:159:::0;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;152:155;;;;:::o;313:139::-;359:5;397:6;384:20;375:29;;413:33;440:5;413:33;:::i;:::-;313:139;;;;:::o;458:329::-;517:6;566:2;554:9;545:7;541:23;537:32;534:119;;;572:79;;:::i;:::-;534:119;692:1;717:53;762:7;753:6;742:9;738:22;717:53;:::i;:::-;707:63;;663:117;458:329;;;;:::o;793:345::-;860:6;909:2;897:9;888:7;884:23;880:32;877:119;;;915:79;;:::i;:::-;877:119;1035:1;1060:61;1113:7;1104:6;1093:9;1089:22;1060:61;:::i;:::-;1050:71;;1006:125;793:345;;;;:::o;1144:474::-;1212:6;1220;1269:2;1257:9;1248:7;1244:23;1240:32;1237:119;;;1275:79;;:::i;:::-;1237:119;1395:1;1420:53;1465:7;1456:6;1445:9;1441:22;1420:53;:::i;:::-;1410:63;;1366:117;1522:2;1548:53;1593:7;1584:6;1573:9;1569:22;1548:53;:::i;:::-;1538:63;;1493:118;1144:474;;;;;:::o;1624:329::-;1683:6;1732:2;1720:9;1711:7;1707:23;1703:32;1700:119;;;1738:79;;:::i;:::-;1700:119;1858:1;1883:53;1928:7;1919:6;1908:9;1904:22;1883:53;:::i;:::-;1873:63;;1829:117;1624:329;;;;:::o;1959:179::-;2028:10;2049:46;2091:3;2083:6;2049:46;:::i;:::-;2127:4;2122:3;2118:14;2104:28;;1959:179;;;;:::o;2144:142::-;2247:32;2273:5;2247:32;:::i;:::-;2242:3;2235:45;2144:142;;:::o;2322:732::-;2441:3;2470:54;2518:5;2470:54;:::i;:::-;2540:86;2619:6;2614:3;2540:86;:::i;:::-;2533:93;;2650:56;2700:5;2650:56;:::i;:::-;2729:7;2760:1;2745:284;2770:6;2767:1;2764:13;2745:284;;;2846:6;2840:13;2873:63;2932:3;2917:13;2873:63;:::i;:::-;2866:70;;2959:60;3012:6;2959:60;:::i;:::-;2949:70;;2805:224;2792:1;2789;2785:9;2780:14;;2745:284;;;2749:14;3045:3;3038:10;;2446:608;;;2322:732;;;;:::o;3060:109::-;3141:21;3156:5;3141:21;:::i;:::-;3136:3;3129:34;3060:109;;:::o;3175:364::-;3263:3;3291:39;3324:5;3291:39;:::i;:::-;3346:71;3410:6;3405:3;3346:71;:::i;:::-;3339:78;;3426:52;3471:6;3466:3;3459:4;3452:5;3448:16;3426:52;:::i;:::-;3503:29;3525:6;3503:29;:::i;:::-;3498:3;3494:39;3487:46;;3267:272;3175:364;;;;:::o;3545:366::-;3687:3;3708:67;3772:2;3767:3;3708:67;:::i;:::-;3701:74;;3784:93;3873:3;3784:93;:::i;:::-;3902:2;3897:3;3893:12;3886:19;;3545:366;;;:::o;3917:::-;4059:3;4080:67;4144:2;4139:3;4080:67;:::i;:::-;4073:74;;4156:93;4245:3;4156:93;:::i;:::-;4274:2;4269:3;4265:12;4258:19;;3917:366;;;:::o;4289:::-;4431:3;4452:67;4516:2;4511:3;4452:67;:::i;:::-;4445:74;;4528:93;4617:3;4528:93;:::i;:::-;4646:2;4641:3;4637:12;4630:19;;4289:366;;;:::o;4661:::-;4803:3;4824:67;4888:2;4883:3;4824:67;:::i;:::-;4817:74;;4900:93;4989:3;4900:93;:::i;:::-;5018:2;5013:3;5009:12;5002:19;;4661:366;;;:::o;5033:::-;5175:3;5196:67;5260:2;5255:3;5196:67;:::i;:::-;5189:74;;5272:93;5361:3;5272:93;:::i;:::-;5390:2;5385:3;5381:12;5374:19;;5033:366;;;:::o;5405:::-;5547:3;5568:67;5632:2;5627:3;5568:67;:::i;:::-;5561:74;;5644:93;5733:3;5644:93;:::i;:::-;5762:2;5757:3;5753:12;5746:19;;5405:366;;;:::o;5777:::-;5919:3;5940:67;6004:2;5999:3;5940:67;:::i;:::-;5933:74;;6016:93;6105:3;6016:93;:::i;:::-;6134:2;6129:3;6125:12;6118:19;;5777:366;;;:::o;6149:::-;6291:3;6312:67;6376:2;6371:3;6312:67;:::i;:::-;6305:74;;6388:93;6477:3;6388:93;:::i;:::-;6506:2;6501:3;6497:12;6490:19;;6149:366;;;:::o;6521:108::-;6598:24;6616:5;6598:24;:::i;:::-;6593:3;6586:37;6521:108;;:::o;6635:118::-;6722:24;6740:5;6722:24;:::i;:::-;6717:3;6710:37;6635:118;;:::o;6759:254::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:87;7003:1;6992:9;6988:17;6979:6;6919:87;:::i;:::-;6759:254;;;;:::o;7019:373::-;7162:4;7200:2;7189:9;7185:18;7177:26;;7249:9;7243:4;7239:20;7235:1;7224:9;7220:17;7213:47;7277:108;7380:4;7371:6;7277:108;:::i;:::-;7269:116;;7019:373;;;;:::o;7398:210::-;7485:4;7523:2;7512:9;7508:18;7500:26;;7536:65;7598:1;7587:9;7583:17;7574:6;7536:65;:::i;:::-;7398:210;;;;:::o;7614:419::-;7780:4;7818:2;7807:9;7803:18;7795:26;;7867:9;7861:4;7857:20;7853:1;7842:9;7838:17;7831:47;7895:131;8021:4;7895:131;:::i;:::-;7887:139;;7614:419;;;:::o;8039:::-;8205:4;8243:2;8232:9;8228:18;8220:26;;8292:9;8286:4;8282:20;8278:1;8267:9;8263:17;8256:47;8320:131;8446:4;8320:131;:::i;:::-;8312:139;;8039:419;;;:::o;8464:::-;8630:4;8668:2;8657:9;8653:18;8645:26;;8717:9;8711:4;8707:20;8703:1;8692:9;8688:17;8681:47;8745:131;8871:4;8745:131;:::i;:::-;8737:139;;8464:419;;;:::o;8889:::-;9055:4;9093:2;9082:9;9078:18;9070:26;;9142:9;9136:4;9132:20;9128:1;9117:9;9113:17;9106:47;9170:131;9296:4;9170:131;:::i;:::-;9162:139;;8889:419;;;:::o;9314:::-;9480:4;9518:2;9507:9;9503:18;9495:26;;9567:9;9561:4;9557:20;9553:1;9542:9;9538:17;9531:47;9595:131;9721:4;9595:131;:::i;:::-;9587:139;;9314:419;;;:::o;9739:::-;9905:4;9943:2;9932:9;9928:18;9920:26;;9992:9;9986:4;9982:20;9978:1;9967:9;9963:17;9956:47;10020:131;10146:4;10020:131;:::i;:::-;10012:139;;9739:419;;;:::o;10164:::-;10330:4;10368:2;10357:9;10353:18;10345:26;;10417:9;10411:4;10407:20;10403:1;10392:9;10388:17;10381:47;10445:131;10571:4;10445:131;:::i;:::-;10437:139;;10164:419;;;:::o;10589:::-;10755:4;10793:2;10782:9;10778:18;10770:26;;10842:9;10836:4;10832:20;10828:1;10817:9;10813:17;10806:47;10870:131;10996:4;10870:131;:::i;:::-;10862:139;;10589:419;;;:::o;11014:222::-;11107:4;11145:2;11134:9;11130:18;11122:26;;11158:71;11226:1;11215:9;11211:17;11202:6;11158:71;:::i;:::-;11014:222;;;;:::o;11242:423::-;11383:4;11421:2;11410:9;11406:18;11398:26;;11434:71;11502:1;11491:9;11487:17;11478:6;11434:71;:::i;:::-;11552:9;11546:4;11542:20;11537:2;11526:9;11522:18;11515:48;11580:78;11653:4;11644:6;11580:78;:::i;:::-;11572:86;;11242:423;;;;;:::o;11671:442::-;11820:4;11858:2;11847:9;11843:18;11835:26;;11871:71;11939:1;11928:9;11924:17;11915:6;11871:71;:::i;:::-;11952:72;12020:2;12009:9;12005:18;11996:6;11952:72;:::i;:::-;12034;12102:2;12091:9;12087:18;12078:6;12034:72;:::i;:::-;11671:442;;;;;;:::o;12200:132::-;12267:4;12290:3;12282:11;;12320:4;12315:3;12311:14;12303:22;;12200:132;;;:::o;12338:114::-;12405:6;12439:5;12433:12;12423:22;;12338:114;;;:::o;12458:99::-;12510:6;12544:5;12538:12;12528:22;;12458:99;;;:::o;12563:113::-;12633:4;12665;12660:3;12656:14;12648:22;;12563:113;;;:::o;12682:184::-;12781:11;12815:6;12810:3;12803:19;12855:4;12850:3;12846:14;12831:29;;12682:184;;;;:::o;12872:169::-;12956:11;12990:6;12985:3;12978:19;13030:4;13025:3;13021:14;13006:29;;12872:169;;;;:::o;13047:96::-;13084:7;13113:24;13131:5;13113:24;:::i;:::-;13102:35;;13047:96;;;:::o;13149:104::-;13194:7;13223:24;13241:5;13223:24;:::i;:::-;13212:35;;13149:104;;;:::o;13259:90::-;13293:7;13336:5;13329:13;13322:21;13311:32;;13259:90;;;:::o;13355:126::-;13392:7;13432:42;13425:5;13421:54;13410:65;;13355:126;;;:::o;13487:77::-;13524:7;13553:5;13542:16;;13487:77;;;:::o;13570:307::-;13638:1;13648:113;13662:6;13659:1;13656:13;13648:113;;;13747:1;13742:3;13738:11;13732:18;13728:1;13723:3;13719:11;13712:39;13684:2;13681:1;13677:10;13672:15;;13648:113;;;13779:6;13776:1;13773:13;13770:101;;;13859:1;13850:6;13845:3;13841:16;13834:27;13770:101;13619:258;13570:307;;;:::o;14006:117::-;14115:1;14112;14105:12;14129:102;14170:6;14221:2;14217:7;14212:2;14205:5;14201:14;14197:28;14187:38;;14129:102;;;:::o;14237:168::-;14377:20;14373:1;14365:6;14361:14;14354:44;14237:168;:::o;14411:177::-;14551:29;14547:1;14539:6;14535:14;14528:53;14411:177;:::o;14594:::-;14734:29;14730:1;14722:6;14718:14;14711:53;14594:177;:::o;14777:171::-;14917:23;14913:1;14905:6;14901:14;14894:47;14777:171;:::o;14954:178::-;15094:30;15090:1;15082:6;15078:14;15071:54;14954:178;:::o;15138:177::-;15278:29;15274:1;15266:6;15262:14;15255:53;15138:177;:::o;15321:175::-;15461:27;15457:1;15449:6;15445:14;15438:51;15321:175;:::o;15502:179::-;15642:31;15638:1;15630:6;15626:14;15619:55;15502:179;:::o;15687:122::-;15760:24;15778:5;15760:24;:::i;:::-;15753:5;15750:35;15740:63;;15799:1;15796;15789:12;15740:63;15687:122;:::o;15815:138::-;15896:32;15922:5;15896:32;:::i;:::-;15889:5;15886:43;15876:71;;15943:1;15940;15933:12;15876:71;15815:138;:::o;15959:122::-;16032:24;16050:5;16032:24;:::i;:::-;16025:5;16022:35;16012:63;;16071:1;16068;16061:12;16012:63;15959:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1160400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ContractBalance()": "2758",
								"CryptoRandomMint(address)": "infinite",
								"FiatRandomMint(address,uint256)": "infinite",
								"IsPaused()": "2539",
								"Owner()": "2608",
								"checkMintedCategoryWise()": "infinite",
								"checkTotalMinted()": "4716",
								"getMintFee()": "6930",
								"openDropsite()": "28860",
								"randomMinting(address)": "infinite",
								"returnOwner(address)": "infinite",
								"setMintFee(uint256)": "27012",
								"stopDropsite()": "28859",
								"withDraw(address)": "infinite"
							},
							"internal": {
								"depositAmount(address,uint256)": "infinite",
								"random()": "infinite",
								"updateConditions()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "280"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 467,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 468,
									"end": 469,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 470,
									"end": 471,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 472,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 476,
									"end": 477,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 478,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 480,
									"end": 481,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 483,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 486,
									"end": 487,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 488,
									"end": 489,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 490,
									"end": 491,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 492,
									"end": 493,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 494,
									"end": 495,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 496,
									"end": 497,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 498,
									"end": 499,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 500,
									"end": 501,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 504,
									"end": 505,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1273,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1246,
									"end": 1273,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1394,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1387,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1382,
									"end": 1394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1409,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1404,
									"end": 1409,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1404,
									"end": 1431,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1442,
									"end": 1459,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1442,
									"end": 1459,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1442,
									"end": 1459,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1505,
									"end": 1506,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1493,
									"end": 1506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1493,
									"end": 1506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1493,
									"end": 1506,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1493,
									"end": 1506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1561,
									"end": 1562,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1560,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1553,
									"end": 1562,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1562,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1589,
									"end": 1590,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1584,
									"end": 1588,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1584,
									"end": 1590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1584,
									"end": 1590,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1584,
									"end": 1590,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1584,
									"end": 1590,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1607,
									"end": 1608,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1606,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1600,
									"end": 1608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1600,
									"end": 1608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1600,
									"end": 1608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1600,
									"end": 1608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1340,
									"end": 1615,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6089,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d70784db56efe53cc8b89b6282b21e771f290145a644857a09c9825144f916bb64736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "546FD992"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "AA90C726"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "AA90C726"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "B4A99A4E"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "EDDD0D9C"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "FD6C3B1B"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "546FD992"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "60DAA851"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "7A5CAAB3"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "15460259"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "15460259"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "27A8A072"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "3D65DF70"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "390C11C"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "A67D2C7"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "1309A563"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6089,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2403,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 2403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2899,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2909,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 2988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 3004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3004,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1273,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2610,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2674,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5563,
											"end": 5572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5574,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5578,
											"end": 5589,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5563,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5555,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5423,
											"end": 5626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3165,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5968,
											"end": 5983,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5968,
											"end": 5983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5968,
											"end": 5988,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6046,
											"end": 6054,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6042,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6054,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6025,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6087,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5377,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 1981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 2029,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2247,
											"end": 2255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2467,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2532,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2532,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2552,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 994,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2141,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1188,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1162,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1795,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1822,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 359,
											"end": 364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 384,
											"end": 404,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 375,
											"end": 404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 375,
											"end": 404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 452,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 313,
											"end": 452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 313,
											"end": 452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 452,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 458,
											"end": 787,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 458,
											"end": 787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 563,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 552,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 541,
											"end": 564,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 534,
											"end": 653,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 534,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 534,
											"end": 653,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 572,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 572,
											"end": 651,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 572,
											"end": 651,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 572,
											"end": 651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 534,
											"end": 653,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 534,
											"end": 653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 692,
											"end": 693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 762,
											"end": 769,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 738,
											"end": 760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 717,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 717,
											"end": 770,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 717,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 707,
											"end": 770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 707,
											"end": 770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 458,
											"end": 787,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 458,
											"end": 787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 458,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 458,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 458,
											"end": 787,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 860,
											"end": 866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 888,
											"end": 895,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 884,
											"end": 907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 880,
											"end": 912,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 877,
											"end": 996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 877,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 877,
											"end": 996,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 877,
											"end": 996,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 877,
											"end": 996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1060,
											"end": 1121,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1060,
											"end": 1121,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1060,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 793,
											"end": 1138,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1267,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1237,
											"end": 1356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1275,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1275,
											"end": 1354,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1354,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1275,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1237,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1420,
											"end": 1473,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1473,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1420,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1410,
											"end": 1473,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1410,
											"end": 1473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1548,
											"end": 1601,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1601,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1548,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1618,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1730,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1819,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1700,
											"end": 1819,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1738,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1738,
											"end": 1817,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1817,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1738,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1819,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1700,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1858,
											"end": 1859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1908,
											"end": 1917,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1883,
											"end": 1936,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1883,
											"end": 1936,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1883,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1936,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1953,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2091,
											"end": 2094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2049,
											"end": 2095,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2049,
											"end": 2095,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2049,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2125,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 2138,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2144,
											"end": 2286,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2144,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2247,
											"end": 2279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2247,
											"end": 2279,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2247,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2286,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2518,
											"end": 2523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2470,
											"end": 2524,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2524,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2470,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2617,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2540,
											"end": 2626,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2540,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2626,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2650,
											"end": 2706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2650,
											"end": 2706,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2650,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2777,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2853,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2873,
											"end": 2936,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2873,
											"end": 2936,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2873,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2936,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2959,
											"end": 3019,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 3019,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2959,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2949,
											"end": 3019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2949,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 3029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2745,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3048,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3048,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 3054,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3060,
											"end": 3169,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3060,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3169,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3291,
											"end": 3330,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3291,
											"end": 3330,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3291,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3410,
											"end": 3416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3408,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3346,
											"end": 3417,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3346,
											"end": 3417,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3346,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3417,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3469,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3503,
											"end": 3532,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3503,
											"end": 3532,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3503,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3267,
											"end": 3539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3539,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3545,
											"end": 3911,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3545,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3708,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3784,
											"end": 3877,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3877,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3784,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 3905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 3905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3911,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3917,
											"end": 4283,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3917,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 4139,
											"end": 4142,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4080,
											"end": 4147,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4080,
											"end": 4147,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4080,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4073,
											"end": 4147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4073,
											"end": 4147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4245,
											"end": 4248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4156,
											"end": 4249,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4156,
											"end": 4249,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4156,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 4283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 4283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 4283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 4283,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4289,
											"end": 4655,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4289,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 4511,
											"end": 4514,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4452,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4452,
											"end": 4519,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4452,
											"end": 4519,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4452,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4528,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4617,
											"end": 4620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4528,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4528,
											"end": 4621,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4528,
											"end": 4621,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4528,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4637,
											"end": 4649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4655,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4661,
											"end": 5027,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 4661,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4888,
											"end": 4890,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4883,
											"end": 4886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4824,
											"end": 4891,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4824,
											"end": 4891,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4824,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4989,
											"end": 4992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4900,
											"end": 4993,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4993,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4900,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 5027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 5027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 5027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 5027,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5033,
											"end": 5399,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5033,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5255,
											"end": 5258,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5196,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5196,
											"end": 5263,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5196,
											"end": 5263,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5196,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5263,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5272,
											"end": 5365,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5365,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5272,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5385,
											"end": 5388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5381,
											"end": 5393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5399,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5405,
											"end": 5771,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5405,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 5627,
											"end": 5630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5568,
											"end": 5635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5568,
											"end": 5635,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 5568,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5733,
											"end": 5736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5644,
											"end": 5737,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5737,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5644,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5771,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5777,
											"end": 6143,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 5777,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6004,
											"end": 6006,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5940,
											"end": 6007,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5940,
											"end": 6007,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5940,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 6007,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 6007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6105,
											"end": 6108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6016,
											"end": 6109,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6109,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6016,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6136,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6129,
											"end": 6132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 6143,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 6143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 6143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 6143,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6149,
											"end": 6515,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6149,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6376,
											"end": 6378,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 6371,
											"end": 6374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6312,
											"end": 6379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6312,
											"end": 6379,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6312,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6477,
											"end": 6480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 6388,
											"end": 6481,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6388,
											"end": 6481,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6388,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6508,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6515,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6515,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6521,
											"end": 6629,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6521,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6616,
											"end": 6621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6598,
											"end": 6622,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6598,
											"end": 6622,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6598,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6629,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6635,
											"end": 6753,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6635,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6740,
											"end": 6745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 6747,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6753,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6868,
											"end": 6872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7001,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6919,
											"end": 7006,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6919,
											"end": 7006,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 6919,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6759,
											"end": 7013,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7239,
											"end": 7259,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7237,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7380,
											"end": 7384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7377,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 7277,
											"end": 7385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7385,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7277,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7392,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7500,
											"end": 7526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7500,
											"end": 7526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7536,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7598,
											"end": 7599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7587,
											"end": 7596,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7580,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7536,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7536,
											"end": 7601,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7536,
											"end": 7601,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7536,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7608,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7614,
											"end": 8033,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 7614,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7820,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7795,
											"end": 7821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7795,
											"end": 7821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7857,
											"end": 7877,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7853,
											"end": 7854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7851,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8021,
											"end": 8025,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7895,
											"end": 8026,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7895,
											"end": 8026,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7895,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 8026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 8026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7614,
											"end": 8033,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7614,
											"end": 8033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7614,
											"end": 8033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7614,
											"end": 8033,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8039,
											"end": 8458,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8039,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8245,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8292,
											"end": 8301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8302,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8276,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8446,
											"end": 8450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8320,
											"end": 8451,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8320,
											"end": 8451,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8320,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8039,
											"end": 8458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8039,
											"end": 8458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8039,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8039,
											"end": 8458,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8645,
											"end": 8671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8701,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8688,
											"end": 8705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8681,
											"end": 8728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8871,
											"end": 8875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8745,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8883,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9082,
											"end": 9091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9070,
											"end": 9096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9070,
											"end": 9096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9136,
											"end": 9140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9152,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9128,
											"end": 9129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9106,
											"end": 9153,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 9296,
											"end": 9300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9162,
											"end": 9301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9162,
											"end": 9301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9314,
											"end": 9733,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 9314,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9518,
											"end": 9520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9495,
											"end": 9521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9495,
											"end": 9521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9567,
											"end": 9576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9561,
											"end": 9565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9577,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9551,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9538,
											"end": 9555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9531,
											"end": 9578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9721,
											"end": 9725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 9595,
											"end": 9726,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9595,
											"end": 9726,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9595,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9587,
											"end": 9726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9587,
											"end": 9726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9733,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9739,
											"end": 10158,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 9739,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 9909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9920,
											"end": 9946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9920,
											"end": 9946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9986,
											"end": 9990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9967,
											"end": 9976,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9956,
											"end": 10003,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10020,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 10146,
											"end": 10150,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10020,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10020,
											"end": 10151,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10020,
											"end": 10151,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 10020,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 10158,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 10158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 10158,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10370,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10417,
											"end": 10426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10411,
											"end": 10415,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10407,
											"end": 10427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10388,
											"end": 10405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10381,
											"end": 10428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 10571,
											"end": 10575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10589,
											"end": 11008,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 10589,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10793,
											"end": 10795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10770,
											"end": 10796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10770,
											"end": 10796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10826,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10813,
											"end": 10830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10870,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 10996,
											"end": 11000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10870,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 10870,
											"end": 11001,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10870,
											"end": 11001,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 10870,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 11001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 11001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11008,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11107,
											"end": 11111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11134,
											"end": 11143,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11130,
											"end": 11148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11158,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 11226,
											"end": 11227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11215,
											"end": 11224,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11211,
											"end": 11228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11208,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11158,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11158,
											"end": 11229,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11158,
											"end": 11229,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 11158,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11236,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11383,
											"end": 11387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11410,
											"end": 11419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11434,
											"end": 11505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 11502,
											"end": 11503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11491,
											"end": 11500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11484,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11434,
											"end": 11505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11434,
											"end": 11505,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11434,
											"end": 11505,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 11434,
											"end": 11505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11542,
											"end": 11562,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11537,
											"end": 11539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11526,
											"end": 11535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11515,
											"end": 11563,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11644,
											"end": 11650,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11580,
											"end": 11658,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11580,
											"end": 11658,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11580,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11572,
											"end": 11658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11572,
											"end": 11658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11665,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11820,
											"end": 11824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11860,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11847,
											"end": 11856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11835,
											"end": 11861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11835,
											"end": 11861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12020,
											"end": 12022,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12009,
											"end": 12018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12002,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12200,
											"end": 12332,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12200,
											"end": 12332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12293,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12282,
											"end": 12293,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12282,
											"end": 12293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12324,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12315,
											"end": 12318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12303,
											"end": 12325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12303,
											"end": 12325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12332,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12338,
											"end": 12452,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12338,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12405,
											"end": 12411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12439,
											"end": 12444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12433,
											"end": 12445,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12452,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12458,
											"end": 12557,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 12458,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12557,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12563,
											"end": 12676,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 12563,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12633,
											"end": 12637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12660,
											"end": 12663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12656,
											"end": 12670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12676,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12781,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12815,
											"end": 12821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12810,
											"end": 12813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12853,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12846,
											"end": 12860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12831,
											"end": 12860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12831,
											"end": 12860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12682,
											"end": 12866,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12956,
											"end": 12967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 12996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 12988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12978,
											"end": 12997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13030,
											"end": 13034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13025,
											"end": 13028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13021,
											"end": 13035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13006,
											"end": 13035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13006,
											"end": 13035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 13041,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13047,
											"end": 13143,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 13047,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13084,
											"end": 13091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 13131,
											"end": 13136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13113,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 13113,
											"end": 13137,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13113,
											"end": 13137,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 13113,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13102,
											"end": 13137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13102,
											"end": 13137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13047,
											"end": 13143,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13047,
											"end": 13143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13047,
											"end": 13143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13047,
											"end": 13143,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13149,
											"end": 13253,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 13149,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13194,
											"end": 13201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13223,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 13241,
											"end": 13246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13223,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 13223,
											"end": 13247,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13223,
											"end": 13247,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 13223,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13212,
											"end": 13247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13212,
											"end": 13247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13149,
											"end": 13253,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13149,
											"end": 13253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13149,
											"end": 13253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13149,
											"end": 13253,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13259,
											"end": 13349,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 13259,
											"end": 13349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13293,
											"end": 13300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13336,
											"end": 13341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13342,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13322,
											"end": 13343,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13311,
											"end": 13343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13311,
											"end": 13343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13349,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13349,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13355,
											"end": 13481,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 13355,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13392,
											"end": 13399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13432,
											"end": 13474,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13425,
											"end": 13430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13421,
											"end": 13475,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13410,
											"end": 13475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13410,
											"end": 13475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13481,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13487,
											"end": 13564,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 13487,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13524,
											"end": 13531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13542,
											"end": 13558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13542,
											"end": 13558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13564,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13564,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13570,
											"end": 13877,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 13570,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13662,
											"end": 13668,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13659,
											"end": 13660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13656,
											"end": 13669,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13747,
											"end": 13748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13742,
											"end": 13745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13732,
											"end": 13750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13728,
											"end": 13729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13719,
											"end": 13730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13751,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13681,
											"end": 13682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 13648,
											"end": 13761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13779,
											"end": 13785,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13776,
											"end": 13777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13773,
											"end": 13786,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13770,
											"end": 13871,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13770,
											"end": 13871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 13770,
											"end": 13871,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13859,
											"end": 13860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13850,
											"end": 13856,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13845,
											"end": 13848,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 13857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13834,
											"end": 13861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13770,
											"end": 13871,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 13770,
											"end": 13871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13619,
											"end": 13877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13877,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14006,
											"end": 14123,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 14006,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14117,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14231,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 14129,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14221,
											"end": 14223,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14217,
											"end": 14224,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14212,
											"end": 14214,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14205,
											"end": 14210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14197,
											"end": 14225,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14187,
											"end": 14225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14187,
											"end": 14225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14231,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14231,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14237,
											"end": 14405,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 14237,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14377,
											"end": 14397,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F7420456E6F7567682042616C616E63650000000000000000000000000000"
										},
										{
											"begin": 14373,
											"end": 14374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14365,
											"end": 14371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14361,
											"end": 14375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14237,
											"end": 14405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14237,
											"end": 14405,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14411,
											"end": 14588,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 14411,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14580,
											"name": "PUSH",
											"source": 9,
											"value": "44726F707369746520697320616C72656164792052756E6E696E670000000000"
										},
										{
											"begin": 14547,
											"end": 14548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14411,
											"end": 14588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14411,
											"end": 14588,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14594,
											"end": 14771,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14594,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14734,
											"end": 14763,
											"name": "PUSH",
											"source": 9,
											"value": "44726F707369746520697320616C72656164792053746F707065640000000000"
										},
										{
											"begin": 14730,
											"end": 14731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14722,
											"end": 14728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 14732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14764,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14594,
											"end": 14771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14594,
											"end": 14771,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14777,
											"end": 14948,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 14777,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 14940,
											"name": "PUSH",
											"source": 9,
											"value": "596F752063616E206D696E7420312D33204E4654730000000000000000000000"
										},
										{
											"begin": 14913,
											"end": 14914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14901,
											"end": 14915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 14941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14777,
											"end": 14948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14777,
											"end": 14948,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14954,
											"end": 15132,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 14954,
											"end": 15132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15094,
											"end": 15124,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000"
										},
										{
											"begin": 15090,
											"end": 15091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15082,
											"end": 15088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15078,
											"end": 15092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15071,
											"end": 15125,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 15132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 15132,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15138,
											"end": 15315,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 15138,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15307,
											"name": "PUSH",
											"source": 9,
											"value": "44726F7073697465206973206E6F74204F70656E6564205965742E0000000000"
										},
										{
											"begin": 15274,
											"end": 15275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15266,
											"end": 15272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15262,
											"end": 15276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15255,
											"end": 15308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15138,
											"end": 15315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15138,
											"end": 15315,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15321,
											"end": 15496,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 15321,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15488,
											"name": "PUSH",
											"source": 9,
											"value": "4D6178204D696E74696E67204C696D6974207265616368656400000000000000"
										},
										{
											"begin": 15457,
											"end": 15458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15449,
											"end": 15455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15445,
											"end": 15459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15438,
											"end": 15489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15496,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15502,
											"end": 15681,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 15502,
											"end": 15681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15642,
											"end": 15673,
											"name": "PUSH",
											"source": 9,
											"value": "4572726F7221204E6F2042616C616E636520746F207769746864726177000000"
										},
										{
											"begin": 15638,
											"end": 15639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15630,
											"end": 15636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15626,
											"end": 15640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15619,
											"end": 15674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15502,
											"end": 15681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15502,
											"end": 15681,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15687,
											"end": 15809,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 15687,
											"end": 15809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15760,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15778,
											"end": 15783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15760,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 15760,
											"end": 15784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15760,
											"end": 15784,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15760,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15753,
											"end": 15758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15750,
											"end": 15785,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15740,
											"end": 15803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 15740,
											"end": 15803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15799,
											"end": 15800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15796,
											"end": 15797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15789,
											"end": 15801,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15740,
											"end": 15803,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 15740,
											"end": 15803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15687,
											"end": 15809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15687,
											"end": 15809,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15815,
											"end": 15953,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 15815,
											"end": 15953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15896,
											"end": 15928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 15922,
											"end": 15927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15896,
											"end": 15928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 15896,
											"end": 15928,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15896,
											"end": 15928,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 15896,
											"end": 15928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15889,
											"end": 15894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15886,
											"end": 15929,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 15876,
											"end": 15947,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15943,
											"end": 15944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 15941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15933,
											"end": 15945,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15947,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 15876,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15953,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15959,
											"end": 16081,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 15959,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16032,
											"end": 16056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16050,
											"end": 16055,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16032,
											"end": 16056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 16032,
											"end": 16056,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16032,
											"end": 16056,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16032,
											"end": 16056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16025,
											"end": 16030,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16022,
											"end": 16057,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16012,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 16012,
											"end": 16075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16071,
											"end": 16072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16068,
											"end": 16069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16061,
											"end": 16073,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16012,
											"end": 16075,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 16012,
											"end": 16075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 16081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 16081,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ContractBalance()": "3b668059",
							"CryptoRandomMint(address)": "3d65df70",
							"FiatRandomMint(address,uint256)": "27a8a072",
							"IsPaused()": "1309a563",
							"Owner()": "b4a99a4e",
							"checkMintedCategoryWise()": "60daa851",
							"checkTotalMinted()": "0390c11c",
							"getMintFee()": "7a5caab3",
							"openDropsite()": "15460259",
							"randomMinting(address)": "546fd992",
							"returnOwner(address)": "fd6c3b1b",
							"setMintFee(uint256)": "eddd0d9c",
							"stopDropsite()": "aa90c726",
							"withDraw(address)": "0a67d2c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"CryptoRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"noOfMints\",\"type\":\"uint256\"}],\"name\":\"FiatRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMintedCategoryWise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkTotalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"randomMinting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"returnOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintFee\",\"type\":\"uint256\"}],\"name\":\"setMintFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dropsite.sol\":\"Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"Dropsite.sol\":{\"keccak256\":\"0xf3a9b96844ac1052d5ff7eccab07a56e2c173032aad636df102b6acd9a276d2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4205e44922ed1461769dc3b9c56a67fe9d9f2c470a7ff003f2fe4a3a57748a0\",\"dweb:/ipfs/QmbiLy1d96JHWGH1Z1USA6aA1i6sPyHs9oB9mPesmGtDM4\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x5dfb07a5226b29aa22b048f5c22ba440e8a2d96bf9222fdcba0a5790fd983149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b8817b7265760276c67a1b98420b973f8d871106f5dff958e0604c28a6c96\",\"dweb:/ipfs/QmQgPUje4qFjR1ZbJT6YnYAy6yKms8xi2FP4kBFLuz86Zp\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]},\"Strings.sol\":{\"keccak256\":\"0x9b07ef0960de9137c24d6b8f1c6dab797b2c3a1503d8120900fe1cd662c5d46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52e859a9d10dfeda997d2d2d64e4ff824053adf96e016062c1c4249975180ba\",\"dweb:/ipfs/QmSzMC9dpXpD83GXyVU84zYqSDu88RteVEKuqa3N8wTLKW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155_Dropsite.sol": {
				"ERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155_Dropsite.sol\":490:2542  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155_Dropsite.sol\":490:2542  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079a216363fdf5161bd3e64595aaff309ea3b30aae60f27da71b6eabaa6ae611664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122079a216363fdf5161bd3e64595aaff309ea3b30aae60f27da71b6eabaa6ae611664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xA216363FDF5161BD3E64595AAFF309EA3B30AAE60F27DA71B6EA 0xBA 0xA6 0xAE PUSH2 0x1664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "490:2052:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122079a216363fdf5161bd3e64595aaff309ea3b30aae60f27da71b6eabaa6ae611664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xA216363FDF5161BD3E64595AAFF309EA3B30AAE60F27DA71B6EA 0xBA 0xA6 0xAE PUSH2 0x1664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "490:2052:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,string memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,string memory)": "infinite",
								"_mint(address,uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079a216363fdf5161bd3e64595aaff309ea3b30aae60f27da71b6eabaa6ae611664736f6c63430008070033",
									".code": [
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155_Dropsite.sol\":\"ERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x5dfb07a5226b29aa22b048f5c22ba440e8a2d96bf9222fdcba0a5790fd983149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b8817b7265760276c67a1b98420b973f8d871106f5dff958e0604c28a6c96\",\"dweb:/ipfs/QmQgPUje4qFjR1ZbJT6YnYAy6yKms8xi2FP4kBFLuz86Zp\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165_Dropsite.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165_Dropsite.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver_Dropsite.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "data",
									"type": "string"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,string)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,string)": "ae89a248"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,string)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver_Dropsite.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155_Dropsite.sol": {
				"IERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155_Dropsite.sol\":\"IERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165_Dropsite.sol": {
				"IERC165_Dropsite": {
					"abi": [],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165_Dropsite.sol\":\"IERC165_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.;",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Strings.sol\":147:2032  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Strings.sol\":147:2032  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202720325b9a392fc5ee8a412c6d59bc6edf0194387f10acd52aa0ee6e195eac2064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202720325b9a392fc5ee8a412c6d59bc6edf0194387f10acd52aa0ee6e195eac2064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 KECCAK256 ORIGIN JUMPDEST SWAP11 CODECOPY 0x2F 0xC5 0xEE DUP11 COINBASE 0x2C PUSH14 0x59BC6EDF0194387F10ACD52AA0EE PUSH15 0x195EAC2064736F6C63430008070033 ",
							"sourceMap": "147:1885:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202720325b9a392fc5ee8a412c6d59bc6edf0194387f10acd52aa0ee6e195eac2064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 KECCAK256 ORIGIN JUMPDEST SWAP11 CODECOPY 0x2F 0xC5 0xEE DUP11 COINBASE 0x2C PUSH14 0x59BC6EDF0194387F10ACD52AA0EE PUSH15 0x195EAC2064736F6C63430008070033 ",
							"sourceMap": "147:1885:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202720325b9a392fc5ee8a412c6d59bc6edf0194387f10acd52aa0ee6e195eac2064736f6c63430008070033",
									".code": [
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.;\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Strings.sol\":{\"keccak256\":\"0x9b07ef0960de9137c24d6b8f1c6dab797b2c3a1503d8120900fe1cd662c5d46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52e859a9d10dfeda997d2d2d64e4ff824053adf96e016062c1c4249975180ba\",\"dweb:/ipfs/QmSzMC9dpXpD83GXyVU84zYqSDu88RteVEKuqa3N8wTLKW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> Dropsite.sol:164:110:\n    |\n164 |     function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n    |                                                                                                              ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5532,
					"file": "Dropsite.sol",
					"start": 5528
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> Dropsite.sol:164:115:\n    |\n164 |     function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n    |                                                                                                                   ^^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5546,
					"file": "Dropsite.sol",
					"start": 5533
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> Dropsite.sol:175:95:\n    |\n175 |     function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n    |                                                                                               ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5937,
					"file": "Dropsite.sol",
					"start": 5933
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> Dropsite.sol:175:100:\n    |\n175 |     function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n    |                                                                                                    ^^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5951,
					"file": "Dropsite.sol",
					"start": 5938
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Dropsite.sol:164:29:\n    |\n164 |     function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n    |                             ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5464,
					"file": "Dropsite.sol",
					"start": 5447
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Dropsite.sol:175:31:\n    |\n175 |     function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n    |                               ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5886,
					"file": "Dropsite.sol",
					"start": 5869
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n   --> Dropsite.sol:164:5:\n    |\n164 |     function FiatRandomMint(address user_addr, uint noOfMints) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 5626,
					"file": "Dropsite.sol",
					"start": 5423
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"Dropsite": [
							860
						],
						"ERC1155_Dropsite": [
							1071
						],
						"ERC165": [
							1094
						],
						"IERC1155Receiver": [
							1135
						],
						"IERC1155_Dropsite": [
							1155
						],
						"IERC165_Dropsite": [
							1159
						],
						"Strings": [
							1362
						]
					},
					"id": 861,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "54:33:2"
						},
						{
							"absolutePath": "ERC1155_Dropsite.sol",
							"file": "./ERC1155_Dropsite.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1072,
							"src": "88:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Strings.sol",
							"file": "./Strings.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1363,
							"src": "122:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "ERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1071,
										"src": "167:16:2"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "167:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 860,
							"linearizedBaseContracts": [
								860,
								1071,
								1155,
								1159,
								318
							],
							"name": "Dropsite",
							"nameLocation": "155:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 328,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "249:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "241:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 326,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "241:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "255:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "nums",
									"nameLocation": "458:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "440:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint8_$20_storage",
										"typeString": "uint8[20]"
									},
									"typeName": {
										"baseType": {
											"id": 329,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "440:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"id": 331,
										"length": {
											"hexValue": "3230",
											"id": 330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "446:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20_by_1",
												"typeString": "int_const 20"
											},
											"value": "20"
										},
										"nodeType": "ArrayTypeName",
										"src": "440:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_storage_ptr",
											"typeString": "uint8[20]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 332,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "466:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 333,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "468:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "470:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "32",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "472:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "474:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 337,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "476:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 338,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "478:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "480:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 340,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "482:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "484:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "486:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "488:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 344,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "490:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 345,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "492:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 346,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "494:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 347,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "496:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "498:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "500:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 350,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "502:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 351,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											}
										],
										"id": 352,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "465:41:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
											"typeString": "uint8[20] memory"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "TotalNFTsMinted",
									"nameLocation": "523:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "518:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "518:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "numOfCopies",
									"nameLocation": "566:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "561:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "561:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "mintFees",
									"nameLocation": "625:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "620:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "620:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 361,
									"mutability": "mutable",
									"name": "Diamond",
									"nameLocation": "667:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "662:12:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "662:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "Gold",
									"nameLocation": "697:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "692:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "692:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "712:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "707:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 364,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "707:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Dropsite.nft_Owner",
									"id": 369,
									"members": [
										{
											"constant": false,
											"id": 368,
											"mutability": "mutable",
											"name": "owned_Dropsite_NFTs",
											"nameLocation": "817:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 369,
											"src": "810:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ArrayTypeName",
												"src": "810:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "nft_Owner",
									"nameLocation": "791:9:2",
									"nodeType": "StructDefinition",
									"scope": 860,
									"src": "784:59:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 374,
									"mutability": "mutable",
									"name": "dropsite_NFT_Owner",
									"nameLocation": "878:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "848:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
										"typeString": "mapping(address => struct Dropsite.nft_Owner)"
									},
									"typeName": {
										"id": 373,
										"keyType": {
											"id": 370,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "857:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "848:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
											"typeString": "mapping(address => struct Dropsite.nft_Owner)"
										},
										"valueType": {
											"id": 372,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 371,
												"name": "nft_Owner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "866:9:2"
											},
											"referencedDeclaration": 369,
											"src": "866:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_nft_Owner_$369_storage_ptr",
												"typeString": "struct Dropsite.nft_Owner"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "953:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "927:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "936:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "927:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 376,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "947:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "984:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 381,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1002:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1002:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 383,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1002:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1025:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															},
															"value": "Only NFT-ES Owner can Access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "994:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "994:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "994:62:2"
											},
											{
												"id": 388,
												"nodeType": "PlaceholderStatement",
												"src": "1066:1:2"
											}
										]
									},
									"id": 390,
									"name": "OnlyOwner",
									"nameLocation": "974:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:0:2"
									},
									"src": "965:109:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1152:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1171:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1183:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1171:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1190:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															},
															"value": "Dropsite is not Opened Yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1162:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1162:59:2"
											},
											{
												"id": 399,
												"nodeType": "PlaceholderStatement",
												"src": "1231:1:2"
											}
										]
									},
									"id": 401,
									"name": "contractIsNotPaused",
									"nameLocation": "1131:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:2:2"
									},
									"src": "1122:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1309a563",
									"id": 404,
									"mutability": "mutable",
									"name": "IsPaused",
									"nameLocation": "1258:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1246:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 402,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1246:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1269:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 406,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "1303:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1279:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 405,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1279:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1329:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1314:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 407,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1314:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1372:243:2",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1382:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1390:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1382:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1382:12:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1404:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 420,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1420:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1420:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1412:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1412:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1412:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1404:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1404:27:2"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1442:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1458:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1442:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1442:17:2"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "numOfCopies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1493:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1505:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1493:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1493:13:2"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "Diamond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1553:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1561:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1553:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1553:9:2"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "Gold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1584:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1589:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1584:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "1584:6:2"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "Silver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1600:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1607:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1600:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "1600:8:2"
											}
										]
									},
									"id": 446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1367:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1353:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1353:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:20:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:0:2"
									},
									"scope": 860,
									"src": "1340:275:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1754:68:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 456,
															"name": "dropsite_NFT_Owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1771:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$369_storage_$",
																"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
															}
														},
														"id": 458,
														"indexExpression": {
															"id": 457,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "1790:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1771:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_nft_Owner_$369_storage",
															"typeString": "struct Dropsite.nft_Owner storage ref"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owned_Dropsite_NFTs",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 368,
													"src": "1771:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 455,
												"id": 460,
												"nodeType": "Return",
												"src": "1764:51:2"
											}
										]
									},
									"functionSelector": "fd6c3b1b",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 450,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "1710:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1710:19:2"
										}
									],
									"name": "returnOwner",
									"nameLocation": "1672:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1692:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1684:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:14:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1740:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 452,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1740:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ArrayTypeName",
													"src": "1740:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:15:2"
									},
									"scope": 860,
									"src": "1663:159:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "1982:47:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 475,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "2001:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 476,
															"name": "Gold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2009:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 477,
															"name": "Silver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "2014:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 478,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2000:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 474,
												"id": 479,
												"nodeType": "Return",
												"src": "1993:28:2"
											}
										]
									},
									"functionSelector": "60daa851",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 465,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 464,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "1929:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1929:9:2"
										},
										{
											"id": 467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 466,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "1939:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1939:19:2"
										}
									],
									"name": "checkMintedCategoryWise",
									"nameLocation": "1891:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:2:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1967:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1967:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1972:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1972:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1977:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1977:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1966:16:2"
									},
									"scope": 860,
									"src": "1882:147:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "2107:34:2",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "mintFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2117:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "2126:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2117:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2117:17:2"
											}
										]
									},
									"functionSelector": "eddd0d9c",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 485,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2077:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2077:9:2"
										},
										{
											"id": 488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 487,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "2087:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2087:19:2"
										}
									],
									"name": "setMintFee",
									"nameLocation": "2044:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "_mintFee",
												"nameLocation": "2060:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "2055:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2055:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:15:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:0:2"
									},
									"scope": 860,
									"src": "2035:106:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2230:32:2",
										"statements": [
											{
												"expression": {
													"id": 504,
													"name": "mintFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "2247:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 503,
												"id": 505,
												"nodeType": "Return",
												"src": "2240:15:2"
											}
										]
									},
									"functionSelector": "7a5caab3",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 498,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 497,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2185:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2185:9:2"
										},
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "2195:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2195:19:2"
										}
									],
									"name": "getMintFee",
									"nameLocation": "2160:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2170:2:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2224:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2224:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2223:6:2"
									},
									"scope": 860,
									"src": "2151:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2370:41:2",
										"statements": [
											{
												"expression": {
													"id": 514,
													"name": "TotalNFTsMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 355,
													"src": "2388:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 513,
												"id": 515,
												"nodeType": "Return",
												"src": "2381:22:2"
											}
										]
									},
									"functionSelector": "0390c11c",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 509,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2347:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2347:9:2"
										}
									],
									"name": "checkTotalMinted",
									"nameLocation": "2316:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2332:2:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:6:2"
									},
									"scope": 860,
									"src": "2307:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2457:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2475:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2485:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2475:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2492:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															},
															"value": "Dropsite is already Stopped"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2467:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2467:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2467:55:2"
											},
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2532:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2541:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2532:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "2532:13:2"
											}
										]
									},
									"functionSelector": "aa90c726",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 520,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 519,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2448:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2448:9:2"
										}
									],
									"name": "stopDropsite",
									"nameLocation": "2426:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:2"
									},
									"scope": 860,
									"src": "2417:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "2600:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 540,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2618:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2628:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2618:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2634:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															},
															"value": "Dropsite is already Running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2610:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "2610:54:2"
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 546,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2674:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2683:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2674:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "2674:14:2"
											}
										]
									},
									"functionSelector": "15460259",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 536,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2590:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2590:9:2"
										}
									],
									"name": "openDropsite",
									"nameLocation": "2568:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2580:2:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:2"
									},
									"scope": 860,
									"src": "2559:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "2853:151:2",
										"statements": [
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "Balance",
														"nameLocation": "2868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "2863:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 558,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2863:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 562,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2886:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$860",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$860",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2878:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 560,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2878:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2878:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2863:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "Balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "2917:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2927:5:2",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2917:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2934:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															},
															"value": "Error! No Balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2909:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2909:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "2909:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2989:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "2977:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2977:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2977:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "2977:20:2"
											}
										]
									},
									"functionSelector": "0a67d2c7",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 556,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 555,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2843:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2843:9:2"
										}
									],
									"name": "withDraw",
									"nameLocation": "2799:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2808:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2808:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:20:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:0:2"
									},
									"scope": 860,
									"src": "2790:214:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3120:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 589,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3145:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$860",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$860",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3137:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3137:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3137:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 592,
												"nodeType": "Return",
												"src": "3130:28:2"
											}
										]
									},
									"functionSelector": "3b668059",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 583,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 582,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "3096:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:9:2"
										}
									],
									"name": "ContractBalance",
									"nameLocation": "3066:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3081:2:2"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3115:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3115:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:6:2"
									},
									"scope": 860,
									"src": "3057:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "3323:149:2",
										"statements": [
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "randomnumber",
														"nameLocation": "3358:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "3353:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3353:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 606,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3405:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3405:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 608,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3422:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3422:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 604,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3388:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3388:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3388:45:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 603,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3378:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3378:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3373:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 601,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3373:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3373:62:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3230",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3438:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "3373:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:87:2"
											},
											{
												"expression": {
													"id": 616,
													"name": "randomnumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 600,
													"src": "3453:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 617,
												"nodeType": "Return",
												"src": "3446:19:2"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "3285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3291:2:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "3317:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:6:2"
									},
									"scope": 860,
									"src": "3276:196:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "3728:1531:2",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3742:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "3737:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3737:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3750:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3750:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3737:21:2"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "3773:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "3768:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 631,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"baseExpression": {
														"id": 633,
														"name": "nums",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3781:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$20_storage",
															"typeString": "uint8[20] storage ref"
														}
													},
													"id": 635,
													"indexExpression": {
														"id": 634,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "3786:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3781:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3768:24:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 637,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "3889:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3898:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3889:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3530",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3913:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "3903:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3889:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "4178:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4187:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4178:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 667,
																"name": "Gold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "4192:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "313030",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4199:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4192:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4178:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 691,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "4448:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4457:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4448:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "Silver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "4462:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "383530",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4472:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_850_by_1",
																		"typeString": "int_const 850"
																	},
																	"value": "850"
																},
																"src": "4462:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4448:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 772,
															"nodeType": "Block",
															"src": "4649:605:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 720,
																			"name": "Gold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "4829:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4836:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "4829:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 770,
																		"nodeType": "Block",
																		"src": "5042:203:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 747,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 632,
																						"src": "5060:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 748,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5068:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "5060:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 750,
																				"nodeType": "ExpressionStatement",
																				"src": "5060:9:2"
																			},
																			{
																				"expression": {
																					"id": 752,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "5087:9:2",
																					"subExpression": {
																						"id": 751,
																						"name": "Diamond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 361,
																						"src": "5087:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 753,
																				"nodeType": "ExpressionStatement",
																				"src": "5087:9:2"
																			},
																			{
																				"expression": {
																					"id": 766,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 754,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "5114:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "4469616d6f6e645f",
																										"id": 759,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5145:10:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																											"typeString": "literal_string \"Diamond_\""
																										},
																										"value": "Diamond_"
																									},
																									{
																										"arguments": [
																											{
																												"id": 762,
																												"name": "Diamond",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 361,
																												"src": "5173:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 760,
																												"name": "Strings",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1362,
																												"src": "5156:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_Strings_$1362_$",
																													"typeString": "type(library Strings)"
																												}
																											},
																											"id": 761,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "toString",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1244,
																											"src": "5156:16:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																												"typeString": "function (uint256) pure returns (string memory)"
																											}
																										},
																										"id": 763,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5156:25:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																											"typeString": "literal_string \"Diamond_\""
																										},
																										{
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									],
																									"expression": {
																										"id": 757,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "5128:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 758,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "5128:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 764,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5128:54:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 756,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5121:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 755,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "5121:6:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 765,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5121:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "5114:69:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				},
																				"id": 767,
																				"nodeType": "ExpressionStatement",
																				"src": "5114:69:2"
																			},
																			{
																				"expression": {
																					"id": 768,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "5225:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 625,
																				"id": 769,
																				"nodeType": "Return",
																				"src": "5218:12:2"
																			}
																		]
																	},
																	"id": 771,
																	"nodeType": "IfStatement",
																	"src": "4826:419:2",
																	"trueBody": {
																		"id": 746,
																		"nodeType": "Block",
																		"src": "4841:195:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 723,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 632,
																						"src": "4859:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 724,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4867:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4859:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 726,
																				"nodeType": "ExpressionStatement",
																				"src": "4859:9:2"
																			},
																			{
																				"expression": {
																					"id": 728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4886:6:2",
																					"subExpression": {
																						"id": 727,
																						"name": "Gold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 363,
																						"src": "4886:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 729,
																				"nodeType": "ExpressionStatement",
																				"src": "4886:6:2"
																			},
																			{
																				"expression": {
																					"id": 742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 730,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "4910:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "476f6c645f",
																										"id": 735,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4941:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																											"typeString": "literal_string \"Gold_\""
																										},
																										"value": "Gold_"
																									},
																									{
																										"arguments": [
																											{
																												"id": 738,
																												"name": "Gold",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 363,
																												"src": "4966:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 736,
																												"name": "Strings",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1362,
																												"src": "4949:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_Strings_$1362_$",
																													"typeString": "type(library Strings)"
																												}
																											},
																											"id": 737,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "toString",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1244,
																											"src": "4949:16:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																												"typeString": "function (uint256) pure returns (string memory)"
																											}
																										},
																										"id": 739,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4949:22:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																											"typeString": "literal_string \"Gold_\""
																										},
																										{
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									],
																									"expression": {
																										"id": 733,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "4924:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 734,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "4924:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 740,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4924:48:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 732,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4917:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 731,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "4917:6:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 741,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4917:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "4910:63:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				},
																				"id": 743,
																				"nodeType": "ExpressionStatement",
																				"src": "4910:63:2"
																			},
																			{
																				"expression": {
																					"id": 744,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "5016:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 625,
																				"id": 745,
																				"nodeType": "Return",
																				"src": "5009:12:2"
																			}
																		]
																	}
																}
															]
														},
														"id": 773,
														"nodeType": "IfStatement",
														"src": "4445:809:2",
														"trueBody": {
															"id": 719,
															"nodeType": "Block",
															"src": "4477:158:2",
															"statements": [
																{
																	"expression": {
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4491:8:2",
																		"subExpression": {
																			"id": 698,
																			"name": "Silver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "4491:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 700,
																	"nodeType": "ExpressionStatement",
																	"src": "4491:8:2"
																},
																{
																	"expression": {
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 701,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "4513:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 702,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "4518:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "53696c7665725f",
																								"id": 707,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4549:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																									"typeString": "literal_string \"Silver_\""
																								},
																								"value": "Silver_"
																							},
																							{
																								"arguments": [
																									{
																										"id": 710,
																										"name": "Silver",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 365,
																										"src": "4576:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 708,
																										"name": "Strings",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1362,
																										"src": "4559:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_Strings_$1362_$",
																											"typeString": "type(library Strings)"
																										}
																									},
																									"id": 709,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "toString",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1244,
																									"src": "4559:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																										"typeString": "function (uint256) pure returns (string memory)"
																									}
																								},
																								"id": 711,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4559:24:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																									"typeString": "literal_string \"Silver_\""
																								},
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							],
																							"expression": {
																								"id": 705,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "4532:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 706,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "4532:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 712,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4532:52:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4525:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 703,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "4525:6:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4525:60:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"src": "4518:67:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"src": "4513:72:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"id": 716,
																	"nodeType": "ExpressionStatement",
																	"src": "4513:72:2"
																},
																{
																	"expression": {
																		"id": 717,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "4619:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 625,
																	"id": 718,
																	"nodeType": "Return",
																	"src": "4612:12:2"
																}
															]
														}
													},
													"id": 774,
													"nodeType": "IfStatement",
													"src": "4175:1079:2",
													"trueBody": {
														"id": 690,
														"nodeType": "Block",
														"src": "4204:235:2",
														"statements": [
															{
																"expression": {
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4218:6:2",
																	"subExpression": {
																		"id": 671,
																		"name": "Gold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "4218:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 673,
																"nodeType": "ExpressionStatement",
																"src": "4218:6:2"
															},
															{
																"expression": {
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 674,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "4238:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "476f6c645f",
																						"id": 679,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4269:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																							"typeString": "literal_string \"Gold_\""
																						},
																						"value": "Gold_"
																					},
																					{
																						"arguments": [
																							{
																								"id": 682,
																								"name": "Gold",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 363,
																								"src": "4294:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 680,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1362,
																								"src": "4277:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1362_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 681,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1244,
																							"src": "4277:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) pure returns (string memory)"
																							}
																						},
																						"id": 683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4277:22:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																							"typeString": "literal_string \"Gold_\""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 677,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4252:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 678,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4252:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4252:48:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4245:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 675,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4245:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4245:56:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"src": "4238:63:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 687,
																"nodeType": "ExpressionStatement",
																"src": "4238:63:2"
															},
															{
																"expression": {
																	"id": 688,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "4322:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 625,
																"id": 689,
																"nodeType": "Return",
																"src": "4315:12:2"
															}
														]
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "3886:1368:2",
												"trueBody": {
													"id": 663,
													"nodeType": "Block",
													"src": "3917:252:2",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3932:9:2",
																"subExpression": {
																	"id": 644,
																	"name": "Diamond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "3932:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "3932:9:2"
														},
														{
															"expression": {
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 647,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "3955:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "4469616d6f6e645f",
																					"id": 652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3986:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																						"typeString": "literal_string \"Diamond_\""
																					},
																					"value": "Diamond_"
																				},
																				{
																					"arguments": [
																						{
																							"id": 655,
																							"name": "Diamond",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 361,
																							"src": "4014:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 653,
																							"name": "Strings",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1362,
																							"src": "3997:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Strings_$1362_$",
																								"typeString": "type(library Strings)"
																							}
																						},
																						"id": 654,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1244,
																						"src": "3997:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3997:25:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																						"typeString": "literal_string \"Diamond_\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 650,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3969:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3969:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3969:54:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3962:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 648,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "3962:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3962:62:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3955:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 660,
															"nodeType": "ExpressionStatement",
															"src": "3955:69:2"
														},
														{
															"expression": {
																"id": 661,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "4058:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 625,
															"id": 662,
															"nodeType": "Return",
															"src": "4051:12:2"
														}
													]
												}
											}
										]
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 622,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 621,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "3694:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3694:19:2"
										}
									],
									"name": "updateConditions",
									"nameLocation": "3666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3682:2:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3722:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3722:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:6:2"
									},
									"scope": 860,
									"src": "3657:1602:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "5369:8:2",
										"statements": []
									},
									"functionSelector": "546fd992",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 782,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 781,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "5303:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:9:2"
										},
										{
											"id": 784,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 783,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "5313:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5313:19:2"
										}
									],
									"name": "randomMinting",
									"nameLocation": "5270:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "5292:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5284:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:19:2"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5349:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5349:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5354:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5354:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:20:2"
									},
									"scope": 860,
									"src": "5261:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "5548:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 807,
																	"name": "noOfMints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "5563:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5573:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "5563:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 810,
																	"name": "noOfMints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "5578:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5588:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5578:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5563:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206d696e7420312d33204e465473",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5590:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6",
																"typeString": "literal_string \"You can mint 1-3 NFTs\""
															},
															"value": "You can mint 1-3 NFTs"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96912665f610717c02b2f27206e8578f83b83b780e358c942227d2b966d555b6",
																"typeString": "literal_string \"You can mint 1-3 NFTs\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5555:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "5555:59:2"
											}
										]
									},
									"functionSelector": "27a8a072",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 798,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 797,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "5482:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5482:9:2"
										},
										{
											"id": 800,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 799,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "5492:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5492:19:2"
										}
									],
									"name": "FiatRandomMint",
									"nameLocation": "5432:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "5455:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5447:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "noOfMints",
												"nameLocation": "5471:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5466:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5466:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5446:35:2"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5528:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5528:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5533:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 803,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5533:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5527:20:2"
									},
									"scope": 860,
									"src": "5423:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "5739:51:2",
										"statements": [
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 825,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5749:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 827,
														"indexExpression": {
															"id": 826,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5749:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 828,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5768:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5749:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "5749:34:2"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAmount",
									"nameLocation": "5680:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "5702:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "5694:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5694:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "5713:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "5708:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5708:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5693:36:2"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5739:0:2"
									},
									"scope": 860,
									"src": "5671:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "5953:134:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 844,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5968:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5984:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "5968:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5990:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5960:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5960:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "5960:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 851,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6033:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6033:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 853,
																"name": "mintFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "6046:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6033:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420456e6f7567682042616c616e6365",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6056:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e",
																"typeString": "literal_string \"Not Enough Balance\""
															},
															"value": "Not Enough Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3fe597f7dd6c8aaacb5e42be1d7d2774de4bea6aab9eebb43263b876a072a92e",
																"typeString": "literal_string \"Not Enough Balance\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6025:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "6025:52:2"
											}
										]
									},
									"functionSelector": "3d65df70",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 837,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 836,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 401,
												"src": "5889:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5889:19:2"
										}
									],
									"name": "CryptoRandomMint",
									"nameLocation": "5852:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "5877:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "5869:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5868:19:2"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "5933:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5933:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "5938:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5938:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5932:20:2"
									},
									"scope": 860,
									"src": "5843:244:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 861,
							"src": "146:5943:2",
							"usedErrors": []
						}
					],
					"src": "30:6059:2"
				},
				"id": 2
			},
			"ERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC1155_Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155_Dropsite": [
							1071
						],
						"ERC165": [
							1094
						],
						"IERC1155Receiver": [
							1135
						],
						"IERC1155_Dropsite": [
							1155
						],
						"IERC165_Dropsite": [
							1159
						]
					},
					"id": 1072,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 862,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155_Dropsite.sol",
							"file": "./IERC1155_Dropsite.sol",
							"id": 863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1072,
							"sourceUnit": 1156,
							"src": "119:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver_Dropsite.sol",
							"file": "./IERC1155Receiver_Dropsite.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1072,
							"sourceUnit": 1136,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 865,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1072,
							"sourceUnit": 297,
							"src": "195:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1072,
							"sourceUnit": 319,
							"src": "219:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165_Dropsite.sol",
							"file": "./ERC165_Dropsite.sol",
							"id": 867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1072,
							"sourceUnit": 1095,
							"src": "243:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 869,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "519:7:3"
									},
									"id": 870,
									"nodeType": "InheritanceSpecifier",
									"src": "519:7:3"
								},
								{
									"baseName": {
										"id": 871,
										"name": "IERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1155,
										"src": "528:17:3"
									},
									"id": 872,
									"nodeType": "InheritanceSpecifier",
									"src": "528:17:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 868,
								"nodeType": "StructuredDocumentation",
								"src": "275:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1071,
							"linearizedBaseContracts": [
								1071,
								1155,
								1159,
								318
							],
							"name": "ERC1155_Dropsite",
							"nameLocation": "499:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 875,
									"libraryName": {
										"id": 873,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "559:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "553:26:3",
									"typeName": {
										"id": 874,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 881,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "691:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1071,
									"src": "634:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 880,
										"keyType": {
											"id": 876,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "642:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "634:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 879,
											"keyType": {
												"id": 877,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "661:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "653:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 887,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "810:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1071,
									"src": "757:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 886,
										"keyType": {
											"id": 882,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "757:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 885,
											"keyType": {
												"id": 883,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "776:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 884,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "795:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "965:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 899,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "983:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "989:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 900,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "989:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "989:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "983:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "975:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "975:62:3"
											},
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "1056:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "1048:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 908,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 910,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1067:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1111:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1129:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1121:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 915,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1121:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1133:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 921,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "1155:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 920,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "1137:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1137:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 924,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "1178:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 923,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "1160:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1160:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 913,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "1090:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,string memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1090:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1090:102:3"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 929,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1202:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 932,
															"indexExpression": {
																"id": 930,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "1212:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1202:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 933,
														"indexExpression": {
															"id": 931,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1216:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1202:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 934,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "1223:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1202:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "1202:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 938,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1259:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1277:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1269:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1269:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1269:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1281:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "1285:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1289:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "1244:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "EmitStatement",
												"src": "1239:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1337:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1355:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1347:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1347:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1359:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "1363:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 956,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1367:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1375:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 948,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1306:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,string memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "1306:74:3"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "844:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "867:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "859:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "887:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "879:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "907:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "923:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "923:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:98:3"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:3"
									},
									"scope": 1071,
									"src": "835:552:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "1607:2:3",
										"statements": []
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1403:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1441:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1433:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1467:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1489:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1481:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1518:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1501:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 968,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1501:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 969,
													"nodeType": "ArrayTypeName",
													"src": "1501:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1548:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1531:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 971,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1531:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 972,
													"nodeType": "ArrayTypeName",
													"src": "1531:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1579:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1565:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:166:3"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:0:3"
									},
									"scope": 1071,
									"src": "1394:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "1809:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 994,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "1823:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1823:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "1819:516:3",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "1840:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1021,
																		"nodeType": "Block",
																		"src": "1957:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1010,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1008,
																						"src": "1979:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1011,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1135,
																								"src": "1991:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1135_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1012,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1116,
																							"src": "1991:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,string calldata) returns (bytes4)"
																							}
																						},
																						"id": 1013,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1991:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1979:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1020,
																				"nodeType": "IfStatement",
																				"src": "1975:152:3",
																				"trueBody": {
																					"id": 1019,
																					"nodeType": "Block",
																					"src": "2036:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1016,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2065:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1015,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "2058:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1017,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2058:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1018,
																							"nodeType": "ExpressionStatement",
																							"src": "2058:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1022,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1009,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1008,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "1947:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1022,
																				"src": "1940:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1940:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1939:17:3"
																	},
																	"src": "1931:210:3"
																},
																{
																	"block": {
																		"id": 1030,
																		"nodeType": "Block",
																		"src": "2176:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1027,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1024,
																							"src": "2201:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1026,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2194:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1028,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2194:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1029,
																				"nodeType": "ExpressionStatement",
																				"src": "2194:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1031,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1025,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1024,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "2168:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1031,
																				"src": "2154:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1023,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2154:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2153:22:3"
																	},
																	"src": "2142:81:3"
																},
																{
																	"block": {
																		"id": 1036,
																		"nodeType": "Block",
																		"src": "2230:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1033,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2255:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1032,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2248:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1034,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2248:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1035,
																				"nodeType": "ExpressionStatement",
																				"src": "2248:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1037,
																	"nodeType": "TryCatchClause",
																	"src": "2224:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "1897:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "1907:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "1913:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1004,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "1917:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1005,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "1925:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 998,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "1875:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 997,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "1858:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1135_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1858:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1135",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1116,
																	"src": "1858:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,string memory) external returns (bytes4)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1858:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1038,
															"nodeType": "TryStatement",
															"src": "1854:471:3"
														}
													]
												}
											}
										]
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "1624:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1672:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1664:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1690:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1720:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1712:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1740:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1732:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1760:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1752:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1790:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1776:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:146:3"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:0:3"
									},
									"scope": 1071,
									"src": "1615:726:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "2431:109:3",
										"statements": [
											{
												"assignments": [
													1054
												],
												"declarations": [
													{
														"constant": false,
														"id": 1054,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "2458:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "2441:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1052,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2441:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1053,
															"nodeType": "ArrayTypeName",
															"src": "2441:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2480:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2466:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1055,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2470:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1056,
															"nodeType": "ArrayTypeName",
															"src": "2470:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:41:3"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1061,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2492:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1063,
														"indexExpression": {
															"hexValue": "30",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2498:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2492:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1064,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2503:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2492:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "2492:18:3"
											},
											{
												"expression": {
													"id": 1067,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1054,
													"src": "2528:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1068,
												"nodeType": "Return",
												"src": "2521:12:3"
											}
										]
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "2356:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "2382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:17:3"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2413:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1046,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2413:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1047,
													"nodeType": "ArrayTypeName",
													"src": "2413:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:18:3"
									},
									"scope": 1071,
									"src": "2347:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1072,
							"src": "490:2052:3",
							"usedErrors": []
						}
					],
					"src": "94:2448:3"
				},
				"id": 3
			},
			"ERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC165_Dropsite.sol",
					"exportedSymbols": {
						"ERC165": [
							1094
						],
						"IERC165_Dropsite": [
							1159
						]
					},
					"id": 1095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1073,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1074,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1095,
							"sourceUnit": 1160,
							"src": "124:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1076,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1159,
										"src": "763:16:4"
									},
									"id": 1077,
									"nodeType": "InheritanceSpecifier",
									"src": "763:16:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1075,
								"nodeType": "StructuredDocumentation",
								"src": "158:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1094,
							"linearizedBaseContracts": [
								1094,
								1159
							],
							"name": "ERC165",
							"nameLocation": "753:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "930:73:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "947:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1087,
																	"name": "IERC165_Dropsite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1159_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1159_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																],
																"id": 1086,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "962:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_Dropsite_$1159",
																"typeString": "type(contract IERC165_Dropsite)"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "962:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "947:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1091,
												"nodeType": "Return",
												"src": "940:56:4"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "786:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "856:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "881:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "874:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:20:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "924:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:4"
									},
									"scope": 1094,
									"src": "847:156:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1095,
							"src": "735:270:4",
							"usedErrors": []
						}
					],
					"src": "99:906:4"
				},
				"id": 4
			},
			"IERC1155Receiver_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1135
						],
						"IERC165_Dropsite": [
							1159
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 1160,
							"src": "127:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1099,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1159,
										"src": "231:16:5"
									},
									"id": 1100,
									"nodeType": "InheritanceSpecifier",
									"src": "231:16:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "161:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								1159
							],
							"name": "IERC1155Receiver",
							"nameLocation": "211:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "254:826:5",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "ae89a248",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1094:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1129:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1121:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1155:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1147:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1177:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1169:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1189:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1228:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1212:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1110,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1212:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:127:5"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1257:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:8:5"
									},
									"scope": 1135,
									"src": "1085:180:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "1271:994:5",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2279:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2319:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2311:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2345:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2337:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2378:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2359:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2359:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1123,
													"nodeType": "ArrayTypeName",
													"src": "2359:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2410:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2391:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2391:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1126,
													"nodeType": "ArrayTypeName",
													"src": "2391:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2441:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2426:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2426:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:150:5"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2470:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2470:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:8:5"
									},
									"scope": 1135,
									"src": "2270:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1136,
							"src": "201:2279:5",
							"usedErrors": []
						}
					],
					"src": "103:2377:5"
				},
				"id": 5
			},
			"IERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155_Dropsite": [
							1155
						],
						"IERC165_Dropsite": [
							1159
						]
					},
					"id": 1156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1156,
							"sourceUnit": 1160,
							"src": "171:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1140,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1159,
										"src": "403:16:6"
									},
									"id": 1141,
									"nodeType": "InheritanceSpecifier",
									"src": "403:16:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1139,
								"nodeType": "StructuredDocumentation",
								"src": "205:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1155,
							"linearizedBaseContracts": [
								1155,
								1159
							],
							"name": "IERC1155_Dropsite",
							"nameLocation": "381:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "426:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1154,
									"name": "TransferSingle",
									"nameLocation": "558:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "589:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "573:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "615:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "599:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "637:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "621:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "641:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "661:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "653:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:95:6"
									},
									"src": "552:116:6"
								}
							],
							"scope": 1156,
							"src": "371:2545:6",
							"usedErrors": []
						}
					],
					"src": "95:2821:6"
				},
				"id": 6
			},
			"IERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC165_Dropsite.sol",
					"exportedSymbols": {
						"IERC165_Dropsite": [
							1159
						]
					},
					"id": 1160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1157,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1158,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": true,
							"id": 1159,
							"linearizedBaseContracts": [
								1159
							],
							"name": "IERC165_Dropsite",
							"nameLocation": "415:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1160,
							"src": "405:458:7",
							"usedErrors": []
						}
					],
					"src": "100:763:7"
				},
				"id": 7
			},
			"Strings.sol": {
				"ast": {
					"absolutePath": "Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1362
						]
					},
					"id": 1363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1162,
								"nodeType": "StructuredDocumentation",
								"src": "111:35:8",
								"text": " @dev String operations.;"
							},
							"fullyImplemented": true,
							"id": 1362,
							"linearizedBaseContracts": [
								1362
							],
							"name": "Strings",
							"nameLocation": "155:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1165,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "194:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "169:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1163,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "400:632:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "602:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "611:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "602:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1179,
												"nodeType": "IfStatement",
												"src": "598:51:8",
												"trueBody": {
													"id": 1178,
													"nodeType": "Block",
													"src": "614:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1172,
															"id": 1177,
															"nodeType": "Return",
															"src": "628:10:8"
														}
													]
												}
											},
											{
												"assignments": [
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "666:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "658:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "658:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"id": 1182,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1168,
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "658:20:8"
											},
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "696:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "688:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "688:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"nodeType": "VariableDeclarationStatement",
												"src": "688:14:8"
											},
											{
												"body": {
													"id": 1197,
													"nodeType": "Block",
													"src": "730:57:8",
													"statements": [
														{
															"expression": {
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "744:8:8",
																"subExpression": {
																	"id": 1190,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "744:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1192,
															"nodeType": "ExpressionStatement",
															"src": "744:8:8"
														},
														{
															"expression": {
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1193,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "766:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "774:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "766:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1196,
															"nodeType": "ExpressionStatement",
															"src": "766:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "719:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "727:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "719:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "WhileStatement",
												"src": "712:75:8"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "809:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "796:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1199,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "796:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"arguments": [
														{
															"id": 1203,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "828:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "818:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1201,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "796:39:8"
											},
											{
												"body": {
													"id": 1236,
													"nodeType": "Block",
													"src": "864:131:8",
													"statements": [
														{
															"expression": {
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "878:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "888:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "878:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "878:11:8"
														},
														{
															"expression": {
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1213,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "903:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1215,
																	"indexExpression": {
																		"id": 1214,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "910:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "903:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1227,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1220,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "933:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1225,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1223,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1168,
																									"src": "946:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1224,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "954:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "946:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1222,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "938:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1221,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "938:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1226,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "938:19:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "933:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "927:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1218,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "927:5:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "927:31:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "920:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1216,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "920:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "920:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "903:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "903:56:8"
														},
														{
															"expression": {
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1232,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "973:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "982:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "973:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "973:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1206,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "852:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "861:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "852:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "WhileStatement",
												"src": "845:150:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "1018:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1011:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1238,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1011:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1011:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1172,
												"id": 1242,
												"nodeType": "Return",
												"src": "1004:21:8"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "234:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "338:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "355:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "347:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:15:8"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "385:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "385:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:15:8"
									},
									"scope": 1362,
									"src": "329:703:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "1211:255:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1252,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "1225:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1234:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1225:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1258,
												"nodeType": "IfStatement",
												"src": "1221:54:8",
												"trueBody": {
													"id": 1257,
													"nodeType": "Block",
													"src": "1237:38:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1258:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1251,
															"id": 1256,
															"nodeType": "Return",
															"src": "1251:13:8"
														}
													]
												}
											},
											{
												"assignments": [
													1260
												],
												"declarations": [
													{
														"constant": false,
														"id": 1260,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1292:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1284,
														"src": "1284:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1262,
												"initialValue": {
													"id": 1261,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1247,
													"src": "1299:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1284:20:8"
											},
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1322:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1284,
														"src": "1314:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1314:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"hexValue": "30",
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1331:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1314:18:8"
											},
											{
												"body": {
													"id": 1277,
													"nodeType": "Block",
													"src": "1360:57:8",
													"statements": [
														{
															"expression": {
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1374:8:8",
																"subExpression": {
																	"id": 1270,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "1374:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "1374:8:8"
														},
														{
															"expression": {
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1273,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "1396:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1405:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1396:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "1396:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1349:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1357:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1349:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1278,
												"nodeType": "WhileStatement",
												"src": "1342:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "1445:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1281,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "1452:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1279,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1285,
															1361
														],
														"referencedDeclaration": 1361,
														"src": "1433:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1283,
												"nodeType": "Return",
												"src": "1426:33:8"
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "1038:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1146:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1166:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1158:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:15:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1196:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:15:8"
									},
									"scope": 1362,
									"src": "1137:329:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1679:351:8",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1702:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1360,
														"src": "1689:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1295,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1689:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1721:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1300,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "1725:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1721:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1721:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1711:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1715:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1689:47:8"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1306,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "1746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1308,
														"indexExpression": {
															"hexValue": "30",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1746:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1758:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1746:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1746:15:8"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1312,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "1771:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1314,
														"indexExpression": {
															"hexValue": "31",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1778:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1771:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1783:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1771:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "1771:15:8"
											},
											{
												"body": {
													"id": 1346,
													"nodeType": "Block",
													"src": "1841:87:8",
													"statements": [
														{
															"expression": {
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1332,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "1855:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1334,
																	"indexExpression": {
																		"id": 1333,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "1862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1855:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1335,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "1867:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1339,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1336,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "1880:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1888:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1880:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1867:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1855:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1341,
															"nodeType": "ExpressionStatement",
															"src": "1855:37:8"
														},
														{
															"expression": {
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1342,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "1906:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1916:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1906:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1345,
															"nodeType": "ExpressionStatement",
															"src": "1906:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1326,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "1829:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1833:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1829:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"initializationExpression": {
													"assignments": [
														1319
													],
													"declarations": [
														{
															"constant": false,
															"id": 1319,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1809:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1347,
															"src": "1801:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1318,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1801:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1325,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1321,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "1817:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1813:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1826:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1813:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1801:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1836:3:8",
														"subExpression": {
															"id": 1329,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "1838:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1331,
													"nodeType": "ExpressionStatement",
													"src": "1836:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1796:132:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "1945:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1954:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1945:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1957:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1937:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "1937:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1357,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "2016:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2009:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1355,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2009:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1359,
												"nodeType": "Return",
												"src": "2002:21:8"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "1472:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1598:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1618:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1610:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1633:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1625:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:31:8"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1664:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1664:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:15:8"
									},
									"scope": 1362,
									"src": "1589:441:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1363,
							"src": "147:1885:8",
							"usedErrors": []
						}
					],
					"src": "86:1946:8"
				},
				"id": 8
			}
		}
	}
}