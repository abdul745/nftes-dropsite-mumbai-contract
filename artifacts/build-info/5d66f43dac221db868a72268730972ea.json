{
	"id": "5d66f43dac221db868a72268730972ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dropsite.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC1155_Dropsite.sol\"; \nimport \"./Strings.sol\";\ncontract Dropsite is ERC1155_Dropsite  { \n\n    //NFT category\n    // NFT Description & URL\n    string  data =\"\";\n\n    //NFTs distribution w.r.t Probabilities\n    //Max probability of Diamond(id=0) = 0.5%\n    //Max probability of Gold(id=1) = 10%\n    //Max probability of Silver(id=2) = 85%\n    uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; \n    \n    uint TotalNFTsMinted;     //Total NFTs\n    uint numOfCopies;         //A user can mint only 1 NFT\n    \n    //Initial Minting\n    uint Diamond;            \n    uint Gold;\n    uint Silver; \n\n    //owner-NFT-ID Mapping\n    //Won NFTs w.r.t Addresses\n    struct nft_Owner{\n        uint[] owned_Dropsite_NFTs;\n    }\n    mapping (address=>nft_Owner)  dropsite_NFT_Owner;\n    \n    //Check NFTs issued to an address\n    function returnOwner(address addr) public view returns (uint[] memory){\n        return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs;\n    }\n\n    //payments Mapping\n     mapping (address => uint) deposits;\n  modifier OnlyOwner {\n        require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\");\n        _;\n    }\n\n    //Pausing and activating the contract\n    modifier contractIsNotPaused(){\n        require (IsPaused == false, \"Dropsite is not Opened Yet.\" );\n        _;\n    }\n      bool public IsPaused = true;\n    address payable public  Owner;\n    string private _name;\n    constructor (string memory name){\n        _name = name;\n        Owner = payable(msg.sender);\n\n        TotalNFTsMinted=0;     //Total NFTs Minted\n        numOfCopies=1;         //A user can mint only 1 NFT\n        Diamond=0;            \n        Gold=0;\n        Silver=0;\n    }\n     \n     //To Check issues NFTs Category Wise\n     function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){\n         return (Diamond,Gold,Silver);\n     }\n\n     //To Check total Minted NFTs\n    function checkTotalMinted() public view OnlyOwner returns(uint){\n         return TotalNFTsMinted;\n     }\n     function stopDropsite() public OnlyOwner{\n        require(IsPaused==false, \"Dropsite is already Stopped\");\n        IsPaused=true;\n    }\n\n     function openDropsite() public OnlyOwner {\n        require(IsPaused==true, \"Dropsite is already Running\");\n        IsPaused=false;\n    }\n    \n     //To WithDraw All Ammount from Contract to Owners Address or any other Address \n    function withDraw(address payable to) public payable OnlyOwner {\n        uint Balance = address(this).balance;\n        require(Balance > 0 wei, \"Error! No Balance to withdraw\"); \n        to.transfer(Balance);\n    }  \n    \n    //To Check Contract Balance in Wei\n      function ContractBalance() public view OnlyOwner returns (uint){\n        return address(this).balance;\n    }\n\n    //Random Number to Select an item from nums Array(Probabilities)\n\n    function random() internal view returns (uint) {\n        // Returns 0-10\n    uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20;\n    return randomnumber;\n    }\n\n    //random number will be generated which will be the index to nums array.\n    //The number on that index will be considered as an nftID and will be alloted to the minter(user).\n   function updateConditions() internal contractIsNotPaused returns(uint) {\n       uint index = random();\n        uint nftId = nums[index];\n\n        // if nftID is 0, and less than 51 so 50 MAX - Diamond Category           \n        if(nftId == 0 && Diamond < 50) {\n             Diamond++;\n            data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)));\n            \n            return nftId;\n\n        // if nftID is 0 or 1 and Diamond is more than 150, it will go there in Gold Category\n        } else if(nftId <= 1 && Gold < 100) {\n            Gold++;\n            data = string(abi.encodePacked(\"Gold_\",Strings.toString(Gold)));\n            return nftId;\n\n        // if any of the above conditions are filled it will mint silver if enough silver available\n        } else if(nftId <= 2 && Silver <= 850) {\n            Silver++;\n            data=data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver)));\n            \n            return nftId;\n        }\n        else {\n            \n            //if nft ID is either 1 or 2, but Slots in Gold and Diamond are remaining, First Gold category will be filled then Diamond\n\n            if(Gold < 100) {\n                nftId = 1;\n                Gold++;\n                data = string(abi.encodePacked(\"Gold_\",Strings.toString(Gold)));\n                 \n                return nftId;\n            } else {\n                nftId = 0;\n                Diamond++;\n                data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)));\n                \n                return nftId;\n            }   \n    }\n   }\n\n    //Random minting after Fiat Payments\n    function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n   // we're assuming that random() returns only 0,1,2    \n   uint nftId = updateConditions();\n    _mint(user_addr, nftId, numOfCopies, data);\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId);\n    return (nftId,string(data));\n    }\n\n    //MATIC Amount will be deposited  \n    function depositAmount(address payee,uint amountToDeposit) internal {\n        deposits[payee] += amountToDeposit;\n    }\n    \n    //Random minting after Crypto Payments\n    function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {\n     require(TotalNFTsMinted<1000, \"Max Minting Limit reached\");\n     require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\");\n   // nftId = random(); // we're assuming that random() returns only 0,1,2\n   uint nftId = updateConditions();\n    _mint(user_addr, nftId, numOfCopies, data);\n    depositAmount(_msgSender(), msg.value);\n    TotalNFTsMinted++;\n    dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId);\n    return (nftId,string(data));\n    }\n}"
			},
			"Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.;\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}"
			},
			"ERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155_Dropsite.sol\";\nimport \"./IERC1155Receiver_Dropsite.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165_Dropsite.sol\";\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155_Dropsite is Context, IERC1155_Dropsite  {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) internal _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        string memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}"
			},
			"ERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165_Dropsite {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual  returns (bool) {\n        return interfaceId == type(IERC165_Dropsite).interfaceId;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"IERC1155Receiver_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165_Dropsite {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        string calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"IERC1155_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n// import \"../../utils/introspection/IERC165.sol\";\nimport \"./IERC165_Dropsite.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155_Dropsite  is IERC165_Dropsite {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    // event TransferBatch(\n    //     address indexed operator,\n    //     address indexed from,\n    //     address indexed to,\n    //     uint256[] ids,\n    //     uint256[] values\n    // );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    // event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    // event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n//     function balanceOf(address account, uint256 id) external view returns (uint256);\n\n//     /**\n//      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n//      *\n//      * Requirements:\n//      *\n//      * - `accounts` and `ids` must have the same length.\n//      */\n//     function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n//         external\n//         view\n//         returns (uint256[] memory);\n\n//     /**\n//      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n//      *\n//      * Emits an {ApprovalForAll} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `operator` cannot be the caller.\n//      */\n//     function setApprovalForAll(address operator, bool approved) external;\n\n//     /**\n//      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n//      *\n//      * See {setApprovalForAll}.\n//      */\n//     function isApprovedForAll(address account, address operator) external view returns (bool);\n\n}"
			},
			"IERC165_Dropsite.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165_Dropsite {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n   // function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH13 0x26B1CD6618E7CFCB6B7E5C1BBD PUSH11 0x1C0BA9EDB855FD0FD2A4AD DUP7 0xAB 0xBB KECCAK256 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH13 0x26B1CD6618E7CFCB6B7E5C1BBD PUSH11 0x1C0BA9EDB855FD0FD2A4AD DUP7 0xAB 0xBB KECCAK256 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56c26b1cd6618e7cfcb6b7e5c1bbd6a1c0ba9edb855fd0fd2a4ad86abbb20e464736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dropsite.sol": {
				"Dropsite": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "CryptoRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_addr",
									"type": "address"
								}
							],
							"name": "FiatRandomMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkMintedCategoryWise",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkTotalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "returnOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopDropsite",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  0xa0\n    /* \"Dropsite.sol\":146:6210  contract Dropsite is ERC1155_Dropsite  { ... */\n  0x40\n    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  dup2\n  swap1\n  mstore\n  0x00\n    /* \"Dropsite.sol\":146:6210  contract Dropsite is ERC1155_Dropsite  { ... */\n  0x80\n    /* \"Dropsite.sol\":241:257  string  data =\"\" */\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  0x02\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x40\n  dup1\n  mload\n  0x0280\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"Dropsite.sol\":468:469  1 */\n  0x01\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x20\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  swap2\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"Dropsite.sol\":472:473  2 */\n  0x02\n    /* \"Dropsite.sol\":440:506  uint8[20] private nums = [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2] */\n  0x60\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x80\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xa0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xc0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0xe0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0100\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0120\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0140\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0160\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0180\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01a0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01c0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x01e0\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0200\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0220\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0240\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x0260\n  dup3\n  add\n  mstore\n  tag_3\n  swap1\n  0x03\n  swap1\n  0x14\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"Dropsite.sol\":1417:1444  bool public IsPaused = true */\n  0x0b\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Dropsite.sol\":1440:1444  true */\n  0x01\n    /* \"Dropsite.sol\":1417:1444  bool public IsPaused = true */\n  or\n  swap1\n  sstore\n    /* \"Dropsite.sol\":1511:1786  constructor (string memory name){... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"Dropsite.sol\":1553:1565  _name = name */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"Dropsite.sol\":1553:1558  _name */\n  0x0c\n  swap1\n    /* \"Dropsite.sol\":1553:1565  _name = name */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"Dropsite.sol\":1575:1580  Owner */\n  0x0b\n    /* \"Dropsite.sol\":1575:1602  Owner = payable(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n    /* \"Dropsite.sol\":1591:1601  msg.sender */\n  caller\n    /* \"Dropsite.sol\":1575:1602  Owner = payable(msg.sender) */\n  0x0100\n  mul\n  or\n  swap1\n  sstore\n  0x00\n    /* \"Dropsite.sol\":1613:1628  TotalNFTsMinted */\n  0x04\n    /* \"Dropsite.sol\":1613:1630  TotalNFTsMinted=0 */\n  dup2\n  swap1\n  sstore\n  0x01\n    /* \"Dropsite.sol\":1664:1675  numOfCopies */\n  0x05\n    /* \"Dropsite.sol\":1664:1677  numOfCopies=1 */\n  sstore\n  0x06\n    /* \"Dropsite.sol\":1724:1733  Diamond=0 */\n  dup2\n  swap1\n  sstore\n  0x07\n    /* \"Dropsite.sol\":1755:1761  Gold=0 */\n  dup2\n  swap1\n  sstore\n    /* \"Dropsite.sol\":1771:1777  Silver */\n  0x08\n    /* \"Dropsite.sol\":1771:1779  Silver=0 */\n  sstore\n    /* \"Dropsite.sol\":146:6210  contract Dropsite is ERC1155_Dropsite  { ... */\n  jump(tag_28)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_4:\n  0x01\n  dup4\n  add\n  swap2\n  dup4\n  swap1\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_22:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_22)\ntag_23:\n  dup1\n  iszero\n  tag_24\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_23)\ntag_24:\n  pop\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\ntag_20:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_26)\n    /* \"#utility.yul\":14:1101   */\ntag_7:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_30:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_31:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_32:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_37\n  tag_35\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_38:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_39:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_42:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_44:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_45:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_35:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_28:\n    /* \"Dropsite.sol\":146:6210  contract Dropsite is ERC1155_Dropsite  { ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dropsite.sol\":146:6210  contract Dropsite is ERC1155_Dropsite  { ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3b668059\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x3b668059\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3d65df70\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x60daa851\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xaa90c726\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfd6c3b1b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0390c11c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0a67d2c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1309a563\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15460259\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x32b61b4c\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dropsite.sol\":2007:2111  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":8384:8409   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8372:8374   */\n      0x20\n        /* \"#utility.yul\":8357:8375   */\n      add\n        /* \"Dropsite.sol\":2007:2111  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dropsite.sol\":2490:2704  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_3:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Dropsite.sol\":1417:1444  bool public IsPaused = true */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x0b)\n      tag_24\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":4263:4277   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4256:4278   */\n      iszero\n        /* \"#utility.yul\":4238:4279   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"#utility.yul\":4211:4229   */\n      add\n        /* \"Dropsite.sol\":1417:1444  bool public IsPaused = true */\n      tag_17\n        /* \"#utility.yul\":4098:4285   */\n      jump\n        /* \"Dropsite.sol\":2259:2395  function openDropsite() public OnlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_19\n      tag_30\n      jump\t// in\n        /* \"Dropsite.sol\":4957:5403  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"Dropsite.sol\":2757:2865  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_15\n      tag_40\n      jump\t// in\n        /* \"Dropsite.sol\":5620:6208  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_8:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"Dropsite.sol\":1840:1967  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9171:9196   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":9227:9229   */\n      0x20\n        /* \"#utility.yul\":9212:9230   */\n      dup5\n      add\n        /* \"#utility.yul\":9205:9239   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9255:9273   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9248:9282   */\n      mstore\n        /* \"#utility.yul\":9159:9161   */\n      0x60\n        /* \"#utility.yul\":9144:9162   */\n      add\n        /* \"Dropsite.sol\":1840:1967  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n      tag_17\n        /* \"#utility.yul\":8969:9288   */\n      jump\n        /* \"Dropsite.sol\":2117:2252  function stopDropsite() public OnlyOwner{... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_19\n      tag_53\n      jump\t// in\n        /* \"Dropsite.sol\":1450:1479  address payable public  Owner */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      sload(0x0b)\n      tag_55\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2849:2881   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2831:2882   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2819:2821   */\n      0x20\n        /* \"#utility.yul\":2804:2822   */\n      add\n        /* \"Dropsite.sol\":1450:1479  address payable public  Owner */\n      tag_17\n        /* \"#utility.yul\":2669:2888   */\n      jump\n        /* \"Dropsite.sol\":930:1068  function returnOwner(address addr) public view returns (uint[] memory){... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"Dropsite.sol\":2007:2111  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n    tag_16:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":2065:2069  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n      pop\n        /* \"Dropsite.sol\":2088:2103  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":1237:1238  _ */\n    tag_71:\n        /* \"Dropsite.sol\":2007:2111  function checkTotalMinted() public view OnlyOwner returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":2490:2704  function withDraw(address payable to) public payable OnlyOwner {... */\n    tag_22:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_74:\n        /* \"Dropsite.sol\":2578:2599  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2617:2632  Balance > 0 wei */\n      dup1\n        /* \"Dropsite.sol\":2609:2666  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7680:7682   */\n      0x20\n        /* \"Dropsite.sol\":2609:2666  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7662:7683   */\n      mstore\n        /* \"#utility.yul\":7719:7721   */\n      0x1d\n        /* \"#utility.yul\":7699:7717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7692:7722   */\n      mstore\n        /* \"#utility.yul\":7758:7789   */\n      0x4572726f7221204e6f2042616c616e636520746f207769746864726177000000\n        /* \"#utility.yul\":7738:7756   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7731:7790   */\n      mstore\n        /* \"#utility.yul\":7807:7825   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2609:2666  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n      tag_69\n        /* \"#utility.yul\":7478:7831   */\n      jump\n        /* \"Dropsite.sol\":2609:2666  require(Balance > 0 wei, \"Error! No Balance to withdraw\") */\n    tag_77:\n        /* \"Dropsite.sol\":2677:2697  to.transfer(Balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":2677:2688  to.transfer */\n      dup4\n      and\n      swap1\n        /* \"Dropsite.sol\":2677:2697  to.transfer(Balance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Dropsite.sol\":2689:2696  Balance */\n      dup4\n      swap1\n        /* \"Dropsite.sol\":2677:2697  to.transfer(Balance) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Dropsite.sol\":2689:2696  Balance */\n      dup6\n        /* \"Dropsite.sol\":2677:2688  to.transfer */\n      dup9\n        /* \"Dropsite.sol\":2677:2697  to.transfer(Balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n        /* \"Dropsite.sol\":2553:2704  {... */\n      pop\n        /* \"Dropsite.sol\":2490:2704  function withDraw(address payable to) public payable OnlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":2259:2395  function openDropsite() public OnlyOwner {... */\n    tag_30:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_84:\n        /* \"Dropsite.sol\":2318:2326  IsPaused */\n      and(0xff, sload(0x0b))\n        /* \"Dropsite.sol\":2318:2332  IsPaused==true */\n      iszero\n      iszero\n        /* \"Dropsite.sol\":2318:2326  IsPaused */\n      0x01\n        /* \"Dropsite.sol\":2318:2332  IsPaused==true */\n      eq\n        /* \"Dropsite.sol\":2310:2364  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"Dropsite.sol\":2310:2364  require(IsPaused==true, \"Dropsite is already Running\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5883:5904   */\n      mstore\n        /* \"#utility.yul\":5940:5942   */\n      0x1b\n        /* \"#utility.yul\":5920:5938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5913:5943   */\n      mstore\n        /* \"#utility.yul\":5979:6008   */\n      0x44726f707369746520697320616c72656164792052756e6e696e670000000000\n        /* \"#utility.yul\":5959:5977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5952:6009   */\n      mstore\n        /* \"#utility.yul\":6026:6044   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2310:2364  require(IsPaused==true, \"Dropsite is already Running\") */\n      tag_69\n        /* \"#utility.yul\":5699:6050   */\n      jump\n        /* \"Dropsite.sol\":2310:2364  require(IsPaused==true, \"Dropsite is already Running\") */\n    tag_87:\n        /* \"Dropsite.sol\":2374:2382  IsPaused */\n      0x0b\n        /* \"Dropsite.sol\":2374:2388  IsPaused=false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Dropsite.sol\":2259:2395  function openDropsite() public OnlyOwner {... */\n      jump\t// out\n        /* \"Dropsite.sol\":4957:5403  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n    tag_35:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":5046:5050  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":5051:5064  string memory */\n      0x60\n      swap1\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_92:\n        /* \"Dropsite.sol\":1342:1350  IsPaused */\n      and(0xff, sload(0x0b))\n        /* \"Dropsite.sol\":1342:1359  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1333:1392  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_97\n      jump\t// in\n    tag_95:\n        /* \"Dropsite.sol\":5097:5101  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":5081:5096  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":5081:5101  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":5073:5131  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7326:7328   */\n      0x20\n        /* \"Dropsite.sol\":5073:5131  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7308:7329   */\n      mstore\n        /* \"#utility.yul\":7365:7367   */\n      0x19\n        /* \"#utility.yul\":7345:7363   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7338:7368   */\n      mstore\n      shl(0x3a, 0x13585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959)\n        /* \"#utility.yul\":7384:7402   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7377:7432   */\n      mstore\n        /* \"#utility.yul\":7449:7467   */\n      0x64\n      add\n        /* \"Dropsite.sol\":5073:5131  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_69\n        /* \"#utility.yul\":7124:7473   */\n      jump\n        /* \"Dropsite.sol\":5073:5131  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n    tag_99:\n        /* \"Dropsite.sol\":5194:5204  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":5207:5225  updateConditions() */\n      tag_102\n        /* \"Dropsite.sol\":5207:5223  updateConditions */\n      tag_103\n        /* \"Dropsite.sol\":5207:5225  updateConditions() */\n      jump\t// in\n    tag_102:\n        /* \"Dropsite.sol\":5194:5225  uint nftId = updateConditions() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":5231:5273  _mint(user_addr, nftId, numOfCopies, data) */\n      tag_104\n        /* \"Dropsite.sol\":5237:5246  user_addr */\n      dup5\n        /* \"Dropsite.sol\":5248:5253  nftId */\n      dup3\n        /* \"Dropsite.sol\":5255:5266  numOfCopies */\n      sload(0x05)\n        /* \"Dropsite.sol\":5268:5272  data */\n      0x02\n        /* \"Dropsite.sol\":5231:5273  _mint(user_addr, nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":5231:5236  _mint */\n      tag_111\n        /* \"Dropsite.sol\":5231:5273  _mint(user_addr, nftId, numOfCopies, data) */\n      jump\t// in\n    tag_104:\n        /* \"Dropsite.sol\":5279:5294  TotalNFTsMinted */\n      0x04\n        /* \"Dropsite.sol\":5279:5296  TotalNFTsMinted++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":5279:5294  TotalNFTsMinted */\n      0x00\n        /* \"Dropsite.sol\":5279:5296  TotalNFTsMinted++ */\n      tag_112\n      dup4\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":5302:5331  dropsite_NFT_Owner[user_addr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":5302:5320  dropsite_NFT_Owner */\n      0x09\n        /* \"Dropsite.sol\":5302:5331  dropsite_NFT_Owner[user_addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"Dropsite.sol\":5302:5363  dropsite_NFT_Owner[user_addr].owned_Dropsite_NFTs.push(nftId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"Dropsite.sol\":5390:5394  data */\n      0x02\n        /* \"Dropsite.sol\":5369:5396  return (nftId,string(data)) */\n      dup1\n      sload\n        /* \"Dropsite.sol\":5357:5362  nftId */\n      dup3\n      swap2\n        /* \"Dropsite.sol\":5390:5394  data */\n      swap1\n      dup2\n      swap1\n        /* \"Dropsite.sol\":5369:5396  return (nftId,string(data)) */\n      tag_115\n      swap1\n      tag_106\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_106\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Dropsite.sol\":4957:5403  function FiatRandomMint(address user_addr) OnlyOwner contractIsNotPaused public returns (uint,string memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Dropsite.sol\":2757:2865  function ContractBalance() public view OnlyOwner returns (uint){... */\n    tag_40:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":2815:2819  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_122:\n      pop\n        /* \"Dropsite.sol\":2837:2858  address(this).balance */\n      selfbalance\n        /* \"Dropsite.sol\":2757:2865  function ContractBalance() public view OnlyOwner returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"Dropsite.sol\":5620:6208  function CryptoRandomMint(address user_addr)  contractIsNotPaused public payable returns (uint,string memory) {... */\n    tag_44:\n        /* \"Dropsite.sol\":1342:1350  IsPaused */\n      sload(0x0b)\n        /* \"Dropsite.sol\":5710:5714  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":5715:5728  string memory */\n      0x60\n      swap1\n        /* \"Dropsite.sol\":1342:1350  IsPaused */\n      0xff\n      and\n        /* \"Dropsite.sol\":1342:1359  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1333:1392  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_97\n      jump\t// in\n    tag_126:\n        /* \"Dropsite.sol\":5761:5765  1000 */\n      0x03e8\n        /* \"Dropsite.sol\":5745:5760  TotalNFTsMinted */\n      sload(0x04)\n        /* \"Dropsite.sol\":5745:5765  TotalNFTsMinted<1000 */\n      lt\n        /* \"Dropsite.sol\":5737:5795  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7326:7328   */\n      0x20\n        /* \"Dropsite.sol\":5737:5795  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7308:7329   */\n      mstore\n        /* \"#utility.yul\":7365:7367   */\n      0x19\n        /* \"#utility.yul\":7345:7363   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7338:7368   */\n      mstore\n      shl(0x3a, 0x13585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959)\n        /* \"#utility.yul\":7384:7402   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7377:7432   */\n      mstore\n        /* \"#utility.yul\":7449:7467   */\n      0x64\n      add\n        /* \"Dropsite.sol\":5737:5795  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n      tag_69\n        /* \"#utility.yul\":7124:7473   */\n      jump\n        /* \"Dropsite.sol\":5737:5795  require(TotalNFTsMinted<1000, \"Max Minting Limit reached\") */\n    tag_129:\n        /* \"Dropsite.sol\":5810:5819  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":5824:5844  25000000000000000000 */\n      0x015af1d78b58c40000\n        /* \"Dropsite.sol\":5810:5845  msg.value == (25000000000000000000) */\n      eq\n        /* \"Dropsite.sol\":5802:5875  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5547:5549   */\n      0x20\n        /* \"Dropsite.sol\":5802:5875  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5529:5550   */\n      mstore\n        /* \"#utility.yul\":5586:5588   */\n      0x19\n        /* \"#utility.yul\":5566:5584   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5559:5589   */\n      mstore\n        /* \"#utility.yul\":5625:5652   */\n      0x42616c616e6365206d757374206265203235204d617469637300000000000000\n        /* \"#utility.yul\":5605:5623   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5598:5653   */\n      mstore\n        /* \"#utility.yul\":5670:5688   */\n      0x64\n      add\n        /* \"Dropsite.sol\":5802:5875  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n      tag_69\n        /* \"#utility.yul\":5345:5694   */\n      jump\n        /* \"Dropsite.sol\":5802:5875  require(msg.value == (25000000000000000000), \"Balance must be 25 Matics\") */\n    tag_131:\n        /* \"Dropsite.sol\":5955:5965  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":5968:5986  updateConditions() */\n      tag_134\n        /* \"Dropsite.sol\":5968:5984  updateConditions */\n      tag_103\n        /* \"Dropsite.sol\":5968:5986  updateConditions() */\n      jump\t// in\n    tag_134:\n        /* \"Dropsite.sol\":5955:5986  uint nftId = updateConditions() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":5992:6034  _mint(user_addr, nftId, numOfCopies, data) */\n      tag_135\n        /* \"Dropsite.sol\":5998:6007  user_addr */\n      dup5\n        /* \"Dropsite.sol\":6009:6014  nftId */\n      dup3\n        /* \"Dropsite.sol\":6016:6027  numOfCopies */\n      sload(0x05)\n        /* \"Dropsite.sol\":6029:6033  data */\n      0x02\n        /* \"Dropsite.sol\":5992:6034  _mint(user_addr, nftId, numOfCopies, data) */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_135:\n        /* \"Dropsite.sol\":6040:6078  depositAmount(_msgSender(), msg.value) */\n      tag_104\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Dropsite.sol\":6068:6077  msg.value */\n      callvalue\n        /* \"Dropsite.sol\":6040:6053  depositAmount */\n      tag_143\n        /* \"Dropsite.sol\":6040:6078  depositAmount(_msgSender(), msg.value) */\n      jump\t// in\n        /* \"Dropsite.sol\":1840:1967  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n    tag_48:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n        /* \"Dropsite.sol\":1905:1909  uint */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_153:\n      pop\n      pop\n        /* \"Dropsite.sol\":1939:1946  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":1947:1951  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":1952:1958  Silver */\n      sload(0x08)\n        /* \"Dropsite.sol\":1939:1946  Diamond */\n      swap2\n      swap4\n        /* \"Dropsite.sol\":1947:1951  Gold */\n      swap1\n      swap3\n      pop\n        /* \"Dropsite.sol\":1840:1967  function checkMintedCategoryWise() public view OnlyOwner returns(uint,uint,uint){... */\n      jump\t// out\n        /* \"Dropsite.sol\":2117:2252  function stopDropsite() public OnlyOwner{... */\n    tag_53:\n        /* \"Dropsite.sol\":1189:1194  Owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1173:1194  _msgSender() == Owner */\n      and\n      eq\n        /* \"Dropsite.sol\":1165:1227  require(_msgSender() == Owner, \"Only NFT-ES Owner can Access\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_158:\n        /* \"Dropsite.sol\":2175:2183  IsPaused */\n      and(0xff, sload(0x0b))\n        /* \"Dropsite.sol\":2175:2190  IsPaused==false */\n      iszero\n        /* \"Dropsite.sol\":2167:2222  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6257:6259   */\n      0x20\n        /* \"Dropsite.sol\":2167:2222  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6239:6260   */\n      mstore\n        /* \"#utility.yul\":6296:6298   */\n      0x1b\n        /* \"#utility.yul\":6276:6294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6269:6299   */\n      mstore\n        /* \"#utility.yul\":6335:6364   */\n      0x44726f707369746520697320616c72656164792053746f707065640000000000\n        /* \"#utility.yul\":6315:6333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6308:6365   */\n      mstore\n        /* \"#utility.yul\":6382:6400   */\n      0x64\n      add\n        /* \"Dropsite.sol\":2167:2222  require(IsPaused==false, \"Dropsite is already Stopped\") */\n      tag_69\n        /* \"#utility.yul\":6055:6406   */\n      jump\n        /* \"Dropsite.sol\":2167:2222  require(IsPaused==false, \"Dropsite is already Stopped\") */\n    tag_161:\n        /* \"Dropsite.sol\":2232:2240  IsPaused */\n      0x0b\n        /* \"Dropsite.sol\":2232:2245  IsPaused=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Dropsite.sol\":2241:2245  true */\n      0x01\n        /* \"Dropsite.sol\":2232:2245  IsPaused=true */\n      or\n      swap1\n      sstore\n        /* \"Dropsite.sol\":2117:2252  function stopDropsite() public OnlyOwner{... */\n      jump\t// out\n        /* \"Dropsite.sol\":930:1068  function returnOwner(address addr) public view returns (uint[] memory){... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":1017:1041  dropsite_NFT_Owner[addr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":1017:1035  dropsite_NFT_Owner */\n      0x09\n        /* \"Dropsite.sol\":1017:1041  dropsite_NFT_Owner[addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Dropsite.sol\":1010:1061  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"Dropsite.sol\":986:999  uint[] memory */\n      0x60\n      swap4\n        /* \"Dropsite.sol\":1010:1061  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      swap3\n      dup4\n      add\n        /* \"Dropsite.sol\":1017:1041  dropsite_NFT_Owner[addr] */\n      dup3\n        /* \"Dropsite.sol\":1010:1061  return dropsite_NFT_Owner[addr].owned_Dropsite_NFTs */\n      dup3\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dropsite.sol\":930:1068  function returnOwner(address addr) public view returns (uint[] memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dropsite.sol\":3322:4910  function updateConditions() internal contractIsNotPaused returns(uint) {... */\n    tag_103:\n        /* \"Dropsite.sol\":1342:1350  IsPaused */\n      sload(0x0b)\n        /* \"Dropsite.sol\":3387:3391  uint */\n      0x00\n      swap1\n        /* \"Dropsite.sol\":1342:1350  IsPaused */\n      0xff\n      and\n        /* \"Dropsite.sol\":1342:1359  IsPaused == false */\n      iszero\n        /* \"Dropsite.sol\":1333:1392  require (IsPaused == false, \"Dropsite is not Opened Yet.\" ) */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_97\n      jump\t// in\n    tag_169:\n        /* \"Dropsite.sol\":3402:3412  uint index */\n      0x00\n        /* \"Dropsite.sol\":3415:3423  random() */\n      tag_172\n        /* \"Dropsite.sol\":3415:3421  random */\n      tag_173\n        /* \"Dropsite.sol\":3415:3423  random() */\n      jump\t// in\n    tag_172:\n        /* \"Dropsite.sol\":3402:3423  uint index = random() */\n      swap1\n      pop\n        /* \"Dropsite.sol\":3433:3443  uint nftId */\n      0x00\n        /* \"Dropsite.sol\":3446:3450  nums */\n      0x03\n        /* \"Dropsite.sol\":3451:3456  index */\n      dup3\n        /* \"Dropsite.sol\":3446:3457  nums[index] */\n      0x14\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n      0x20\n      dup2\n      div\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      0x1f\n      swap1\n      swap3\n      and\n      0x0100\n      exp\n      swap1\n      div\n      and\n      swap1\n      pop\n        /* \"Dropsite.sol\":3554:3564  nftId == 0 */\n      dup1\n      iszero\n        /* \"Dropsite.sol\":3554:3580  nftId == 0 && Diamond < 50 */\n      dup1\n      iszero\n      tag_178\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3578:3580  50 */\n      0x32\n        /* \"Dropsite.sol\":3568:3575  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":3568:3580  Diamond < 50 */\n      lt\n        /* \"Dropsite.sol\":3554:3580  nftId == 0 && Diamond < 50 */\n    tag_178:\n        /* \"Dropsite.sol\":3551:4905  if(nftId == 0 && Diamond < 50) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"Dropsite.sol\":3597:3604  Diamond */\n      0x06\n        /* \"Dropsite.sol\":3597:3606  Diamond++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":3597:3604  Diamond */\n      0x00\n        /* \"Dropsite.sol\":3597:3606  Diamond++ */\n      tag_180\n      dup4\n      tag_113\n      jump\t// in\n    tag_180:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":3662:3687  Strings.toString(Diamond) */\n      tag_181\n        /* \"Dropsite.sol\":3679:3686  Diamond */\n      sload(0x06)\n        /* \"Dropsite.sol\":3662:3678  Strings.toString */\n      tag_182\n        /* \"Dropsite.sol\":3662:3687  Strings.toString(Diamond) */\n      jump\t// in\n    tag_181:\n        /* \"Dropsite.sol\":3634:3688  abi.encodePacked(\"Diamond_\",Strings.toString(Diamond)) */\n      add(0x20, mload(0x40))\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":3620:3624  data */\n      0x02\n        /* \"Dropsite.sol\":3620:3689  data = string(abi.encodePacked(\"Diamond_\",Strings.toString(Diamond))) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      pop\n        /* \"Dropsite.sol\":3723:3728  nftId */\n      swap2\n      pop\n        /* \"Dropsite.sol\":3716:3728  return nftId */\n      tag_71\n      swap1\n      pop\n      jump\n        /* \"Dropsite.sol\":3551:4905  if(nftId == 0 && Diamond < 50) {... */\n    tag_179:\n        /* \"Dropsite.sol\":3852:3853  1 */\n      0x01\n        /* \"Dropsite.sol\":3843:3848  nftId */\n      dup2\n        /* \"Dropsite.sol\":3843:3853  nftId <= 1 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":3843:3867  nftId <= 1 && Gold < 100 */\n      dup1\n      iszero\n      tag_188\n      jumpi\n      pop\n        /* \"Dropsite.sol\":3864:3867  100 */\n      0x64\n        /* \"Dropsite.sol\":3857:3861  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":3857:3867  Gold < 100 */\n      lt\n        /* \"Dropsite.sol\":3843:3867  nftId <= 1 && Gold < 100 */\n    tag_188:\n        /* \"Dropsite.sol\":3840:4905  if(nftId <= 1 && Gold < 100) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"Dropsite.sol\":3883:3887  Gold */\n      0x07\n        /* \"Dropsite.sol\":3883:3889  Gold++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":3883:3887  Gold */\n      0x00\n        /* \"Dropsite.sol\":3883:3889  Gold++ */\n      tag_190\n      dup4\n      tag_113\n      jump\t// in\n    tag_190:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":3942:3964  Strings.toString(Gold) */\n      tag_191\n        /* \"Dropsite.sol\":3959:3963  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":3942:3958  Strings.toString */\n      tag_182\n        /* \"Dropsite.sol\":3942:3964  Strings.toString(Gold) */\n      jump\t// in\n    tag_191:\n        /* \"Dropsite.sol\":3917:3965  abi.encodePacked(\"Gold_\",Strings.toString(Gold)) */\n      add(0x20, mload(0x40))\n      tag_183\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n        /* \"Dropsite.sol\":3840:4905  if(nftId <= 1 && Gold < 100) {... */\n    tag_189:\n        /* \"Dropsite.sol\":4122:4123  2 */\n      0x02\n        /* \"Dropsite.sol\":4113:4118  nftId */\n      dup2\n        /* \"Dropsite.sol\":4113:4123  nftId <= 2 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":4113:4140  nftId <= 2 && Silver <= 850 */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"Dropsite.sol\":4137:4140  850 */\n      0x0352\n        /* \"Dropsite.sol\":4127:4133  Silver */\n      sload(0x08)\n        /* \"Dropsite.sol\":4127:4140  Silver <= 850 */\n      gt\n      iszero\n        /* \"Dropsite.sol\":4113:4140  nftId <= 2 && Silver <= 850 */\n    tag_196:\n        /* \"Dropsite.sol\":4110:4905  if(nftId <= 2 && Silver <= 850) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"Dropsite.sol\":4156:4162  Silver */\n      0x08\n        /* \"Dropsite.sol\":4156:4164  Silver++ */\n      dup1\n      sload\n      swap1\n        /* \"Dropsite.sol\":4156:4162  Silver */\n      0x00\n        /* \"Dropsite.sol\":4156:4164  Silver++ */\n      tag_198\n      dup4\n      tag_113\n      jump\t// in\n    tag_198:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Dropsite.sol\":4224:4248  Strings.toString(Silver) */\n      tag_199\n        /* \"Dropsite.sol\":4241:4247  Silver */\n      sload(0x08)\n        /* \"Dropsite.sol\":4224:4240  Strings.toString */\n      tag_182\n        /* \"Dropsite.sol\":4224:4248  Strings.toString(Silver) */\n      jump\t// in\n    tag_199:\n        /* \"Dropsite.sol\":4197:4249  abi.encodePacked(\"Silver_\",Strings.toString(Silver)) */\n      add(0x20, mload(0x40))\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":4183:4187  data */\n      0x02\n        /* \"Dropsite.sol\":4183:4250  data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver))) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_202:\n        /* \"Dropsite.sol\":4178:4182  data */\n      0x02\n        /* \"Dropsite.sol\":4178:4250  data=data = string(abi.encodePacked(\"Silver_\",Strings.toString(Silver))) */\n      swap1\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_106\n      jump\t// in\n    tag_203:\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n        /* \"Dropsite.sol\":4110:4905  if(nftId <= 2 && Silver <= 850) {... */\n    tag_197:\n        /* \"Dropsite.sol\":4487:4490  100 */\n      0x64\n        /* \"Dropsite.sol\":4480:4484  Gold */\n      sload(0x07)\n        /* \"Dropsite.sol\":4480:4490  Gold < 100 */\n      lt\n        /* \"Dropsite.sol\":4477:4896  if(Gold < 100) {... */\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"Dropsite.sol\":4537:4541  Gold */\n      0x07\n        /* \"Dropsite.sol\":4537:4543  Gold++ */\n      dup1\n      sload\n        /* \"Dropsite.sol\":4518:4519  1 */\n      0x01\n      swap2\n        /* \"Dropsite.sol\":4537:4541  Gold */\n      0x00\n        /* \"Dropsite.sol\":4537:4543  Gold++ */\n      tag_190\n      dup4\n      tag_113\n      jump\t// in\n        /* \"Dropsite.sol\":4477:4896  if(Gold < 100) {... */\n    tag_207:\n      pop\n        /* \"Dropsite.sol\":4738:4745  Diamond */\n      0x06\n        /* \"Dropsite.sol\":4738:4747  Diamond++ */\n      dup1\n      sload\n        /* \"Dropsite.sol\":4719:4720  0 */\n      0x00\n      swap2\n      dup3\n        /* \"Dropsite.sol\":4738:4747  Diamond++ */\n      tag_180\n      dup4\n      tag_113\n      jump\t// in\n        /* \"ERC1155_Dropsite.sol\":835:1387  function _mint(... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":983:999  to != address(0) */\n      dup5\n      and\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8038:8040   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8020:8041   */\n      mstore\n        /* \"#utility.yul\":8077:8079   */\n      0x21\n        /* \"#utility.yul\":8057:8075   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8050:8080   */\n      mstore\n        /* \"#utility.yul\":8116:8150   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":8096:8114   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8089:8151   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8167:8185   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8160:8191   */\n      mstore\n        /* \"#utility.yul\":8208:8227   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_69\n        /* \"#utility.yul\":7836:8233   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":975:1037  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_218:\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC1155_Dropsite.sol\":1090:1192  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_222\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1048:1064  address operator */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1133:1135  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1137:1158  _asSingletonArray(id) */\n      tag_223\n        /* \"ERC1155_Dropsite.sol\":1155:1157  id */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1137:1154  _asSingletonArray */\n      tag_224\n        /* \"ERC1155_Dropsite.sol\":1137:1158  _asSingletonArray(id) */\n      jump\t// in\n    tag_223:\n        /* \"ERC1155_Dropsite.sol\":1160:1185  _asSingletonArray(amount) */\n      tag_225\n        /* \"ERC1155_Dropsite.sol\":1178:1184  amount */\n      dup9\n        /* \"ERC1155_Dropsite.sol\":1160:1177  _asSingletonArray */\n      tag_224\n        /* \"ERC1155_Dropsite.sol\":1160:1185  _asSingletonArray(amount) */\n      jump\t// in\n    tag_225:\n        /* \"ERC1155_Dropsite.sol\":1394:1609  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"ERC1155_Dropsite.sol\":1090:1192  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_222:\n        /* \"ERC1155_Dropsite.sol\":1202:1211  _balances */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1202:1215  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1202:1219  _balances[id][to] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"ERC1155_Dropsite.sol\":1202:1229  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"ERC1155_Dropsite.sol\":1223:1229  amount */\n      dup6\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1202:1211  _balances */\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1202:1229  _balances[id][to] += amount */\n      tag_227\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1223:1229  amount */\n      dup5\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1202:1229  _balances[id][to] += amount */\n      tag_228\n      jump\t// in\n    tag_227:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8890:8915   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8946:8948   */\n      0x20\n        /* \"#utility.yul\":8931:8949   */\n      dup2\n      add\n        /* \"#utility.yul\":8924:8958   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup9\n      and\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1277:1278  0 */\n      0x00\n      swap3\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":8863:8881   */\n      add\n        /* \"ERC1155_Dropsite.sol\":1244:1296  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155_Dropsite.sol\":1306:1380  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_225\n        /* \"ERC1155_Dropsite.sol\":1337:1345  operator */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":1355:1356  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":1359:1361  to */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1363:1365  id */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1367:1373  amount */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1375:1379  data */\n      dup8\n        /* \"ERC1155_Dropsite.sol\":1306:1336  _doSafeTransferAcceptanceCheck */\n      tag_232\n        /* \"ERC1155_Dropsite.sol\":1306:1380  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n        /* \"Dropsite.sol\":5448:5567  function depositAmount(address payee,uint amountToDeposit) internal {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Dropsite.sol\":5526:5541  deposits[payee] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Dropsite.sol\":5526:5534  deposits */\n      0x0a\n        /* \"Dropsite.sol\":5526:5541  deposits[payee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Dropsite.sol\":5526:5560  deposits[payee] += amountToDeposit */\n      dup1\n      sload\n        /* \"Dropsite.sol\":5545:5560  amountToDeposit */\n      dup4\n      swap3\n        /* \"Dropsite.sol\":5526:5541  deposits[payee] */\n      swap1\n        /* \"Dropsite.sol\":5526:5560  deposits[payee] += amountToDeposit */\n      tag_234\n      swap1\n        /* \"Dropsite.sol\":5545:5560  amountToDeposit */\n      dup5\n      swap1\n        /* \"Dropsite.sol\":5526:5560  deposits[payee] += amountToDeposit */\n      tag_228\n      jump\t// in\n    tag_234:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Dropsite.sol\":5448:5567  function depositAmount(address payee,uint amountToDeposit) internal {... */\n      jump\t// out\n        /* \"Dropsite.sol\":2941:3137  function random() internal view returns (uint) {... */\n    tag_173:\n        /* \"Dropsite.sol\":2982:2986  uint */\n      0x00\n        /* \"Dropsite.sol\":3018:3035  uint randomnumber */\n      dup1\n        /* \"Dropsite.sol\":3103:3105  20 */\n      0x14\n        /* \"Dropsite.sol\":3070:3085  block.timestamp */\n      timestamp\n        /* \"Dropsite.sol\":3087:3097  msg.sender */\n      caller\n        /* \"Dropsite.sol\":3053:3098  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_236\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2527:2546   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2584:2586   */\n      0x60\n        /* \"#utility.yul\":2580:2595   */\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":2576:2629   */\n      and\n        /* \"#utility.yul\":2571:2573   */\n      0x20\n        /* \"#utility.yul\":2562:2574   */\n      dup3\n      add\n        /* \"#utility.yul\":2555:2630   */\n      mstore\n        /* \"#utility.yul\":2655:2657   */\n      0x34\n        /* \"#utility.yul\":2646:2658   */\n      add\n      swap1\n        /* \"#utility.yul\":2370:2664   */\n      jump\n        /* \"Dropsite.sol\":3053:3098  abi.encodePacked(block.timestamp, msg.sender) */\n    tag_236:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dropsite.sol\":3043:3099  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Dropsite.sol\":3038:3100  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"Dropsite.sol\":3038:3105  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20 */\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"Dropsite.sol\":3018:3105  uint randomnumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 20 */\n      swap3\n        /* \"Dropsite.sol\":2941:3137  function random() internal view returns (uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Strings.sol\":329:1032  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_182:\n        /* \"Strings.sol\":385:398  string memory */\n      0x60\n        /* \"Strings.sol\":602:612  value == 0 */\n      dup2\n        /* \"Strings.sol\":598:649  if (value == 0) {... */\n      tag_241\n      jumpi\n      pop\n      pop\n        /* \"Strings.sol\":628:638  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"Strings.sol\":329:1032  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"Strings.sol\":598:649  if (value == 0) {... */\n    tag_241:\n        /* \"Strings.sol\":673:678  value */\n      dup2\n        /* \"Strings.sol\":658:670  uint256 temp */\n      0x00\n        /* \"Strings.sol\":712:787  while (temp != 0) {... */\n    tag_242:\n        /* \"Strings.sol\":719:728  temp != 0 */\n      dup2\n      iszero\n        /* \"Strings.sol\":712:787  while (temp != 0) {... */\n      tag_243\n      jumpi\n        /* \"Strings.sol\":744:752  digits++ */\n      dup1\n      tag_244\n      dup2\n      tag_113\n      jump\t// in\n    tag_244:\n      swap2\n      pop\n        /* \"Strings.sol\":766:776  temp /= 10 */\n      tag_245\n      swap1\n      pop\n        /* \"Strings.sol\":774:776  10 */\n      0x0a\n        /* \"Strings.sol\":766:776  temp /= 10 */\n      dup4\n      tag_246\n      jump\t// in\n    tag_245:\n      swap2\n      pop\n        /* \"Strings.sol\":712:787  while (temp != 0) {... */\n      jump(tag_242)\n    tag_243:\n        /* \"Strings.sol\":796:815  bytes memory buffer */\n      0x00\n        /* \"Strings.sol\":828:834  digits */\n      dup2\n        /* \"Strings.sol\":818:835  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_250:\n      pop\n        /* \"Strings.sol\":796:835  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"Strings.sol\":845:995  while (value != 0) {... */\n    tag_251:\n        /* \"Strings.sol\":852:862  value != 0 */\n      dup5\n      iszero\n        /* \"Strings.sol\":845:995  while (value != 0) {... */\n      tag_252\n      jumpi\n        /* \"Strings.sol\":878:889  digits -= 1 */\n      tag_253\n        /* \"Strings.sol\":888:889  1 */\n      0x01\n        /* \"Strings.sol\":878:889  digits -= 1 */\n      dup4\n      tag_254\n      jump\t// in\n    tag_253:\n      swap2\n      pop\n        /* \"Strings.sol\":946:956  value % 10 */\n      tag_255\n        /* \"Strings.sol\":954:956  10 */\n      0x0a\n        /* \"Strings.sol\":946:951  value */\n      dup7\n        /* \"Strings.sol\":946:956  value % 10 */\n      tag_239\n      jump\t// in\n    tag_255:\n        /* \"Strings.sol\":933:957  48 + uint256(value % 10) */\n      tag_256\n      swap1\n        /* \"Strings.sol\":933:935  48 */\n      0x30\n        /* \"Strings.sol\":933:957  48 + uint256(value % 10) */\n      tag_228\n      jump\t// in\n    tag_256:\n        /* \"Strings.sol\":920:959  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"Strings.sol\":903:909  buffer */\n      dup2\n        /* \"Strings.sol\":910:916  digits */\n      dup4\n        /* \"Strings.sol\":903:917  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_176\n      jump\t// in\n    tag_258:\n      0x20\n      add\n      add\n        /* \"Strings.sol\":903:959  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Strings.sol\":973:984  value /= 10 */\n      tag_259\n        /* \"Strings.sol\":982:984  10 */\n      0x0a\n        /* \"Strings.sol\":973:984  value /= 10 */\n      dup7\n      tag_246\n      jump\t// in\n    tag_259:\n      swap5\n      pop\n        /* \"Strings.sol\":845:995  while (value != 0) {... */\n      jump(tag_251)\n    tag_252:\n        /* \"Strings.sol\":1018:1024  buffer */\n      swap5\n        /* \"Strings.sol\":329:1032  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":2347:2540  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_224:\n        /* \"ERC1155_Dropsite.sol\":2466:2482  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"ERC1155_Dropsite.sol\":2480:2481  1 */\n      0x01\n        /* \"ERC1155_Dropsite.sol\":2466:2482  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"ERC1155_Dropsite.sol\":2413:2429  uint256[] memory */\n      0x60\n      swap2\n        /* \"ERC1155_Dropsite.sol\":2441:2463  uint256[] memory array */\n      0x00\n      swap2\n        /* \"ERC1155_Dropsite.sol\":2466:2482  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ERC1155_Dropsite.sol\":2441:2482  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155_Dropsite.sol\":2503:2510  element */\n      dup3\n        /* \"ERC1155_Dropsite.sol\":2492:2497  array */\n      dup2\n        /* \"ERC1155_Dropsite.sol\":2498:2499  0 */\n      0x00\n        /* \"ERC1155_Dropsite.sol\":2492:2500  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_265\n      tag_176\n      jump\t// in\n    tag_265:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ERC1155_Dropsite.sol\":2492:2510  array[0] = element */\n      mstore\n        /* \"ERC1155_Dropsite.sol\":2528:2533  array */\n      swap3\n        /* \"ERC1155_Dropsite.sol\":2347:2540  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1394:1609  function _beforeTokenTransfer(... */\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155_Dropsite.sol\":1615:2341  function _doSafeTransferAcceptanceCheck(... */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1823:1836  to.isContract */\n      dup5\n      and\n        /* \"Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"ERC1155_Dropsite.sol\":1819:2335  if (to.isContract()) {... */\n      tag_226\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":1858:1930  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe3, 0x15d13449)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1155_Dropsite.sol\":1858:1896  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xae89a248\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1858:1930  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_271\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1897:1905  operator */\n      dup10\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1907:1911  from */\n      dup10\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1913:1915  id */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1917:1923  amount */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1925:1929  data */\n      dup9\n      swap1\n        /* \"ERC1155_Dropsite.sol\":1858:1930  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_272\n      jump\t// in\n    tag_271:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_275\n      swap2\n      dup2\n      add\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      0x01\n    tag_274:\n        /* \"ERC1155_Dropsite.sol\":1854:2325  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_277\n      jumpi\n      tag_281\n      tag_282\n      jump\t// in\n    tag_281:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_280\n      jumpi\n      pop\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n      dup1\n      tag_285\n      jumpi\n      pop\n      jump(tag_279)\n    tag_285:\n        /* \"ERC1155_Dropsite.sol\":2201:2207  reason */\n      dup1\n        /* \"ERC1155_Dropsite.sol\":2194:2208  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n        /* \"ERC1155_Dropsite.sol\":1854:2325  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_280:\n      pop\n    tag_279:\n        /* \"ERC1155_Dropsite.sol\":2248:2310  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4717:4719   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":2248:2310  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4699:4720   */\n      mstore\n        /* \"#utility.yul\":4756:4758   */\n      0x34\n        /* \"#utility.yul\":4736:4754   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4729:4759   */\n      mstore\n        /* \"#utility.yul\":4795:4829   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":4775:4793   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4768:4830   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":4846:4864   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4839:4889   */\n      mstore\n        /* \"#utility.yul\":4906:4925   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":2248:2310  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_69\n        /* \"#utility.yul\":4515:4931   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":1854:2325  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_277:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"ERC1155_Dropsite.sol\":1979:2034  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe3, 0x15d13449)\n      eq\n        /* \"ERC1155_Dropsite.sol\":1975:2127  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_291\n      jumpi\n        /* \"ERC1155_Dropsite.sol\":2058:2108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5138:5140   */\n      0x20\n        /* \"ERC1155_Dropsite.sol\":2058:2108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5120:5141   */\n      mstore\n        /* \"#utility.yul\":5177:5179   */\n      0x28\n        /* \"#utility.yul\":5157:5175   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5150:5180   */\n      mstore\n        /* \"#utility.yul\":5216:5250   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":5196:5214   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5189:5251   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":5267:5285   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5260:5298   */\n      mstore\n        /* \"#utility.yul\":5315:5334   */\n      0x84\n      add\n        /* \"ERC1155_Dropsite.sol\":2058:2108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_69\n        /* \"#utility.yul\":4936:5340   */\n      jump\n        /* \"ERC1155_Dropsite.sol\":1975:2127  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_291:\n        /* \"ERC1155_Dropsite.sol\":1931:2141  returns (bytes4 response) {... */\n      pop\n        /* \"ERC1155_Dropsite.sol\":1615:2341  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_186:\n      dup3\n      dup1\n      sload\n      tag_295\n      swap1\n      tag_106\n      jump\t// in\n    tag_295:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_297\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_300)\n    tag_297:\n      dup3\n      0x1f\n      lt\n      tag_298\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_300)\n    tag_298:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_300\n      jumpi\n      swap2\n      dup3\n      add\n    tag_299:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_299)\n    tag_300:\n      pop\n      tag_301\n      swap3\n      swap2\n      pop\n      tag_302\n      jump\t// in\n    tag_301:\n      pop\n      swap1\n      jump\t// out\n    tag_205:\n      dup3\n      dup1\n      sload\n      tag_303\n      swap1\n      tag_106\n      jump\t// in\n    tag_303:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_305\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_300)\n    tag_305:\n      dup3\n      0x1f\n      lt\n      tag_306\n      jumpi\n      dup1\n      sload\n      dup6\n      sstore\n      jump(tag_300)\n    tag_306:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_300\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap2\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup3\n      add\n    tag_307:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      dup3\n      sload\n      dup3\n      sstore\n      swap2\n      0x01\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_307)\n    tag_302:\n    tag_310:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_301\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_310)\n        /* \"#utility.yul\":14:261   */\n    tag_34:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_314:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_315\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":14:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":526:816   */\n    tag_276:\n        /* \"#utility.yul\":595:601   */\n      0x00\n        /* \"#utility.yul\":648:650   */\n      0x20\n        /* \"#utility.yul\":636:645   */\n      dup3\n        /* \"#utility.yul\":627:634   */\n      dup5\n        /* \"#utility.yul\":623:646   */\n      sub\n        /* \"#utility.yul\":619:651   */\n      slt\n        /* \"#utility.yul\":616:668   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":661:662   */\n      dup1\n        /* \"#utility.yul\":654:666   */\n      revert\n        /* \"#utility.yul\":616:668   */\n    tag_321:\n        /* \"#utility.yul\":690:706   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":735:767   */\n      dup2\n      and\n        /* \"#utility.yul\":725:768   */\n      dup2\n      eq\n        /* \"#utility.yul\":715:786   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":782:783   */\n      0x00\n        /* \"#utility.yul\":779:780   */\n      dup1\n        /* \"#utility.yul\":772:784   */\n      revert\n        /* \"#utility.yul\":821:1079   */\n    tag_323:\n        /* \"#utility.yul\":863:866   */\n      0x00\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":895:907   */\n      mload\n        /* \"#utility.yul\":928:934   */\n      dup1\n        /* \"#utility.yul\":923:926   */\n      dup5\n        /* \"#utility.yul\":916:935   */\n      mstore\n        /* \"#utility.yul\":944:1007   */\n      tag_325\n        /* \"#utility.yul\":1000:1006   */\n      dup2\n        /* \"#utility.yul\":993:997   */\n      0x20\n        /* \"#utility.yul\":988:991   */\n      dup7\n        /* \"#utility.yul\":984:998   */\n      add\n        /* \"#utility.yul\":977:981   */\n      0x20\n        /* \"#utility.yul\":970:975   */\n      dup7\n        /* \"#utility.yul\":966:982   */\n      add\n        /* \"#utility.yul\":944:1007   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1061:1063   */\n      0x1f\n        /* \"#utility.yul\":1040:1055   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1036:1065   */\n      and\n        /* \"#utility.yul\":1027:1066   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1068:1072   */\n      0x20\n        /* \"#utility.yul\":1023:1073   */\n      add\n      swap3\n        /* \"#utility.yul\":821:1079   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1084:1509   */\n    tag_184:\n      shl(0xc0, 0x4469616d6f6e645f)\n        /* \"#utility.yul\":1341:1344   */\n      dup2\n        /* \"#utility.yul\":1334:1357   */\n      mstore\n        /* \"#utility.yul\":1316:1319   */\n      0x00\n        /* \"#utility.yul\":1386:1392   */\n      dup3\n        /* \"#utility.yul\":1380:1393   */\n      mload\n        /* \"#utility.yul\":1402:1463   */\n      tag_328\n        /* \"#utility.yul\":1456:1462   */\n      dup2\n        /* \"#utility.yul\":1452:1453   */\n      0x08\n        /* \"#utility.yul\":1447:1450   */\n      dup6\n        /* \"#utility.yul\":1443:1454   */\n      add\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1428:1434   */\n      dup8\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1402:1463   */\n      tag_326\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1483:1499   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1501:1502   */\n      0x08\n        /* \"#utility.yul\":1479:1503   */\n      add\n      swap3\n        /* \"#utility.yul\":1084:1509   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1936   */\n    tag_193:\n      shl(0xd8, 0x476f6c645f)\n        /* \"#utility.yul\":1771:1774   */\n      dup2\n        /* \"#utility.yul\":1764:1784   */\n      mstore\n        /* \"#utility.yul\":1746:1749   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup3\n        /* \"#utility.yul\":1807:1820   */\n      mload\n        /* \"#utility.yul\":1829:1890   */\n      tag_330\n        /* \"#utility.yul\":1883:1889   */\n      dup2\n        /* \"#utility.yul\":1879:1880   */\n      0x05\n        /* \"#utility.yul\":1874:1877   */\n      dup6\n        /* \"#utility.yul\":1870:1881   */\n      add\n        /* \"#utility.yul\":1863:1867   */\n      0x20\n        /* \"#utility.yul\":1855:1861   */\n      dup8\n        /* \"#utility.yul\":1851:1868   */\n      add\n        /* \"#utility.yul\":1829:1890   */\n      tag_326\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1910:1926   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1928:1929   */\n      0x05\n        /* \"#utility.yul\":1906:1930   */\n      add\n      swap3\n        /* \"#utility.yul\":1514:1936   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2365   */\n    tag_201:\n      shl(0xc8, 0x53696c7665725f)\n        /* \"#utility.yul\":2198:2201   */\n      dup2\n        /* \"#utility.yul\":2191:2213   */\n      mstore\n        /* \"#utility.yul\":2173:2176   */\n      0x00\n        /* \"#utility.yul\":2242:2248   */\n      dup3\n        /* \"#utility.yul\":2236:2249   */\n      mload\n        /* \"#utility.yul\":2258:2319   */\n      tag_332\n        /* \"#utility.yul\":2312:2318   */\n      dup2\n        /* \"#utility.yul\":2308:2309   */\n      0x07\n        /* \"#utility.yul\":2303:2306   */\n      dup6\n        /* \"#utility.yul\":2299:2310   */\n      add\n        /* \"#utility.yul\":2292:2296   */\n      0x20\n        /* \"#utility.yul\":2284:2290   */\n      dup8\n        /* \"#utility.yul\":2280:2297   */\n      add\n        /* \"#utility.yul\":2258:2319   */\n      tag_326\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2339:2355   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2357:2358   */\n      0x07\n        /* \"#utility.yul\":2335:2359   */\n      add\n      swap3\n        /* \"#utility.yul\":1941:2365   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3456   */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3192:3207   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":3174:3208   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3244:3259   */\n      dup6\n      and\n        /* \"#utility.yul\":3239:3241   */\n      0x20\n        /* \"#utility.yul\":3224:3242   */\n      dup3\n      add\n        /* \"#utility.yul\":3217:3260   */\n      mstore\n        /* \"#utility.yul\":3291:3293   */\n      0x40\n        /* \"#utility.yul\":3276:3294   */\n      dup2\n      add\n        /* \"#utility.yul\":3269:3303   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3334:3336   */\n      0x60\n        /* \"#utility.yul\":3319:3337   */\n      dup2\n      add\n        /* \"#utility.yul\":3312:3346   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3154:3157   */\n      0xa0\n        /* \"#utility.yul\":3377:3380   */\n      0x80\n        /* \"#utility.yul\":3362:3381   */\n      dup3\n      add\n        /* \"#utility.yul\":3355:3387   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3117:3121   */\n      0x00\n      swap1\n        /* \"#utility.yul\":3404:3450   */\n      tag_336\n      swap1\n        /* \"#utility.yul\":3430:3449   */\n      dup4\n      add\n        /* \"#utility.yul\":3422:3428   */\n      dup5\n        /* \"#utility.yul\":3404:3450   */\n      tag_323\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3396:3450   */\n      swap8\n        /* \"#utility.yul\":2893:3456   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:4093   */\n    tag_64:\n        /* \"#utility.yul\":3632:3634   */\n      0x20\n        /* \"#utility.yul\":3684:3705   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3754:3767   */\n      dup3\n      mload\n        /* \"#utility.yul\":3657:3675   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3776:3798   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3603:3607   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3632:3634   */\n      swap1\n        /* \"#utility.yul\":3855:3870   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3829:3831   */\n      0x40\n        /* \"#utility.yul\":3814:3832   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3603:3607   */\n      dup5\n        /* \"#utility.yul\":3898:4067   */\n    tag_338:\n        /* \"#utility.yul\":3912:3918   */\n      dup2\n        /* \"#utility.yul\":3909:3910   */\n      dup2\n        /* \"#utility.yul\":3906:3919   */\n      lt\n        /* \"#utility.yul\":3898:4067   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3973:3986   */\n      dup4\n      mload\n        /* \"#utility.yul\":3961:3987   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4042:4057   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4007:4019   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3934:3935   */\n      0x01\n        /* \"#utility.yul\":3927:3936   */\n      add\n        /* \"#utility.yul\":3898:4067   */\n      jump(tag_338)\n    tag_340:\n      pop\n        /* \"#utility.yul\":4084:4087   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3461:4093   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4290:4510   */\n    tag_287:\n        /* \"#utility.yul\":4439:4441   */\n      0x20\n        /* \"#utility.yul\":4428:4437   */\n      dup2\n        /* \"#utility.yul\":4421:4442   */\n      mstore\n        /* \"#utility.yul\":4402:4406   */\n      0x00\n        /* \"#utility.yul\":4459:4504   */\n      tag_315\n        /* \"#utility.yul\":4500:4502   */\n      0x20\n        /* \"#utility.yul\":4489:4498   */\n      dup4\n        /* \"#utility.yul\":4485:4503   */\n      add\n        /* \"#utility.yul\":4477:4483   */\n      dup5\n        /* \"#utility.yul\":4459:4504   */\n      tag_323\n      jump\t// in\n        /* \"#utility.yul\":6411:6763   */\n    tag_70:\n        /* \"#utility.yul\":6613:6615   */\n      0x20\n        /* \"#utility.yul\":6595:6616   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6652:6654   */\n      0x1c\n        /* \"#utility.yul\":6632:6650   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6625:6655   */\n      mstore\n        /* \"#utility.yul\":6691:6721   */\n      0x4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000\n        /* \"#utility.yul\":6686:6688   */\n      0x40\n        /* \"#utility.yul\":6671:6689   */\n      dup3\n      add\n        /* \"#utility.yul\":6664:6722   */\n      mstore\n        /* \"#utility.yul\":6754:6756   */\n      0x60\n        /* \"#utility.yul\":6739:6757   */\n      add\n      swap1\n        /* \"#utility.yul\":6411:6763   */\n      jump\t// out\n        /* \"#utility.yul\":6768:7119   */\n    tag_97:\n        /* \"#utility.yul\":6970:6972   */\n      0x20\n        /* \"#utility.yul\":6952:6973   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7009:7011   */\n      0x1b\n        /* \"#utility.yul\":6989:7007   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6982:7012   */\n      mstore\n        /* \"#utility.yul\":7048:7077   */\n      0x44726f7073697465206973206e6f74204f70656e6564205965742e0000000000\n        /* \"#utility.yul\":7043:7045   */\n      0x40\n        /* \"#utility.yul\":7028:7046   */\n      dup3\n      add\n        /* \"#utility.yul\":7021:7078   */\n      mstore\n        /* \"#utility.yul\":7110:7112   */\n      0x60\n        /* \"#utility.yul\":7095:7113   */\n      add\n      swap1\n        /* \"#utility.yul\":6768:7119   */\n      jump\t// out\n        /* \"#utility.yul\":8420:8711   */\n    tag_37:\n        /* \"#utility.yul\":8597:8603   */\n      dup3\n        /* \"#utility.yul\":8586:8595   */\n      dup2\n        /* \"#utility.yul\":8579:8604   */\n      mstore\n        /* \"#utility.yul\":8640:8642   */\n      0x40\n        /* \"#utility.yul\":8635:8637   */\n      0x20\n        /* \"#utility.yul\":8624:8633   */\n      dup3\n        /* \"#utility.yul\":8620:8638   */\n      add\n        /* \"#utility.yul\":8613:8643   */\n      mstore\n        /* \"#utility.yul\":8560:8564   */\n      0x00\n        /* \"#utility.yul\":8660:8705   */\n      tag_252\n        /* \"#utility.yul\":8701:8703   */\n      0x40\n        /* \"#utility.yul\":8690:8699   */\n      dup4\n        /* \"#utility.yul\":8686:8704   */\n      add\n        /* \"#utility.yul\":8678:8684   */\n      dup5\n        /* \"#utility.yul\":8660:8705   */\n      tag_323\n      jump\t// in\n        /* \"#utility.yul\":9293:9421   */\n    tag_228:\n        /* \"#utility.yul\":9333:9336   */\n      0x00\n        /* \"#utility.yul\":9364:9365   */\n      dup3\n        /* \"#utility.yul\":9360:9366   */\n      not\n        /* \"#utility.yul\":9357:9358   */\n      dup3\n        /* \"#utility.yul\":9354:9367   */\n      gt\n        /* \"#utility.yul\":9351:9390   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":9370:9388   */\n      tag_361\n      tag_362\n      jump\t// in\n    tag_361:\n      pop\n        /* \"#utility.yul\":9406:9415   */\n      add\n      swap1\n        /* \"#utility.yul\":9293:9421   */\n      jump\t// out\n        /* \"#utility.yul\":9426:9546   */\n    tag_246:\n        /* \"#utility.yul\":9466:9467   */\n      0x00\n        /* \"#utility.yul\":9492:9493   */\n      dup3\n        /* \"#utility.yul\":9482:9517   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":9497:9515   */\n      tag_365\n      tag_366\n      jump\t// in\n    tag_365:\n      pop\n        /* \"#utility.yul\":9531:9540   */\n      div\n      swap1\n        /* \"#utility.yul\":9426:9546   */\n      jump\t// out\n        /* \"#utility.yul\":9551:9676   */\n    tag_254:\n        /* \"#utility.yul\":9591:9595   */\n      0x00\n        /* \"#utility.yul\":9619:9620   */\n      dup3\n        /* \"#utility.yul\":9616:9617   */\n      dup3\n        /* \"#utility.yul\":9613:9621   */\n      lt\n        /* \"#utility.yul\":9610:9644   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":9624:9642   */\n      tag_369\n      tag_362\n      jump\t// in\n    tag_369:\n      pop\n        /* \"#utility.yul\":9661:9670   */\n      sub\n      swap1\n        /* \"#utility.yul\":9551:9676   */\n      jump\t// out\n        /* \"#utility.yul\":9681:9939   */\n    tag_326:\n        /* \"#utility.yul\":9753:9754   */\n      0x00\n        /* \"#utility.yul\":9763:9876   */\n    tag_371:\n        /* \"#utility.yul\":9777:9783   */\n      dup4\n        /* \"#utility.yul\":9774:9775   */\n      dup2\n        /* \"#utility.yul\":9771:9784   */\n      lt\n        /* \"#utility.yul\":9763:9876   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9853:9864   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9847:9865   */\n      mload\n        /* \"#utility.yul\":9834:9845   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9827:9866   */\n      mstore\n        /* \"#utility.yul\":9799:9801   */\n      0x20\n        /* \"#utility.yul\":9792:9802   */\n      add\n        /* \"#utility.yul\":9763:9876   */\n      jump(tag_371)\n    tag_373:\n        /* \"#utility.yul\":9894:9900   */\n      dup4\n        /* \"#utility.yul\":9891:9892   */\n      dup2\n        /* \"#utility.yul\":9888:9901   */\n      gt\n        /* \"#utility.yul\":9885:9933   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":9929:9930   */\n      0x00\n        /* \"#utility.yul\":9920:9926   */\n      dup5\n        /* \"#utility.yul\":9915:9918   */\n      dup5\n        /* \"#utility.yul\":9911:9927   */\n      add\n        /* \"#utility.yul\":9904:9931   */\n      mstore\n        /* \"#utility.yul\":9885:9933   */\n    tag_374:\n      pop\n        /* \"#utility.yul\":9681:9939   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10324   */\n    tag_106:\n        /* \"#utility.yul\":10023:10024   */\n      0x01\n        /* \"#utility.yul\":10019:10031   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":10066:10078   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":10087:10148   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":10141:10145   */\n      0x7f\n        /* \"#utility.yul\":10133:10139   */\n      dup3\n        /* \"#utility.yul\":10129:10146   */\n      and\n        /* \"#utility.yul\":10119:10146   */\n      swap2\n      pop\n        /* \"#utility.yul\":10087:10148   */\n    tag_376:\n        /* \"#utility.yul\":10194:10196   */\n      0x20\n        /* \"#utility.yul\":10186:10192   */\n      dup3\n        /* \"#utility.yul\":10183:10197   */\n      lt\n        /* \"#utility.yul\":10163:10181   */\n      dup2\n        /* \"#utility.yul\":10160:10198   */\n      eq\n        /* \"#utility.yul\":10157:10318   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10240:10250   */\n      0x4e487b71\n        /* \"#utility.yul\":10235:10238   */\n      0xe0\n        /* \"#utility.yul\":10231:10251   */\n      shl\n        /* \"#utility.yul\":10228:10229   */\n      0x00\n        /* \"#utility.yul\":10221:10252   */\n      mstore\n        /* \"#utility.yul\":10275:10279   */\n      0x22\n        /* \"#utility.yul\":10272:10273   */\n      0x04\n        /* \"#utility.yul\":10265:10280   */\n      mstore\n        /* \"#utility.yul\":10303:10307   */\n      0x24\n        /* \"#utility.yul\":10300:10301   */\n      0x00\n        /* \"#utility.yul\":10293:10308   */\n      revert\n        /* \"#utility.yul\":10157:10318   */\n    tag_377:\n      pop\n        /* \"#utility.yul\":9944:10324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10329:10675   */\n    tag_378:\n        /* \"#utility.yul\":10439:10441   */\n      0x1f\n        /* \"#utility.yul\":10420:10433   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10416:10443   */\n      and\n        /* \"#utility.yul\":10404:10444   */\n      dup2\n      add\n        /* \"#utility.yul\":10474:10492   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10459:10493   */\n      dup2\n      gt\n        /* \"#utility.yul\":10495:10517   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":10456:10518   */\n      or\n        /* \"#utility.yul\":10453:10638   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":10560:10570   */\n      0x4e487b71\n        /* \"#utility.yul\":10555:10558   */\n      0xe0\n        /* \"#utility.yul\":10551:10571   */\n      shl\n        /* \"#utility.yul\":10548:10549   */\n      0x00\n        /* \"#utility.yul\":10541:10572   */\n      mstore\n        /* \"#utility.yul\":10595:10599   */\n      0x41\n        /* \"#utility.yul\":10592:10593   */\n      0x04\n        /* \"#utility.yul\":10585:10600   */\n      mstore\n        /* \"#utility.yul\":10623:10627   */\n      0x24\n        /* \"#utility.yul\":10620:10621   */\n      0x00\n        /* \"#utility.yul\":10613:10628   */\n      revert\n        /* \"#utility.yul\":10453:10638   */\n    tag_380:\n        /* \"#utility.yul\":10654:10656   */\n      0x40\n        /* \"#utility.yul\":10647:10669   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":10329:10675   */\n      jump\t// out\n        /* \"#utility.yul\":10680:10815   */\n    tag_113:\n        /* \"#utility.yul\":10719:10722   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10740:10757   */\n      dup3\n      eq\n        /* \"#utility.yul\":10737:10780   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":10760:10778   */\n      tag_383\n      tag_362\n      jump\t// in\n    tag_383:\n      pop\n        /* \"#utility.yul\":10807:10808   */\n      0x01\n        /* \"#utility.yul\":10796:10809   */\n      add\n      swap1\n        /* \"#utility.yul\":10680:10815   */\n      jump\t// out\n        /* \"#utility.yul\":10820:10932   */\n    tag_239:\n        /* \"#utility.yul\":10852:10853   */\n      0x00\n        /* \"#utility.yul\":10878:10879   */\n      dup3\n        /* \"#utility.yul\":10868:10903   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":10883:10901   */\n      tag_386\n      tag_366\n      jump\t// in\n    tag_386:\n      pop\n        /* \"#utility.yul\":10917:10926   */\n      mod\n      swap1\n        /* \"#utility.yul\":10820:10932   */\n      jump\t// out\n        /* \"#utility.yul\":10937:11064   */\n    tag_362:\n        /* \"#utility.yul\":10998:11008   */\n      0x4e487b71\n        /* \"#utility.yul\":10993:10996   */\n      0xe0\n        /* \"#utility.yul\":10989:11009   */\n      shl\n        /* \"#utility.yul\":10986:10987   */\n      0x00\n        /* \"#utility.yul\":10979:11010   */\n      mstore\n        /* \"#utility.yul\":11029:11033   */\n      0x11\n        /* \"#utility.yul\":11026:11027   */\n      0x04\n        /* \"#utility.yul\":11019:11034   */\n      mstore\n        /* \"#utility.yul\":11053:11057   */\n      0x24\n        /* \"#utility.yul\":11050:11051   */\n      0x00\n        /* \"#utility.yul\":11043:11058   */\n      revert\n        /* \"#utility.yul\":11069:11196   */\n    tag_366:\n        /* \"#utility.yul\":11130:11140   */\n      0x4e487b71\n        /* \"#utility.yul\":11125:11128   */\n      0xe0\n        /* \"#utility.yul\":11121:11141   */\n      shl\n        /* \"#utility.yul\":11118:11119   */\n      0x00\n        /* \"#utility.yul\":11111:11142   */\n      mstore\n        /* \"#utility.yul\":11161:11165   */\n      0x12\n        /* \"#utility.yul\":11158:11159   */\n      0x04\n        /* \"#utility.yul\":11151:11166   */\n      mstore\n        /* \"#utility.yul\":11185:11189   */\n      0x24\n        /* \"#utility.yul\":11182:11183   */\n      0x00\n        /* \"#utility.yul\":11175:11190   */\n      revert\n        /* \"#utility.yul\":11201:11328   */\n    tag_176:\n        /* \"#utility.yul\":11262:11272   */\n      0x4e487b71\n        /* \"#utility.yul\":11257:11260   */\n      0xe0\n        /* \"#utility.yul\":11253:11273   */\n      shl\n        /* \"#utility.yul\":11250:11251   */\n      0x00\n        /* \"#utility.yul\":11243:11274   */\n      mstore\n        /* \"#utility.yul\":11293:11297   */\n      0x32\n        /* \"#utility.yul\":11290:11291   */\n      0x04\n        /* \"#utility.yul\":11283:11298   */\n      mstore\n        /* \"#utility.yul\":11317:11321   */\n      0x24\n        /* \"#utility.yul\":11314:11315   */\n      0x00\n        /* \"#utility.yul\":11307:11322   */\n      revert\n        /* \"#utility.yul\":11333:11460   */\n    tag_249:\n        /* \"#utility.yul\":11394:11404   */\n      0x4e487b71\n        /* \"#utility.yul\":11389:11392   */\n      0xe0\n        /* \"#utility.yul\":11385:11405   */\n      shl\n        /* \"#utility.yul\":11382:11383   */\n      0x00\n        /* \"#utility.yul\":11375:11406   */\n      mstore\n        /* \"#utility.yul\":11425:11429   */\n      0x41\n        /* \"#utility.yul\":11422:11423   */\n      0x04\n        /* \"#utility.yul\":11415:11430   */\n      mstore\n        /* \"#utility.yul\":11449:11453   */\n      0x24\n        /* \"#utility.yul\":11446:11447   */\n      0x00\n        /* \"#utility.yul\":11439:11454   */\n      revert\n        /* \"#utility.yul\":11465:11644   */\n    tag_282:\n        /* \"#utility.yul\":11500:11503   */\n      0x00\n        /* \"#utility.yul\":11542:11543   */\n      0x03\n        /* \"#utility.yul\":11524:11540   */\n      returndatasize\n        /* \"#utility.yul\":11521:11544   */\n      gt\n        /* \"#utility.yul\":11518:11638   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":11588:11589   */\n      0x04\n        /* \"#utility.yul\":11585:11586   */\n      0x00\n        /* \"#utility.yul\":11582:11583   */\n      dup1\n        /* \"#utility.yul\":11567:11590   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":11625:11626   */\n      0x00\n        /* \"#utility.yul\":11619:11627   */\n      mload\n        /* \"#utility.yul\":11614:11617   */\n      0xe0\n        /* \"#utility.yul\":11610:11628   */\n      shr\n        /* \"#utility.yul\":11465:11644   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11649:12320   */\n    tag_284:\n        /* \"#utility.yul\":11688:11691   */\n      0x00\n        /* \"#utility.yul\":11730:11734   */\n      0x44\n        /* \"#utility.yul\":11712:11728   */\n      returndatasize\n        /* \"#utility.yul\":11709:11735   */\n      lt\n        /* \"#utility.yul\":11706:11745   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":11649:12320   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11706:11745   */\n    tag_394:\n        /* \"#utility.yul\":11772:11774   */\n      0x40\n        /* \"#utility.yul\":11766:11775   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":11837:11853   */\n      returndatasize\n        /* \"#utility.yul\":11833:11858   */\n      dup2\n      add\n        /* \"#utility.yul\":11830:11831   */\n      0x04\n        /* \"#utility.yul\":11766:11775   */\n      dup4\n        /* \"#utility.yul\":11809:11859   */\n      returndatacopy\n        /* \"#utility.yul\":11888:11892   */\n      dup2\n        /* \"#utility.yul\":11882:11893   */\n      mload\n        /* \"#utility.yul\":11912:11928   */\n      returndatasize\n        /* \"#utility.yul\":11947:11965   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12018:12020   */\n      dup2\n        /* \"#utility.yul\":12011:12015   */\n      0x24\n        /* \"#utility.yul\":12003:12009   */\n      dup5\n        /* \"#utility.yul\":11999:12016   */\n      add\n        /* \"#utility.yul\":11996:12021   */\n      gt\n        /* \"#utility.yul\":11991:11993   */\n      dup2\n        /* \"#utility.yul\":11983:11989   */\n      dup5\n        /* \"#utility.yul\":11980:11994   */\n      gt\n        /* \"#utility.yul\":11977:12022   */\n      or\n        /* \"#utility.yul\":11974:12032   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":12025:12030   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11649:12320   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11974:12032   */\n    tag_395:\n        /* \"#utility.yul\":12062:12068   */\n      dup3\n        /* \"#utility.yul\":12056:12060   */\n      dup6\n        /* \"#utility.yul\":12052:12069   */\n      add\n        /* \"#utility.yul\":12041:12069   */\n      swap2\n      pop\n        /* \"#utility.yul\":12098:12101   */\n      dup2\n        /* \"#utility.yul\":12092:12102   */\n      mload\n        /* \"#utility.yul\":12125:12127   */\n      dup2\n        /* \"#utility.yul\":12117:12123   */\n      dup2\n        /* \"#utility.yul\":12114:12128   */\n      gt\n        /* \"#utility.yul\":12111:12138   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":12131:12136   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11649:12320   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12111:12138   */\n    tag_396:\n        /* \"#utility.yul\":12215:12217   */\n      dup5\n        /* \"#utility.yul\":12196:12212   */\n      returndatasize\n        /* \"#utility.yul\":12190:12194   */\n      dup8\n        /* \"#utility.yul\":12186:12213   */\n      add\n        /* \"#utility.yul\":12182:12218   */\n      add\n        /* \"#utility.yul\":12175:12179   */\n      0x20\n        /* \"#utility.yul\":12166:12172   */\n      dup3\n        /* \"#utility.yul\":12161:12164   */\n      dup6\n        /* \"#utility.yul\":12157:12173   */\n      add\n        /* \"#utility.yul\":12153:12180   */\n      add\n        /* \"#utility.yul\":12150:12219   */\n      gt\n        /* \"#utility.yul\":12147:12229   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":12222:12227   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11649:12320   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12147:12229   */\n    tag_397:\n        /* \"#utility.yul\":12238:12295   */\n      tag_398\n        /* \"#utility.yul\":12289:12293   */\n      0x20\n        /* \"#utility.yul\":12280:12286   */\n      dup3\n        /* \"#utility.yul\":12272:12278   */\n      dup7\n        /* \"#utility.yul\":12268:12287   */\n      add\n        /* \"#utility.yul\":12264:12294   */\n      add\n        /* \"#utility.yul\":12258:12262   */\n      dup8\n        /* \"#utility.yul\":12238:12295   */\n      tag_378\n      jump\t// in\n    tag_398:\n      pop\n        /* \"#utility.yul\":12311:12314   */\n      swap1\n      swap6\n        /* \"#utility.yul\":11649:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12325:12456   */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12400:12431   */\n      dup2\n      and\n        /* \"#utility.yul\":12390:12432   */\n      dup2\n      eq\n        /* \"#utility.yul\":12380:12450   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":12446:12447   */\n      0x00\n        /* \"#utility.yul\":12443:12444   */\n      dup1\n        /* \"#utility.yul\":12436:12448   */\n      revert\n        /* \"#utility.yul\":12380:12450   */\n    tag_400:\n        /* \"#utility.yul\":12325:12456   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220beaa33ab9fc5e1b7eab3f745dfa9316cd77b5213ba482cc3b30f7d47456edd5c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_458": {
									"entryPoint": null,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:9"
															},
															"nodeType": "YulIf",
															"src": "136:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:9"
															},
															"nodeType": "YulIf",
															"src": "273:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:9"
															},
															"nodeType": "YulIf",
															"src": "357:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:9"
															},
															"nodeType": "YulIf",
															"src": "449:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:9"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:9"
															},
															"nodeType": "YulIf",
															"src": "632:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:9"
															},
															"nodeType": "YulIf",
															"src": "771:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:9",
																"statements": []
															},
															"src": "852:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:9"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:9"
															},
															"nodeType": "YulIf",
															"src": "990:80:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:9",
														"type": ""
													}
												],
												"src": "14:1087:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:9"
															},
															"nodeType": "YulIf",
															"src": "1249:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:9"
															},
															"nodeType": "YulIf",
															"src": "1319:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:9",
														"type": ""
													}
												],
												"src": "1106:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040819052600060808190526200001b9160029162000159565b50604080516102808101825260008152600160208201819052918101919091526002606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082018190526101c082018190526101e08201819052610200820181905261022082018190526102408201819052610260820152620000ce906003906014620001e8565b50600b805460ff19166001179055348015620000e957600080fd5b5060405162001877380380620018778339810160408190526200010c916200028f565b80516200012190600c90602084019062000159565b5050600b8054610100600160a81b031916336101000217905560006004819055600160055560068190556007819055600855620003be565b82805462000167906200036b565b90600052602060002090601f0160209004810192826200018b5760008555620001d6565b82601f10620001a657805160ff1916838001178555620001d6565b82800160010185558215620001d6579182015b82811115620001d6578251825591602001919060010190620001b9565b50620001e492915062000278565b5090565b600183019183908215620001d65791602002820160005b838211156200023f57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302620001ff565b80156200026e5782816101000a81549060ff02191690556001016020816000010492830192600103026200023f565b5050620001e49291505b5b80821115620001e4576000815560010162000279565b60006020808385031215620002a357600080fd5b82516001600160401b0380821115620002bb57600080fd5b818501915085601f830112620002d057600080fd5b815181811115620002e557620002e5620003a8565b604051601f8201601f19908116603f01168101908382118183101715620003105762000310620003a8565b8160405282815288868487010111156200032957600080fd5b600093505b828410156200034d57848401860151818501870152928501926200032e565b828411156200035f5760008684830101525b98975050505050505050565b600181811c908216806200038057607f821691505b60208210811415620003a257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6114a980620003ce6000396000f3fe60806040526004361061009c5760003560e01c80633b668059116100645780633b6680591461014b5780633d65df701461016057806360daa85114610173578063aa90c726146101a3578063b4a99a4e146101b8578063fd6c3b1b146101f557600080fd5b80630390c11c146100a15780630a67d2c7146100c95780631309a563146100de578063154602591461010857806332b61b4c1461011d575b600080fd5b3480156100ad57600080fd5b506100b6610222565b6040519081526020015b60405180910390f35b6100dc6100d736600461101d565b61026e565b005b3480156100ea57600080fd5b50600b546100f89060ff1681565b60405190151581526020016100c0565b34801561011457600080fd5b506100dc61032f565b34801561012957600080fd5b5061013d61013836600461101d565b6103ca565b6040516100c092919061122d565b34801561015757600080fd5b506100b66105fa565b61013d61016e36600461101d565b61063a565b34801561017f57600080fd5b50610188610735565b604080519384526020840192909252908201526060016100c0565b3480156101af57600080fd5b506100dc610786565b3480156101c457600080fd5b50600b546101dd9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561020157600080fd5b5061021561021036600461101d565b610820565b6040516100c09190611168565b600b5460009061010090046001600160a01b0316336001600160a01b0316146102665760405162461bcd60e51b815260040161025d906111bf565b60405180910390fd5b506004545b90565b600b5461010090046001600160a01b0316336001600160a01b0316146102a65760405162461bcd60e51b815260040161025d906111bf565b47806102f45760405162461bcd60e51b815260206004820152601d60248201527f4572726f7221204e6f2042616c616e636520746f207769746864726177000000604482015260640161025d565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561032a573d6000803e3d6000fd5b505050565b600b5461010090046001600160a01b0316336001600160a01b0316146103675760405162461bcd60e51b815260040161025d906111bf565b600b5460ff1615156001146103be5760405162461bcd60e51b815260206004820152601b60248201527f44726f707369746520697320616c72656164792052756e6e696e670000000000604482015260640161025d565b600b805460ff19169055565b600b5460009060609061010090046001600160a01b0316336001600160a01b0316146104085760405162461bcd60e51b815260040161025d906111bf565b600b5460ff161561042b5760405162461bcd60e51b815260040161025d906111f6565b6103e86004541061047a5760405162461bcd60e51b815260206004820152601960248201527813585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959603a1b604482015260640161025d565b600061048461088c565b905061051e84826005546002805461049b906112b9565b80601f01602080910402602001604051908101604052809291908181526020018280546104c7906112b9565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050610a5d565b6004805490600061052e8361132f565b90915550506001600160a01b038416600090815260096020908152604082208054600181018255908352912001819055600280548291908190610570906112b9565b80601f016020809104026020016040519081016040528092919081815260200182805461059c906112b9565b80156105e95780601f106105be576101008083540402835291602001916105e9565b820191906000526020600020905b8154815290600101906020018083116105cc57829003601f168201915b505050505090509250925050915091565b600b5460009061010090046001600160a01b0316336001600160a01b0316146106355760405162461bcd60e51b815260040161025d906111bf565b504790565b600b5460009060609060ff16156106635760405162461bcd60e51b815260040161025d906111f6565b6103e8600454106106b25760405162461bcd60e51b815260206004820152601960248201527813585e08135a5b9d1a5b99c8131a5b5a5d081c995858da1959603a1b604482015260640161025d565b3468015af1d78b58c400001461070a5760405162461bcd60e51b815260206004820152601960248201527f42616c616e6365206d757374206265203235204d617469637300000000000000604482015260640161025d565b600061071461088c565b905061072b84826005546002805461049b906112b9565b61051e3334610b6e565b600b546000908190819061010090046001600160a01b0316336001600160a01b0316146107745760405162461bcd60e51b815260040161025d906111bf565b50506006546007546008549193909250565b600b5461010090046001600160a01b0316336001600160a01b0316146107be5760405162461bcd60e51b815260040161025d906111bf565b600b5460ff16156108115760405162461bcd60e51b815260206004820152601b60248201527f44726f707369746520697320616c72656164792053746f707065640000000000604482015260640161025d565b600b805460ff19166001179055565b6001600160a01b03811660009081526009602090815260409182902080548351818402810184019094528084526060939283018282801561088057602002820191906000526020600020905b81548152602001906001019080831161086c575b50505050509050919050565b600b5460009060ff16156108b25760405162461bcd60e51b815260040161025d906111f6565b60006108bc610b9f565b90506000600382601481106108d3576108d361138a565b602081049091015460ff601f9092166101000a9004169050801580156108fb57506032600654105b1561095e57600680549060006109108361132f565b9190505550610920600654610bfb565b6040516020016109309190611097565b60405160208183030381529060405260029080519060200190610954929190610f09565b50915061026b9050565b6001811115801561097157506064600754105b156109a657600780549060006109868361132f565b9190505550610996600754610bfb565b60405160200161093091906110c7565b600281111580156109bb575061035260085411155b15610a2d57600880549060006109d08361132f565b91905055506109e0600854610bfb565b6040516020016109f091906110f4565b60405160208183030381529060405260029080519060200190610a14929190610f09565b6002908054610a22906112b9565b610954929190610f8d565b60646007541015610a4b57506007805460019160006109868361132f565b5060068054600091826109108361132f565b6001600160a01b038416610abd5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161025d565b33610ade81600087610ace88610d01565b610ad788610d01565b5050505050565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b0e908490611246565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ad781600087878787610d54565b6001600160a01b0382166000908152600a602052604081208054839290610b96908490611246565b90915550505050565b60008060144233604051602001610bd292919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c610bf5919061134a565b92915050565b606081610c1f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c495780610c338161132f565b9150610c429050600a8361125e565b9150610c23565b60008167ffffffffffffffff811115610c6457610c646113a0565b6040519080825280601f01601f191660200182016040528015610c8e576020820181803683370190505b5090505b8415610cf957610ca3600183611272565b9150610cb0600a8661134a565b610cbb906030611246565b60f81b818381518110610cd057610cd061138a565b60200101906001600160f81b031916908160001a905350610cf2600a8661125e565b9450610c92565b949350505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d3b57610d3b61138a565b602090810291909101015292915050565b505050505050565b6001600160a01b0384163b15610d4c576040516315d1344960e31b81526001600160a01b0385169063ae89a24890610d989089908990889088908890600401611123565b602060405180830381600087803b158015610db257600080fd5b505af1925050508015610de2575060408051601f3d908101601f19168201909252610ddf91810190611041565b60015b610e8f57610dee6113b6565b806308c379a01415610e285750610e036113d1565b80610e0e5750610e2a565b8060405162461bcd60e51b815260040161025d91906111ac565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161025d565b6001600160e01b031981166315d1344960e31b14610f005760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161025d565b50505050505050565b828054610f15906112b9565b90600052602060002090601f016020900481019282610f375760008555610f7d565b82601f10610f5057805160ff1916838001178555610f7d565b82800160010185558215610f7d579182015b82811115610f7d578251825591602001919060010190610f62565b50610f89929150611008565b5090565b828054610f99906112b9565b90600052602060002090601f016020900481019282610fbb5760008555610f7d565b82601f10610fcc5780548555610f7d565b82800160010185558215610f7d57600052602060002091601f016020900482015b82811115610f7d578254825591600101919060010190610fed565b5b80821115610f895760008155600101611009565b60006020828403121561102f57600080fd5b813561103a8161145b565b9392505050565b60006020828403121561105357600080fd5b81516001600160e01b03198116811461103a57600080fd5b60008151808452611083816020860160208601611289565b601f01601f19169290920160200192915050565b674469616d6f6e645f60c01b8152600082516110ba816008850160208701611289565b9190910160080192915050565b64476f6c645f60d81b8152600082516110e7816005850160208701611289565b9190910160050192915050565b6653696c7665725f60c81b815260008251611116816007850160208701611289565b9190910160070192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061115d9083018461106b565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156111a057835183529284019291840191600101611184565b50909695505050505050565b60208152600061103a602083018461106b565b6020808252601c908201527f4f6e6c79204e46542d4553204f776e65722063616e2041636365737300000000604082015260600190565b6020808252601b908201527f44726f7073697465206973206e6f74204f70656e6564205965742e0000000000604082015260600190565b828152604060208201526000610cf9604083018461106b565b600082198211156112595761125961135e565b500190565b60008261126d5761126d611374565b500490565b6000828210156112845761128461135e565b500390565b60005b838110156112a457818101518382015260200161128c565b838111156112b3576000848401525b50505050565b600181811c908216806112cd57607f821691505b602082108114156112ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561132857634e487b7160e01b600052604160045260246000fd5b6040525050565b60006000198214156113435761134361135e565b5060010190565b60008261135957611359611374565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561026b5760046000803e5060005160e01c90565b600060443d10156113df5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561140f57505050505090565b82850191508151818111156114275750505050505090565b843d87010160208285010111156114415750505050505090565b611450602082860101876112f4565b509095945050505050565b6001600160a01b038116811461147057600080fd5b5056fea2646970667358221220beaa33ab9fc5e1b7eab3f745dfa9316cd77b5213ba482cc3b30f7d47456edd5c64736f6c63430008070033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH3 0x1B SWAP2 PUSH1 0x2 SWAP2 PUSH3 0x159 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x280 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x180 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1A0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1C0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1E0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x200 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x220 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x240 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x260 DUP3 ADD MSTORE PUSH3 0xCE SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x14 PUSH3 0x1E8 JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1877 CODESIZE SUB DUP1 PUSH3 0x1877 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x10C SWAP2 PUSH3 0x28F JUMP JUMPDEST DUP1 MLOAD PUSH3 0x121 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x159 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH3 0x3BE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x167 SWAP1 PUSH3 0x36B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x18B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1D6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1D6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1D6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP PUSH3 0x1E4 SWAP3 SWAP2 POP PUSH3 0x278 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH3 0x1D6 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x23F JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x1FF JUMP JUMPDEST DUP1 ISZERO PUSH3 0x26E JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x23F JUMP JUMPDEST POP POP PUSH3 0x1E4 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1E4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x279 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x2E5 JUMPI PUSH3 0x2E5 PUSH3 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x310 JUMPI PUSH3 0x310 PUSH3 0x3A8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x34D JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x32E JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x35F JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x380 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x14A9 DUP1 PUSH3 0x3CE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B668059 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xFD6C3B1B EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x32B61B4C EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0xF8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x32F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x786 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484 PUSH2 0x88C JUMP JUMPDEST SWAP1 POP PUSH2 0x51E DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x514 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x514 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x52E DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x570 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE PUSH9 0x15AF1D78B58C40000 EQ PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D757374206265203235204D617469637300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0x88C JUMP JUMPDEST SWAP1 POP PUSH2 0x72B DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x51E CALLER CALLVALUE PUSH2 0xB6E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x86C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BC PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x14 DUP2 LT PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI POP PUSH1 0x32 PUSH1 0x6 SLOAD LT JUMPDEST ISZERO PUSH2 0x95E JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x910 DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x920 PUSH1 0x6 SLOAD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST POP SWAP2 POP PUSH2 0x26B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI POP PUSH1 0x64 PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x986 DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x996 PUSH1 0x7 SLOAD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x9BB JUMPI POP PUSH2 0x352 PUSH1 0x8 SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0xA2D JUMPI PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9D0 DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x9E0 PUSH1 0x8 SLOAD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP1 SLOAD PUSH2 0xA22 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xA4B JUMPI POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 PUSH2 0x986 DUP4 PUSH2 0x132F JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x910 DUP4 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST CALLER PUSH2 0xADE DUP2 PUSH1 0x0 DUP8 PUSH2 0xACE DUP9 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xAD7 DUP9 PUSH2 0xD01 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xB0E SWAP1 DUP5 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xAD7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB96 SWAP1 DUP5 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xC1F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xC49 JUMPI DUP1 PUSH2 0xC33 DUP2 PUSH2 0x132F JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x125E JUMP JUMPDEST SWAP2 POP PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC64 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xCF9 JUMPI PUSH2 0xCA3 PUSH1 0x1 DUP4 PUSH2 0x1272 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB0 PUSH1 0xA DUP7 PUSH2 0x134A JUMP JUMPDEST PUSH2 0xCBB SWAP1 PUSH1 0x30 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xCF2 PUSH1 0xA DUP7 PUSH2 0x125E JUMP JUMPDEST SWAP5 POP PUSH2 0xC92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD3B JUMPI PUSH2 0xD3B PUSH2 0x138A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH4 0x15D13449 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xAE89A248 SWAP1 PUSH2 0xD98 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDE2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDDF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE8F JUMPI PUSH2 0xDEE PUSH2 0x13B6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xE28 JUMPI POP PUSH2 0xE03 PUSH2 0x13D1 JUMP JUMPDEST DUP1 PUSH2 0xE0E JUMPI POP PUSH2 0xE2A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x15D13449 PUSH1 0xE3 SHL EQ PUSH2 0xF00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF15 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF37 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF50 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF7D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF7D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF62 JUMP JUMPDEST POP PUSH2 0xF89 SWAP3 SWAP2 POP PUSH2 0x1008 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF99 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xFBB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xFCC JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF7D JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFED JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF89 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x103A DUP2 PUSH2 0x145B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1053 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1083 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x4469616D6F6E645F PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10BA DUP2 PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x8 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH5 0x476F6C645F PUSH1 0xD8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10E7 DUP2 PUSH1 0x5 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x5 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH7 0x53696C7665725F PUSH1 0xC8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1116 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x115D SWAP1 DUP4 ADD DUP5 PUSH2 0x106B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11A0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1184 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x103A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xCF9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1259 PUSH2 0x135E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x1374 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1284 JUMPI PUSH2 0x1284 PUSH2 0x135E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x128C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1328 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x135E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1359 JUMPI PUSH2 0x1359 PUSH2 0x1374 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x13DF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x140F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1427 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1441 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x12F4 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xAA CALLER 0xAB SWAP16 0xC5 0xE1 0xB7 0xEA 0xB3 0xF7 GASLIMIT 0xDF 0xA9 BALANCE PUSH13 0xD77B5213BA482CC3B30F7D4745 PUSH15 0xDD5C64736F6C634300080700330000 ",
							"sourceMap": "241:16:2:-:0;146:6064;241:16;;;-1:-1:-1;146:6064:2;241:16;;;;;;;;:::i;:::-;-1:-1:-1;440:66:2;;;;;;;;-1:-1:-1;440:66:2;;468:1;440:66;;;;;;;;;;;;;472:1;440:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1417:27:2;;;-1:-1:-1;;1417:27:2;1440:4;1417:27;;;1511:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;;1575:5:2;:27;;-1:-1:-1;;;;;;1575:27:2;1591:10;1575:27;;;;;-1:-1:-1;1613:15:2;:17;;;-1:-1:-1;1664:11:2;:13;-1:-1:-1;1724:9:2;;;-1:-1:-1;1755:6:2;;;1771;:8;146:6064;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;146:6064:2;;;-1:-1:-1;146:6064:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;146:6064:2;;;-1:-1:-1;146:6064:2;;;;;;;;;;;;;;;14:1087:9;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:9;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:9;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:9:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;146:6064:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ContractBalance_562": {
									"entryPoint": 1530,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@CryptoRandomMint_875": {
									"entryPoint": 1594,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@FiatRandomMint_796": {
									"entryPoint": 970,
									"id": 796,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@IsPaused_416": {
									"entryPoint": null,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Owner_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_1086": {
									"entryPoint": 3329,
									"id": 1086,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_995": {
									"entryPoint": 3404,
									"id": 995,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1058": {
									"entryPoint": 3412,
									"id": 1058,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_977": {
									"entryPoint": 2653,
									"id": 977,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkMintedCategoryWise_475": {
									"entryPoint": 1845,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@checkTotalMinted_485": {
									"entryPoint": 546,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositAmount_810": {
									"entryPoint": 2926,
									"id": 810,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@openDropsite_519": {
									"entryPoint": 815,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@random_587": {
									"entryPoint": 2975,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@returnOwner_386": {
									"entryPoint": 2080,
									"id": 386,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stopDropsite_502": {
									"entryPoint": 1926,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_1260": {
									"entryPoint": 3067,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateConditions_745": {
									"entryPoint": 2188,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withDraw_548": {
									"entryPoint": 622,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 5211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12458:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "392:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "392:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "392:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "365:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "374:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:32:9"
															},
															"nodeType": "YulIf",
															"src": "354:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "441:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "428:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "419:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "485:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "460:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "500:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "510:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "321:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:9",
														"type": ""
													}
												],
												"src": "266:255:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:210:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "652:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "661:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "654:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "654:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "654:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "627:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "619:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:32:9"
															},
															"nodeType": "YulIf",
															"src": "616:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "677:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "690:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "681:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "770:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "782:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "772:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "772:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "772:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "750:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "755:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "746:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "746:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "735:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "735:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "725:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:51:9"
															},
															"nodeType": "YulIf",
															"src": "715:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "795:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "805:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "572:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "583:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"src": "526:290:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:208:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "881:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "895:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "885:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "923:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "928:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "916:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "970:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "977:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "966:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:16:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "988:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "993:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "984:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "944:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:63:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:63:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1016:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1031:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1044:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1052:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1040:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1040:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1061:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1057:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1057:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1027:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1023:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1016:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "848:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "855:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "863:3:9",
														"type": ""
													}
												],
												"src": "821:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:185:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:9"
																	},
																	{
																		"hexValue": "4469616d6f6e645f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1346:10:9",
																		"type": "",
																		"value": "Diamond_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:23:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:23:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1366:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1386:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1380:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1370:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1428:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1436:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1447:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1452:1:9",
																				"type": "",
																				"value": "8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1443:11:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1456:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1402:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1402:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1472:31:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1487:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1492:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1483:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1483:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:24:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1472:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1300:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1305:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1316:3:9",
														"type": ""
													}
												],
												"src": "1084:425:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1771:3:9"
																	},
																	{
																		"hexValue": "476f6c645f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1776:7:9",
																		"type": "",
																		"value": "Gold_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:20:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1764:20:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1793:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1807:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1797:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1855:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1863:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1874:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1879:1:9",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:11:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1883:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1829:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1899:31:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:9",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:24:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1899:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1730:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1735:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1746:3:9",
														"type": ""
													}
												],
												"src": "1514:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:184:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2198:3:9"
																	},
																	{
																		"hexValue": "53696c7665725f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2203:9:9",
																		"type": "",
																		"value": "Silver_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2222:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2242:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2236:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2226:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2292:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2280:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2303:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2308:1:9",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:11:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2312:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2258:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2258:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2328:31:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2343:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2348:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2339:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:1:9",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:24:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2157:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2173:3:9",
														"type": ""
													}
												],
												"src": "1941:424:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2517:147:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2534:3:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2527:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2566:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2571:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2562:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2584:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "2588:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2580:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2580:15:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2601:26:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2597:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:31:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:75:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2555:75:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2639:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2650:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2655:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2485:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2490:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2498:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2509:3:9",
														"type": ""
													}
												],
												"src": "2370:294:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2786:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2796:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2796:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2853:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2869:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2874:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2865:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2865:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2878:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2861:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2861:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2831:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2755:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2766:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2777:4:9",
														"type": ""
													}
												],
												"src": "2669:219:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3126:330:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3154:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3146:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3140:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3181:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3204:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3192:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3239:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3224:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3224:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3256:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3291:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3276:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3296:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3269:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3323:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3334:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3339:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3366:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3377:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3362:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3383:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3355:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:54:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3445:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3404:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:46:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3396:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3063:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3074:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3082:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3090:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3098:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3106:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3117:4:9",
														"type": ""
													}
												],
												"src": "2893:563:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:481:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3622:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3632:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3626:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3643:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3661:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3672:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3657:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3647:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3691:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3702:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3684:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3684:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3714:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3725:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3718:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3740:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3754:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3744:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3783:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3791:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3807:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3818:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3829:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3814:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3814:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3807:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3841:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3859:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3867:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3845:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3879:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3888:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3883:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3947:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3968:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3979:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3973:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3973:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3961:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3961:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3961:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4000:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4011:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4016:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4007:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4007:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4000:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4032:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4046:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4054:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4042:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4042:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4032:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3909:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3906:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3920:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3922:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3931:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3934:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3927:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3927:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3922:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3902:3:9",
																"statements": []
															},
															"src": "3898:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4076:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4084:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4076:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3581:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3592:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3603:4:9",
														"type": ""
													}
												],
												"src": "3461:632:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4193:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4203:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4215:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4226:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4211:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4203:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4245:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4270:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4263:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4263:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4256:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4256:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4162:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4173:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4184:4:9",
														"type": ""
													}
												],
												"src": "4098:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4411:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4428:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4439:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4421:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4451:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4477:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4489:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4500:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4485:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4485:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4459:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4451:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4380:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4391:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4402:4:9",
														"type": ""
													}
												],
												"src": "4290:220:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4706:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4717:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4699:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4740:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4751:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4736:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4756:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4729:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4779:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4790:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4775:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4775:18:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4795:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4768:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4850:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4861:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4846:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4846:18:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4866:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4839:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4839:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4898:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4910:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4898:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4666:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4680:4:9",
														"type": ""
													}
												],
												"src": "4515:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5110:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5127:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5138:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5120:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5172:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5157:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5177:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5150:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5150:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5200:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5211:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5196:18:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5216:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5189:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5271:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5282:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5267:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:18:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5287:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5260:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5260:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5307:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5319:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5315:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5307:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5087:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5101:4:9",
														"type": ""
													}
												],
												"src": "4936:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5519:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5536:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5547:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5529:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5529:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5529:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5570:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5581:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5566:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5566:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5586:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5559:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5559:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5620:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5605:18:9"
																	},
																	{
																		"hexValue": "42616c616e6365206d757374206265203235204d6174696373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5625:27:9",
																		"type": "",
																		"value": "Balance must be 25 Matics"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5662:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5674:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5670:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5662:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5496:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5510:4:9",
														"type": ""
													}
												],
												"src": "5345:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5873:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5890:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5883:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5883:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5924:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5935:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5920:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5940:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5913:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5974:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5959:18:9"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5979:29:9",
																		"type": "",
																		"value": "Dropsite is already Running"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5952:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6018:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6030:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6041:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6018:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5850:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5864:4:9",
														"type": ""
													}
												],
												"src": "5699:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6229:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6246:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6257:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6239:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6280:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6291:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6276:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6296:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6269:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6269:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6319:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6330:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6315:18:9"
																	},
																	{
																		"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6335:29:9",
																		"type": "",
																		"value": "Dropsite is already Stopped"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6308:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6308:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6374:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6386:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6382:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6374:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6206:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6220:4:9",
														"type": ""
													}
												],
												"src": "6055:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6585:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6602:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6613:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6595:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6595:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6595:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6636:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6647:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6632:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6652:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6625:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6625:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6675:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6686:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6671:18:9"
																	},
																	{
																		"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6691:30:9",
																		"type": "",
																		"value": "Only NFT-ES Owner can Access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6664:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6664:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6731:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6743:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6754:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6731:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6562:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6576:4:9",
														"type": ""
													}
												],
												"src": "6411:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6942:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6959:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6970:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6952:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6952:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6952:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6993:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7004:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6989:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6989:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6982:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7032:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7043:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7028:18:9"
																	},
																	{
																		"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7048:29:9",
																		"type": "",
																		"value": "Dropsite is not Opened Yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7021:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7021:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7021:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7087:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7099:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7110:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7095:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7087:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6919:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6933:4:9",
														"type": ""
													}
												],
												"src": "6768:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7298:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7315:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7326:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7308:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7308:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7308:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7349:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7360:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7345:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7345:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7365:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7388:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7399:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7384:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7384:18:9"
																	},
																	{
																		"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7404:27:9",
																		"type": "",
																		"value": "Max Minting Limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7377:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7377:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7441:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7453:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7449:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7449:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7441:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7275:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7289:4:9",
														"type": ""
													}
												],
												"src": "7124:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7652:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7669:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7680:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7662:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7662:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7662:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7703:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7714:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7719:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7753:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7738:18:9"
																	},
																	{
																		"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7758:31:9",
																		"type": "",
																		"value": "Error! No Balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7731:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7731:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7799:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7811:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7822:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7799:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7629:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7643:4:9",
														"type": ""
													}
												],
												"src": "7478:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8010:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8027:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8038:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8020:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8061:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8072:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8057:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8057:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8077:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8050:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8050:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8100:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8111:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8096:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8096:18:9"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8116:34:9",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8089:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8089:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8171:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8182:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8187:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8160:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8200:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8212:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8223:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8208:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8208:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8200:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7987:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8001:4:9",
														"type": ""
													}
												],
												"src": "7836:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8361:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8372:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8357:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8357:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8349:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8391:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8402:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8384:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8384:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8384:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8308:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8319:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8330:4:9",
														"type": ""
													}
												],
												"src": "8238:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8569:142:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8586:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8597:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8579:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8624:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8635:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8620:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8640:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8613:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8613:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8613:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8652:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8678:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8690:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8701:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8686:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8686:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8660:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8652:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8530:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8541:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8549:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8560:4:9",
														"type": ""
													}
												],
												"src": "8420:291:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8845:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8855:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8867:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8863:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8855:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8897:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8908:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8890:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8890:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8935:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8946:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8931:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8931:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8951:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8924:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8924:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8806:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8817:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8825:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8836:4:9",
														"type": ""
													}
												],
												"src": "8716:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9126:162:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9136:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9148:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9159:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9144:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9189:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9171:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9216:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9227:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9212:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9232:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9205:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9205:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9275:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9248:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9248:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9079:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9090:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9098:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9106:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9117:4:9",
														"type": ""
													}
												],
												"src": "8969:319:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9341:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9368:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9370:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9370:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9370:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9357:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9364:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9360:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9354:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:13:9"
															},
															"nodeType": "YulIf",
															"src": "9351:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9399:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9410:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9413:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9399:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9324:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9327:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9333:3:9",
														"type": ""
													}
												],
												"src": "9293:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9472:74:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9495:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9497:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9497:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9497:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9492:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9485:9:9"
															},
															"nodeType": "YulIf",
															"src": "9482:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9526:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9535:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9538:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9531:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9526:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9457:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9460:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9466:1:9",
														"type": ""
													}
												],
												"src": "9426:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9622:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9624:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9624:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9624:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9619:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9613:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9613:8:9"
															},
															"nodeType": "YulIf",
															"src": "9610:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9653:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9665:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9668:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9661:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9653:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9582:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9585:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9591:4:9",
														"type": ""
													}
												],
												"src": "9551:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9734:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9744:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9753:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9748:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9813:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9838:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9843:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9834:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9834:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9857:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9862:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9853:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9853:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9847:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9847:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9827:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9827:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9827:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9774:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9777:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9771:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9771:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9785:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9787:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9796:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9799:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9792:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9792:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9787:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9767:3:9",
																"statements": []
															},
															"src": "9763:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9902:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9915:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9920:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9911:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9911:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9929:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9904:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9904:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9904:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9891:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9894:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9888:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:13:9"
															},
															"nodeType": "YulIf",
															"src": "9885:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9712:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9717:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9722:6:9",
														"type": ""
													}
												],
												"src": "9681:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9999:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10009:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10023:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10026:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "10019:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10040:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10070:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10076:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10066:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10066:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10044:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10117:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10119:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10133:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10141:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10129:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10129:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10119:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10097:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:26:9"
															},
															"nodeType": "YulIf",
															"src": "10087:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10207:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10228:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10235:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10240:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10231:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10231:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10221:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10221:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10221:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10272:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10275:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10265:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10265:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10265:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10300:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10303:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10293:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10293:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10293:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10163:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10186:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10194:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10183:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10183:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10160:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10160:38:9"
															},
															"nodeType": "YulIf",
															"src": "10157:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9979:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9988:6:9",
														"type": ""
													}
												],
												"src": "9944:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10376:299:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10386:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10408:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "10424:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10430:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10420:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10420:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10439:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10435:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10435:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10416:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10416:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10404:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "10390:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10527:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10548:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10555:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10560:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10551:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10551:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10541:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10541:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10541:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10592:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10595:4:9",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10585:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10585:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10585:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10620:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10623:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10613:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10613:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10613:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10462:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10474:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10459:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10459:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10498:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10510:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10495:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10495:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10456:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10456:62:9"
															},
															"nodeType": "YulIf",
															"src": "10453:185:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10654:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10658:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10647:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10358:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10366:4:9",
														"type": ""
													}
												],
												"src": "10329:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10727:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10758:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10760:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10760:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10760:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10743:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10750:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10740:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10740:17:9"
															},
															"nodeType": "YulIf",
															"src": "10737:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10789:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10800:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10807:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10796:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10796:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10789:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10709:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10719:3:9",
														"type": ""
													}
												],
												"src": "10680:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10858:74:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10881:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10883:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10883:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10883:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10878:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10871:9:9"
															},
															"nodeType": "YulIf",
															"src": "10868:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10912:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10921:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10924:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "10917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10917:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10912:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10843:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10846:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10852:1:9",
														"type": ""
													}
												],
												"src": "10820:112:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10969:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10986:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10993:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10998:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10989:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10979:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10979:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10979:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11026:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11019:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11019:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11050:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11053:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11043:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11043:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11043:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10937:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11101:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11118:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11125:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11130:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11121:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11121:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11111:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11111:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11111:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11158:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11161:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11151:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11151:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11151:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11182:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11185:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11175:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11175:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11175:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11069:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11233:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11250:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11262:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11253:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11253:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11243:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11243:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11290:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11293:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11283:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11283:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11314:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11317:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11307:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11307:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11201:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11365:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11382:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11389:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11394:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11385:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11375:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11375:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11375:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11422:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11425:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11415:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11446:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11449:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11439:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11439:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11439:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11333:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11508:136:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11553:85:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11582:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11585:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11588:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "11567:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11567:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11567:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11603:25:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11614:3:9",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11625:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11619:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11619:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "11610:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11610:18:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "11603:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "11524:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11524:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11542:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11521:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11521:23:9"
															},
															"nodeType": "YulIf",
															"src": "11518:120:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "11500:3:9",
														"type": ""
													}
												],
												"src": "11465:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11696:624:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11736:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "11738:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "11712:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11730:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11709:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11709:26:9"
															},
															"nodeType": "YulIf",
															"src": "11706:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11754:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11772:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11766:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:9:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "11758:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11784:16:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11798:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "11794:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:6:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11788:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11824:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "11837:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11837:16:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11855:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:25:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11809:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11809:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11809:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11868:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11888:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11882:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11882:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11872:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11902:26:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "11912:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:16:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11906:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11937:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11947:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11941:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12023:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "12025:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11983:6:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11991:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11980:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11980:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12003:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12011:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11999:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11999:17:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "12018:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11996:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11996:25:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11977:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11977:45:9"
															},
															"nodeType": "YulIf",
															"src": "11974:58:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12041:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12056:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12062:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12052:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12052:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "12045:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12078:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "12098:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12092:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12082:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12129:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "12131:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12117:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "12125:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12114:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12114:14:9"
															},
															"nodeType": "YulIf",
															"src": "12111:27:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12220:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "12222:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "12161:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12166:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12157:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12157:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12175:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12153:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12153:27:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "12190:4:9"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "12196:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12196:16:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12186:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12186:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12215:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12182:36:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12150:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12150:69:9"
															},
															"nodeType": "YulIf",
															"src": "12147:82:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12258:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12272:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12280:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12268:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12268:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12289:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12264:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12264:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "12238:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12238:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12238:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12304:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "12311:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12304:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11688:3:9",
														"type": ""
													}
												],
												"src": "11649:671:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12370:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12434:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12443:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12446:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12436:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12436:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12436:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12393:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12404:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12419:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12424:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "12415:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12415:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12428:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "12411:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12411:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12400:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12400:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12390:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12390:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12383:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12383:50:9"
															},
															"nodeType": "YulIf",
															"src": "12380:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12359:5:9",
														"type": ""
													}
												],
												"src": "12325:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Diamond_\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 8), length)\n        end := add(add(pos, length), 8)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Gold_\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 5), length)\n        end := add(add(pos, length), 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Silver_\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Balance must be 25 Matics\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is already Running\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is already Stopped\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only NFT-ES Owner can Access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Dropsite is not Opened Yet.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Max Minting Limit reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Error! No Balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B668059 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x3B668059 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3D65DF70 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x60DAA851 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xAA90C726 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xFD6C3B1B EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x390C11C EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA67D2C7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x1309A563 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x15460259 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x32B61B4C EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0xF8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x32F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x786 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x1DD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7221204E6F2042616C616E636520746F207769746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792052756E6E696E670000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484 PUSH2 0x88C JUMP JUMPDEST SWAP1 POP PUSH2 0x51E DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x514 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x514 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x52E DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x570 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x12B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD LT PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST CALLVALUE PUSH9 0x15AF1D78B58C40000 EQ PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D757374206265203235204D617469637300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH2 0x88C JUMP JUMPDEST SWAP1 POP PUSH2 0x72B DUP5 DUP3 PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x51E CALLER CALLVALUE PUSH2 0xB6E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44726F707369746520697320616C72656164792053746F707065640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x86C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BC PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x14 DUP2 LT PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI POP PUSH1 0x32 PUSH1 0x6 SLOAD LT JUMPDEST ISZERO PUSH2 0x95E JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x910 DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x920 PUSH1 0x6 SLOAD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST POP SWAP2 POP PUSH2 0x26B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI POP PUSH1 0x64 PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x986 DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x996 PUSH1 0x7 SLOAD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x9BB JUMPI POP PUSH2 0x352 PUSH1 0x8 SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0xA2D JUMPI PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9D0 DUP4 PUSH2 0x132F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x9E0 PUSH1 0x8 SLOAD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP1 SLOAD PUSH2 0xA22 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xA4B JUMPI POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 PUSH2 0x986 DUP4 PUSH2 0x132F JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x910 DUP4 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST CALLER PUSH2 0xADE DUP2 PUSH1 0x0 DUP8 PUSH2 0xACE DUP9 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xAD7 DUP9 PUSH2 0xD01 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xB0E SWAP1 DUP5 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xAD7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB96 SWAP1 DUP5 SWAP1 PUSH2 0x1246 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xC1F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xC49 JUMPI DUP1 PUSH2 0xC33 DUP2 PUSH2 0x132F JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x125E JUMP JUMPDEST SWAP2 POP PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC64 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xCF9 JUMPI PUSH2 0xCA3 PUSH1 0x1 DUP4 PUSH2 0x1272 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB0 PUSH1 0xA DUP7 PUSH2 0x134A JUMP JUMPDEST PUSH2 0xCBB SWAP1 PUSH1 0x30 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xCF2 PUSH1 0xA DUP7 PUSH2 0x125E JUMP JUMPDEST SWAP5 POP PUSH2 0xC92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD3B JUMPI PUSH2 0xD3B PUSH2 0x138A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH4 0x15D13449 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xAE89A248 SWAP1 PUSH2 0xD98 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDE2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDDF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE8F JUMPI PUSH2 0xDEE PUSH2 0x13B6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xE28 JUMPI POP PUSH2 0xE03 PUSH2 0x13D1 JUMP JUMPDEST DUP1 PUSH2 0xE0E JUMPI POP PUSH2 0xE2A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x15D13449 PUSH1 0xE3 SHL EQ PUSH2 0xF00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF15 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF37 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF50 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF7D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF7D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF62 JUMP JUMPDEST POP PUSH2 0xF89 SWAP3 SWAP2 POP PUSH2 0x1008 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF99 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xFBB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xFCC JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xF7D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF7D JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFED JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF89 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x103A DUP2 PUSH2 0x145B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1053 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1083 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x4469616D6F6E645F PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10BA DUP2 PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x8 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH5 0x476F6C645F PUSH1 0xD8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x10E7 DUP2 PUSH1 0x5 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x5 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH7 0x53696C7665725F PUSH1 0xC8 SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1116 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x115D SWAP1 DUP4 ADD DUP5 PUSH2 0x106B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11A0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1184 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x103A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x44726F7073697465206973206E6F74204F70656E6564205965742E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xCF9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1259 PUSH2 0x135E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x1374 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1284 JUMPI PUSH2 0x1284 PUSH2 0x135E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x128C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1328 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x135E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1359 JUMPI PUSH2 0x1359 PUSH2 0x1374 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x13DF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x140F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1427 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1441 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1450 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x12F4 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xAA CALLER 0xAB SWAP16 0xC5 0xE1 0xB7 0xEA 0xB3 0xF7 GASLIMIT 0xDF 0xA9 BALANCE PUSH13 0xD77B5213BA482CC3B30F7D4745 PUSH15 0xDD5C64736F6C634300080700330000 ",
							"sourceMap": "146:6064:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2007:104;;;;;;;;;;;;;:::i;:::-;;;8384:25:9;;;8372:2;8357:18;2007:104:2;;;;;;;;2490:214;;;;;;:::i;:::-;;:::i;:::-;;1417:27;;;;;;;;;;-1:-1:-1;1417:27:2;;;;;;;;;;;4263:14:9;;4256:22;4238:41;;4226:2;4211:18;1417:27:2;4098:187:9;2259:136:2;;;;;;;;;;;;;:::i;4957:446::-;;;;;;;;;;-1:-1:-1;4957:446:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2757:108::-;;;;;;;;;;;;;:::i;5620:588::-;;;;;;:::i;:::-;;:::i;1840:127::-;;;;;;;;;;;;;:::i;:::-;;;;9171:25:9;;;9227:2;9212:18;;9205:34;;;;9255:18;;;9248:34;9159:2;9144:18;1840:127:2;8969:319:9;2117:135:2;;;;;;;;;;;;;:::i;1450:29::-;;;;;;;;;;-1:-1:-1;1450:29:2;;;;;;;-1:-1:-1;;;;;1450:29:2;;;;;;-1:-1:-1;;;;;2849:32:9;;;2831:51;;2819:2;2804:18;1450:29:2;2669:219:9;930:138:2;;;;;;;;;;-1:-1:-1;930:138:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2007:104::-;1189:5;;2065:4;;1189:5;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2088:15:2::1;::::0;1237:1:::1;2007:104:::0;:::o;2490:214::-;1189:5;;;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;2578:21:::1;2617:15:::0;2609:57:::1;;;::::0;-1:-1:-1;;;2609:57:2;;7680:2:9;2609:57:2::1;::::0;::::1;7662:21:9::0;7719:2;7699:18;;;7692:30;7758:31;7738:18;;;7731:59;7807:18;;2609:57:2::1;7478:353:9::0;2609:57:2::1;2677:20;::::0;-1:-1:-1;;;;;2677:11:2;::::1;::::0;:20;::::1;;;::::0;2689:7;;2677:20:::1;::::0;;;2689:7;2677:11;:20;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2553:151;2490:214:::0;:::o;2259:136::-;1189:5;;;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;2318:8:::1;::::0;::::1;;:14;;:8:::0;:14:::1;2310:54;;;::::0;-1:-1:-1;;;2310:54:2;;5901:2:9;2310:54:2::1;::::0;::::1;5883:21:9::0;5940:2;5920:18;;;5913:30;5979:29;5959:18;;;5952:57;6026:18;;2310:54:2::1;5699:351:9::0;2310:54:2::1;2374:8;:14:::0;;-1:-1:-1;;2374:14:2::1;::::0;;2259:136::o;4957:446::-;1189:5;;5046:4;;5051:13;;1189:5;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;1342:8:::1;::::0;::::1;;:17;1333:59;;;;-1:-1:-1::0;;;1333:59:2::1;;;;;;;:::i;:::-;5097:4:::2;5081:15;;:20;5073:58;;;::::0;-1:-1:-1;;;5073:58:2;;7326:2:9;5073:58:2::2;::::0;::::2;7308:21:9::0;7365:2;7345:18;;;7338:30;-1:-1:-1;;;7384:18:9;;;7377:55;7449:18;;5073:58:2::2;7124:349:9::0;5073:58:2::2;5194:10;5207:18;:16;:18::i;:::-;5194:31;;5231:42;5237:9;5248:5;5255:11;;5268:4;5231:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:42::i;:::-;5279:15;:17:::0;;;:15:::2;:17;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5302:29:2;::::2;;::::0;;;:18:::2;:29;::::0;;;;;;:61;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;;5390:4:::2;5369:27:::0;;5357:5;;5390:4;;;5369:27:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4957:446:::0;;;:::o;2757:108::-;1189:5;;2815:4;;1189:5;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;-1:-1:-1;2837:21:2::1;2757:108:::0;:::o;5620:588::-;1342:8;;5710:4;;5715:13;;1342:8;;:17;1333:59;;;;-1:-1:-1;;;1333:59:2;;;;;;;:::i;:::-;5761:4:::1;5745:15;;:20;5737:58;;;::::0;-1:-1:-1;;;5737:58:2;;7326:2:9;5737:58:2::1;::::0;::::1;7308:21:9::0;7365:2;7345:18;;;7338:30;-1:-1:-1;;;7384:18:9;;;7377:55;7449:18;;5737:58:2::1;7124:349:9::0;5737:58:2::1;5810:9;5824:20;5810:35;5802:73;;;::::0;-1:-1:-1;;;5802:73:2;;5547:2:9;5802:73:2::1;::::0;::::1;5529:21:9::0;5586:2;5566:18;;;5559:30;5625:27;5605:18;;;5598:55;5670:18;;5802:73:2::1;5345:349:9::0;5802:73:2::1;5955:10;5968:18;:16;:18::i;:::-;5955:31;;5992:42;5998:9;6009:5;6016:11;;6029:4;5992:42;;;;;:::i;:::-;6040:38;719:10:1::0;6068:9:2::1;6040:13;:38::i;1840:127::-:0;1189:5;;1905:4;;;;;;1189:5;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;-1:-1:-1;;1939:7:2::1;::::0;1947:4:::1;::::0;1952:6:::1;::::0;1939:7;;1947:4;;-1:-1:-1;1840:127:2:o;2117:135::-;1189:5;;;;;-1:-1:-1;;;;;1189:5:2;719:10:1;-1:-1:-1;;;;;1173:21:2;;1165:62;;;;-1:-1:-1;;;1165:62:2;;;;;;;:::i;:::-;2175:8:::1;::::0;::::1;;:15;2167:55;;;::::0;-1:-1:-1;;;2167:55:2;;6257:2:9;2167:55:2::1;::::0;::::1;6239:21:9::0;6296:2;6276:18;;;6269:30;6335:29;6315:18;;;6308:57;6382:18;;2167:55:2::1;6055:351:9::0;2167:55:2::1;2232:8;:13:::0;;-1:-1:-1;;2232:13:2::1;2241:4;2232:13;::::0;;2117:135::o;930:138::-;-1:-1:-1;;;;;1017:24:2;;;;;;:18;:24;;;;;;;;;1010:51;;;;;;;;;;;;;;;;;986:13;;1010:51;;;1017:24;1010:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:138;;;:::o;3322:1588::-;1342:8;;3387:4;;1342:8;;:17;1333:59;;;;-1:-1:-1;;;1333:59:2;;;;;;;:::i;:::-;3402:10:::1;3415:8;:6;:8::i;:::-;3402:21;;3433:10;3446:4;3451:5;3446:11;;;;;;;:::i;:::-;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;::::0;-1:-1:-1;3554:10:2;;:26;::::1;;;;3578:2;3568:7;;:12;3554:26;3551:1354;;;3597:7;:9:::0;;;:7:::1;:9;::::0;::::1;:::i;:::-;;;;;;3662:25;3679:7;;3662:16;:25::i;:::-;3634:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;3620:4;:69;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3723:5:2;-1:-1:-1;3716:12:2::1;::::0;-1:-1:-1;3716:12:2::1;3551:1354;3852:1;3843:5;:10;;:24;;;;;3864:3;3857:4;;:10;3843:24;3840:1065;;;3883:4;:6:::0;;;:4:::1;:6;::::0;::::1;:::i;:::-;;;;;;3942:22;3959:4;;3942:16;:22::i;:::-;3917:48;;;;;;;;:::i;3840:1065::-;4122:1;4113:5;:10;;:27;;;;;4137:3;4127:6;;:13;;4113:27;4110:795;;;4156:6;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;:::-;;;;;;4224:24;4241:6;;4224:16;:24::i;:::-;4197:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;4183:4;:67;;;;;;;;;;;;:::i;:::-;4178:4;:72;;;;;;:::i;:::-;;;;;;:::i;4110:795::-;4487:3;4480:4;;:10;4477:419;;;-1:-1:-1::0;4537:4:2::1;:6:::0;;4518:1:::1;::::0;4537:4:::1;:6;::::0;::::1;:::i;4477:419::-;-1:-1:-1::0;4738:7:2::1;:9:::0;;4719:1:::1;::::0;;4738:9:::1;::::0;::::1;:::i;835:552:3:-:0;-1:-1:-1;;;;;983:16:3;;975:62;;;;-1:-1:-1;;;975:62:3;;8038:2:9;975:62:3;;;8020:21:9;8077:2;8057:18;;;8050:30;8116:34;8096:18;;;8089:62;-1:-1:-1;;;8167:18:9;;;8160:31;8208:19;;975:62:3;7836:397:9;975:62:3;719:10:1;1090:102:3;719:10:1;1048:16:3;1133:2;1137:21;1155:2;1137:17;:21::i;:::-;1160:25;1178:6;1160:17;:25::i;:::-;1394:215;;;;;;1090:102;1202:9;:13;;;;;;;;;;;-1:-1:-1;;;;;1202:17:3;;;;;;;;;:27;;1223:6;;1202:9;:27;;1223:6;;1202:27;:::i;:::-;;;;-1:-1:-1;;1244:52:3;;;8890:25:9;;;8946:2;8931:18;;8924:34;;;-1:-1:-1;;;;;1244:52:3;;;;1277:1;;1244:52;;;;;;8863:18:9;1244:52:3;;;;;;;1306:74;1337:8;1355:1;1359:2;1363;1367:6;1375:4;1306:30;:74::i;5448:119:2:-;-1:-1:-1;;;;;5526:15:2;;;;;;:8;:15;;;;;:34;;5545:15;;5526;:34;;5545:15;;5526:34;:::i;:::-;;;;-1:-1:-1;;;;5448:119:2:o;2941:196::-;2982:4;3018:17;3103:2;3070:15;3087:10;3053:45;;;;;;;;2527:19:9;;;2584:2;2580:15;-1:-1:-1;;2576:53:9;2571:2;2562:12;;2555:75;2655:2;2646:12;;2370:294;3053:45:2;;;;;;;;;;;;;3043:56;;;;;;3038:62;;:67;;;;:::i;:::-;3018:87;2941:196;-1:-1:-1;;2941:196:2:o;329:703:8:-;385:13;602:10;598:51;;-1:-1:-1;;628:10:8;;;;;;;;;;;;-1:-1:-1;;;628:10:8;;;;;329:703::o;598:51::-;673:5;658:12;712:75;719:9;;712:75;;744:8;;;;:::i;:::-;;-1:-1:-1;766:10:8;;-1:-1:-1;774:2:8;766:10;;:::i;:::-;;;712:75;;;796:19;828:6;818:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;818:17:8;;796:39;;845:150;852:10;;845:150;;878:11;888:1;878:11;;:::i;:::-;;-1:-1:-1;946:10:8;954:2;946:5;:10;:::i;:::-;933:24;;:2;:24;:::i;:::-;920:39;;903:6;910;903:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;903:56:8;;;;;;;;-1:-1:-1;973:11:8;982:2;973:11;;:::i;:::-;;;845:150;;;1018:6;329:703;-1:-1:-1;;;;329:703:8:o;2347:193:3:-;2466:16;;;2480:1;2466:16;;;;;;;;;2413;;2441:22;;2466:16;;;;;;;;;;;;-1:-1:-1;2466:16:3;2441:41;;2503:7;2492:5;2498:1;2492:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;2528:5;2347:193;-1:-1:-1;;2347:193:3:o;1394:215::-;;;;;;;:::o;1615:726::-;-1:-1:-1;;;;;1823:13:3;;1087:20:0;1133:8;1819:516:3;;1858:72;;-1:-1:-1;;;1858:72:3;;-1:-1:-1;;;;;1858:38:3;;;;;:72;;1897:8;;1907:4;;1913:2;;1917:6;;1925:4;;1858:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1858:72:3;;;;;;;;-1:-1:-1;;1858:72:3;;;;;;;;;;;;:::i;:::-;;;1854:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2201:6;2194:14;;-1:-1:-1;;;2194:14:3;;;;;;;;:::i;1854:471::-;;;2248:62;;-1:-1:-1;;;2248:62:3;;4717:2:9;2248:62:3;;;4699:21:9;4756:2;4736:18;;;4729:30;4795:34;4775:18;;;4768:62;-1:-1:-1;;;4846:18:9;;;4839:50;4906:19;;2248:62:3;4515:416:9;1854:471:3;-1:-1:-1;;;;;;1979:55:3;;-1:-1:-1;;;1979:55:3;1975:152;;2058:50;;-1:-1:-1;;;2058:50:3;;5138:2:9;2058:50:3;;;5120:21:9;5177:2;5157:18;;;5150:30;5216:34;5196:18;;;5189:62;-1:-1:-1;;;5267:18:9;;;5260:38;5315:19;;2058:50:3;4936:404:9;1975:152:3;1931:210;1615:726;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:247:9;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:9:o;526:290::-;595:6;648:2;636:9;627:7;623:23;619:32;616:52;;;664:1;661;654:12;616:52;690:16;;-1:-1:-1;;;;;;735:32:9;;725:43;;715:71;;782:1;779;772:12;821:258;863:3;901:5;895:12;928:6;923:3;916:19;944:63;1000:6;993:4;988:3;984:14;977:4;970:5;966:16;944:63;:::i;:::-;1061:2;1040:15;-1:-1:-1;;1036:29:9;1027:39;;;;1068:4;1023:50;;821:258;-1:-1:-1;;821:258:9:o;1084:425::-;-1:-1:-1;;;1341:3:9;1334:23;1316:3;1386:6;1380:13;1402:61;1456:6;1452:1;1447:3;1443:11;1436:4;1428:6;1424:17;1402:61;:::i;:::-;1483:16;;;;1501:1;1479:24;;1084:425;-1:-1:-1;;1084:425:9:o;1514:422::-;-1:-1:-1;;;1771:3:9;1764:20;1746:3;1813:6;1807:13;1829:61;1883:6;1879:1;1874:3;1870:11;1863:4;1855:6;1851:17;1829:61;:::i;:::-;1910:16;;;;1928:1;1906:24;;1514:422;-1:-1:-1;;1514:422:9:o;1941:424::-;-1:-1:-1;;;2198:3:9;2191:22;2173:3;2242:6;2236:13;2258:61;2312:6;2308:1;2303:3;2299:11;2292:4;2284:6;2280:17;2258:61;:::i;:::-;2339:16;;;;2357:1;2335:24;;1941:424;-1:-1:-1;;1941:424:9:o;2893:563::-;-1:-1:-1;;;;;3192:15:9;;;3174:34;;3244:15;;3239:2;3224:18;;3217:43;3291:2;3276:18;;3269:34;;;3334:2;3319:18;;3312:34;;;3154:3;3377;3362:19;;3355:32;;;3117:4;;3404:46;;3430:19;;3422:6;3404:46;:::i;:::-;3396:54;2893:563;-1:-1:-1;;;;;;;2893:563:9:o;3461:632::-;3632:2;3684:21;;;3754:13;;3657:18;;;3776:22;;;3603:4;;3632:2;3855:15;;;;3829:2;3814:18;;;3603:4;3898:169;3912:6;3909:1;3906:13;3898:169;;;3973:13;;3961:26;;4042:15;;;;4007:12;;;;3934:1;3927:9;3898:169;;;-1:-1:-1;4084:3:9;;3461:632;-1:-1:-1;;;;;;3461:632:9:o;4290:220::-;4439:2;4428:9;4421:21;4402:4;4459:45;4500:2;4489:9;4485:18;4477:6;4459:45;:::i;6411:352::-;6613:2;6595:21;;;6652:2;6632:18;;;6625:30;6691;6686:2;6671:18;;6664:58;6754:2;6739:18;;6411:352::o;6768:351::-;6970:2;6952:21;;;7009:2;6989:18;;;6982:30;7048:29;7043:2;7028:18;;7021:57;7110:2;7095:18;;6768:351::o;8420:291::-;8597:6;8586:9;8579:25;8640:2;8635;8624:9;8620:18;8613:30;8560:4;8660:45;8701:2;8690:9;8686:18;8678:6;8660:45;:::i;9293:128::-;9333:3;9364:1;9360:6;9357:1;9354:13;9351:39;;;9370:18;;:::i;:::-;-1:-1:-1;9406:9:9;;9293:128::o;9426:120::-;9466:1;9492;9482:35;;9497:18;;:::i;:::-;-1:-1:-1;9531:9:9;;9426:120::o;9551:125::-;9591:4;9619:1;9616;9613:8;9610:34;;;9624:18;;:::i;:::-;-1:-1:-1;9661:9:9;;9551:125::o;9681:258::-;9753:1;9763:113;9777:6;9774:1;9771:13;9763:113;;;9853:11;;;9847:18;9834:11;;;9827:39;9799:2;9792:10;9763:113;;;9894:6;9891:1;9888:13;9885:48;;;9929:1;9920:6;9915:3;9911:16;9904:27;9885:48;;9681:258;;;:::o;9944:380::-;10023:1;10019:12;;;;10066;;;10087:61;;10141:4;10133:6;10129:17;10119:27;;10087:61;10194:2;10186:6;10183:14;10163:18;10160:38;10157:161;;;10240:10;10235:3;10231:20;10228:1;10221:31;10275:4;10272:1;10265:15;10303:4;10300:1;10293:15;10157:161;;9944:380;;;:::o;10329:346::-;10439:2;10420:13;;-1:-1:-1;;10416:27:9;10404:40;;10474:18;10459:34;;10495:22;;;10456:62;10453:185;;;10560:10;10555:3;10551:20;10548:1;10541:31;10595:4;10592:1;10585:15;10623:4;10620:1;10613:15;10453:185;10654:2;10647:22;-1:-1:-1;;10329:346:9:o;10680:135::-;10719:3;-1:-1:-1;;10740:17:9;;10737:43;;;10760:18;;:::i;:::-;-1:-1:-1;10807:1:9;10796:13;;10680:135::o;10820:112::-;10852:1;10878;10868:35;;10883:18;;:::i;:::-;-1:-1:-1;10917:9:9;;10820:112::o;10937:127::-;10998:10;10993:3;10989:20;10986:1;10979:31;11029:4;11026:1;11019:15;11053:4;11050:1;11043:15;11069:127;11130:10;11125:3;11121:20;11118:1;11111:31;11161:4;11158:1;11151:15;11185:4;11182:1;11175:15;11201:127;11262:10;11257:3;11253:20;11250:1;11243:31;11293:4;11290:1;11283:15;11317:4;11314:1;11307:15;11333:127;11394:10;11389:3;11385:20;11382:1;11375:31;11425:4;11422:1;11415:15;11449:4;11446:1;11439:15;11465:179;11500:3;11542:1;11524:16;11521:23;11518:120;;;11588:1;11585;11582;11567:23;-1:-1:-1;11625:1:9;11619:8;11614:3;11610:18;11465:179;:::o;11649:671::-;11688:3;11730:4;11712:16;11709:26;11706:39;;;11649:671;:::o;11706:39::-;11772:2;11766:9;-1:-1:-1;;11837:16:9;11833:25;;11830:1;11766:9;11809:50;11888:4;11882:11;11912:16;11947:18;12018:2;12011:4;12003:6;11999:17;11996:25;11991:2;11983:6;11980:14;11977:45;11974:58;;;12025:5;;;;;11649:671;:::o;11974:58::-;12062:6;12056:4;12052:17;12041:28;;12098:3;12092:10;12125:2;12117:6;12114:14;12111:27;;;12131:5;;;;;;11649:671;:::o;12111:27::-;12215:2;12196:16;12190:4;12186:27;12182:36;12175:4;12166:6;12161:3;12157:16;12153:27;12150:69;12147:82;;;12222:5;;;;;;11649:671;:::o;12147:82::-;12238:57;12289:4;12280:6;12272;12268:19;12264:30;12258:4;12238:57;:::i;:::-;-1:-1:-1;12311:3:9;;11649:671;-1:-1:-1;;;;;11649:671:9:o;12325:131::-;-1:-1:-1;;;;;12400:31:9;;12390:42;;12380:70;;12446:1;12443;12436:12;12380:70;12325:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1057800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ContractBalance()": "2447",
								"CryptoRandomMint(address)": "infinite",
								"FiatRandomMint(address)": "infinite",
								"IsPaused()": "2355",
								"Owner()": "2436",
								"checkMintedCategoryWise()": "8801",
								"checkTotalMinted()": "4475",
								"openDropsite()": "28733",
								"returnOwner(address)": "infinite",
								"stopDropsite()": "28729",
								"withDraw(address)": "infinite"
							},
							"internal": {
								"depositAmount(address,uint256)": "24404",
								"random()": "infinite",
								"updateConditions()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 241,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "280"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 468,
									"end": 469,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 472,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "160"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "180"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "1A0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "1C0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "1E0"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "200"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "220"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "240"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "260"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1440,
									"end": 1444,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1444,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1511,
									"end": 1786,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1558,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1553,
									"end": 1558,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1591,
									"end": 1601,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1575,
									"end": 1602,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1628,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1613,
									"end": 1630,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1613,
									"end": 1630,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1613,
									"end": 1630,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1664,
									"end": 1675,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1664,
									"end": 1677,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1771,
									"end": 1777,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1771,
									"end": 1779,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "POP",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 6210,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220beaa33ab9fc5e1b7eab3f745dfa9316cd77b5213ba482cc3b30f7d47456edd5c64736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "3B668059"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "3D65DF70"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "60DAA851"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "AA90C726"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "B4A99A4E"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "FD6C3B1B"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "390C11C"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "A67D2C7"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "1309A563"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "15460259"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "32B61B4C"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 6210,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8384,
											"end": 8409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8384,
											"end": 8409,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8374,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4256,
											"end": 4278,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4098,
											"end": 4285,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9171,
											"end": 9196,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9171,
											"end": 9196,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9171,
											"end": 9196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9227,
											"end": 9229,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 8969,
											"end": 9288,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2669,
											"end": 2888,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2111,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2599,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7680,
											"end": 7682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7662,
											"end": 7683,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7721,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH",
											"source": 9,
											"value": "4572726F7221204E6F2042616C616E636520746F207769746864726177000000"
										},
										{
											"begin": 7738,
											"end": 7756,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7738,
											"end": 7756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7731,
											"end": 7790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7478,
											"end": 7831,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2609,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2688,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2704,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2318,
											"end": 2332,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5913,
											"end": 5943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 6008,
											"name": "PUSH",
											"source": 9,
											"value": "44726F707369746520697320616C72656164792052756E6E696E670000000000"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5952,
											"end": 6009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5699,
											"end": 6050,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2310,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2395,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5051,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5051,
											"end": 5064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5101,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7308,
											"end": 7329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7338,
											"end": 7368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7377,
											"end": 7432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7124,
											"end": 7473,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5073,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5207,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5194,
											"end": 5225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5194,
											"end": 5225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5237,
											"end": 5246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5255,
											"end": 5266,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5255,
											"end": 5266,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5272,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5231,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5294,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5363,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5357,
											"end": 5362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5357,
											"end": 5362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5369,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 5403,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2837,
											"end": 2858,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5620,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5728,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5715,
											"end": 5728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5761,
											"end": 5765,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5745,
											"end": 5765,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7308,
											"end": 7329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7338,
											"end": 7368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08135A5B9D1A5B99C8131A5B5A5D081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7377,
											"end": 7432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7124,
											"end": 7473,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5737,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5819,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5844,
											"name": "PUSH",
											"source": 2,
											"value": "15AF1D78B58C40000"
										},
										{
											"begin": 5810,
											"end": 5845,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5625,
											"end": 5652,
											"name": "PUSH",
											"source": 9,
											"value": "42616C616E6365206D757374206265203235204D617469637300000000000000"
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5598,
											"end": 5653,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5345,
											"end": 5694,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5802,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5955,
											"end": 5965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5968,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5955,
											"end": 5986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5955,
											"end": 5986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5998,
											"end": 6007,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6027,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6016,
											"end": 6027,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6033,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5992,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1946,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1939,
											"end": 1946,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1946,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1840,
											"end": 1967,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1165,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2175,
											"end": 2183,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2175,
											"end": 2183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6259,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6239,
											"end": 6260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6298,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6335,
											"end": 6364,
											"name": "PUSH",
											"source": 9,
											"value": "44726F707369746520697320616C72656164792053746F707065640000000000"
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6055,
											"end": 6406,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2167,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2240,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 999,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 986,
											"end": 999,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1068,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3322,
											"end": 4910,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3322,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1333,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3450,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3580,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3551,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3662,
											"end": 3687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3662,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3662,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3620,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3723,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3551,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3843,
											"end": 3848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3867,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3840,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3887,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3942,
											"end": 3964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3942,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3942,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 3917,
											"end": 3965,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3840,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4113,
											"end": 4118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4123,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4140,
											"name": "PUSH",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4110,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4224,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 4183,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4110,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4110,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4490,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4480,
											"end": 4490,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4896,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 4477,
											"end": 4896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4896,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 4477,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4738,
											"end": 4745,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 1387,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 835,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 983,
											"end": 999,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 983,
											"end": 999,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8040,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8020,
											"end": 8041,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8079,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8116,
											"end": 8150,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8208,
											"end": 8227,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8208,
											"end": 8227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7836,
											"end": 8233,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 975,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1160,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1192,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1090,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1219,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1229,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8924,
											"end": 8958,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8924,
											"end": 8958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8924,
											"end": 8958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "PUSH",
											"source": 3,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1296,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1337,
											"end": 1345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1379,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1306,
											"end": 1380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5560,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5560,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5560,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2941,
											"end": 3137,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2941,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3097,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2580,
											"end": 2595,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2629,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2573,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2664,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3043,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3100,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 3038,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3105,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3137,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 3137,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 398,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 602,
											"end": 612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 598,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 598,
											"end": 649,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 628,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 649,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 598,
											"end": 649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 658,
											"end": 670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 719,
											"end": 728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 719,
											"end": 728,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 744,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 766,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 774,
											"end": 776,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 766,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 766,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 766,
											"end": 776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 712,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 712,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 712,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 796,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 818,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 818,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 796,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 852,
											"end": 862,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 852,
											"end": 862,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 878,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 888,
											"end": 889,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 878,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 878,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 933,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 933,
											"end": 957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 959,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 920,
											"end": 959,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 903,
											"end": 959,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 959,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 959,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 973,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 973,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 973,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 973,
											"end": 984,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 973,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 995,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 845,
											"end": 995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1032,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2429,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2413,
											"end": 2429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2540,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1609,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1836,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1819,
											"end": 2335,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15D13449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "AE89A248"
										},
										{
											"begin": 1858,
											"end": 1896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1905,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1911,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1858,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A0"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4717,
											"end": 4719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4829,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4515,
											"end": 4931,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1854,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 2034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15D13449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2034,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5141,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5250,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5315,
											"end": 5334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4936,
											"end": 5340,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1975,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 2141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "186"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "295"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "295"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "205"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "310"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "310"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 261,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 526,
											"end": 816,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 526,
											"end": 816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 595,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 627,
											"end": 634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 623,
											"end": 646,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 619,
											"end": 651,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 616,
											"end": 668,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 616,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 616,
											"end": 668,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 662,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 654,
											"end": 666,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 616,
											"end": 668,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 616,
											"end": 668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 690,
											"end": 706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 706,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 735,
											"end": 767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 735,
											"end": 767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 725,
											"end": 768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 715,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 715,
											"end": 786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 772,
											"end": 784,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 821,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 821,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 863,
											"end": 866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 928,
											"end": 934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 923,
											"end": 926,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 916,
											"end": 935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 944,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 991,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 984,
											"end": 998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 975,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 966,
											"end": 982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 944,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 944,
											"end": 1007,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 1007,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 944,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1072,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1073,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 821,
											"end": 1079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 821,
											"end": 1079,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1084,
											"end": 1509,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1084,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4469616D6F6E645F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1447,
											"end": 1450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1402,
											"end": 1463,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1402,
											"end": 1463,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1402,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1479,
											"end": 1503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1503,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1509,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 1936,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1514,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "476F6C645F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1883,
											"end": 1889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1874,
											"end": 1877,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1906,
											"end": 1930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1930,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1936,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1936,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2365,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1941,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53696C7665725F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2213,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2249,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2303,
											"end": 2306,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2299,
											"end": 2310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2296,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2258,
											"end": 2319,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2319,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2258,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 2365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2365,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 3456,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2893,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3207,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3192,
											"end": 3207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3192,
											"end": 3207,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3241,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3303,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3336,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3346,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3157,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3377,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3362,
											"end": 3381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3404,
											"end": 3450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3404,
											"end": 3450,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3404,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3404,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3450,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3456,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 3456,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3461,
											"end": 4093,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3461,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3705,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3705,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3870,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4057,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4057,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3898,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 4093,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 4093,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4290,
											"end": 4510,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4290,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4439,
											"end": 4441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4483,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6411,
											"end": 6763,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6411,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6613,
											"end": 6615,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6595,
											"end": 6616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6595,
											"end": 6616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6595,
											"end": 6616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6652,
											"end": 6654,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6655,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6691,
											"end": 6721,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79204E46542D4553204F776E65722063616E2041636365737300000000"
										},
										{
											"begin": 6686,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6411,
											"end": 6763,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6768,
											"end": 7119,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6768,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6952,
											"end": 6973,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6952,
											"end": 6973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6952,
											"end": 6973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7077,
											"name": "PUSH",
											"source": 9,
											"value": "44726F7073697465206973206E6F74204F70656E6564205965742E0000000000"
										},
										{
											"begin": 7043,
											"end": 7045,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7078,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7110,
											"end": 7112,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 7119,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8420,
											"end": 8711,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 8420,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8597,
											"end": 8603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8586,
											"end": 8595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8579,
											"end": 8604,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8624,
											"end": 8633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8613,
											"end": 8643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8701,
											"end": 8703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8690,
											"end": 8699,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8684,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8660,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 8660,
											"end": 8705,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9293,
											"end": 9421,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9293,
											"end": 9421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9360,
											"end": 9366,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9367,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9390,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9351,
											"end": 9390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9406,
											"end": 9415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9293,
											"end": 9421,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9426,
											"end": 9546,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9426,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9467,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9482,
											"end": 9517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9546,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9551,
											"end": 9676,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 9551,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9621,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 9610,
											"end": 9644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9661,
											"end": 9670,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9661,
											"end": 9670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9551,
											"end": 9676,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9681,
											"end": 9939,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9681,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9753,
											"end": 9754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9777,
											"end": 9783,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9784,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 9864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 9864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 9864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9834,
											"end": 9845,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9834,
											"end": 9845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9834,
											"end": 9845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9866,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9799,
											"end": 9801,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9792,
											"end": 9802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 9763,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9888,
											"end": 9901,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9933,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 9885,
											"end": 9933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 9930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9926,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9915,
											"end": 9918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9911,
											"end": 9927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9904,
											"end": 9931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9933,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 9885,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9681,
											"end": 9939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9681,
											"end": 9939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9681,
											"end": 9939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9681,
											"end": 9939,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9944,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9944,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10019,
											"end": 10031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10031,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10066,
											"end": 10078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10066,
											"end": 10078,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10066,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10087,
											"end": 10148,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10141,
											"end": 10145,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10148,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10087,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10194,
											"end": 10196,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10197,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10160,
											"end": 10198,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10157,
											"end": 10318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10235,
											"end": 10238,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10231,
											"end": 10251,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10221,
											"end": 10252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10279,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10272,
											"end": 10273,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10265,
											"end": 10280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10307,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10308,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10318,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10157,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 10324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 10324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 10324,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10329,
											"end": 10675,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10329,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10441,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10420,
											"end": 10433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10416,
											"end": 10443,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10459,
											"end": 10493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10493,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10517,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10518,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 10638,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 10453,
											"end": 10638,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10570,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10555,
											"end": 10558,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10551,
											"end": 10571,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10599,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10585,
											"end": 10600,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10623,
											"end": 10627,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10620,
											"end": 10621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10628,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 10638,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 10453,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10656,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10647,
											"end": 10669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10329,
											"end": 10675,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10680,
											"end": 10815,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 10680,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10740,
											"end": 10757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10740,
											"end": 10757,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10780,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10737,
											"end": 10780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10807,
											"end": 10808,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10796,
											"end": 10809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10796,
											"end": 10809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10680,
											"end": 10815,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10820,
											"end": 10932,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10820,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10878,
											"end": 10879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10868,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10868,
											"end": 10903,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10917,
											"end": 10926,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 10926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10820,
											"end": 10932,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10937,
											"end": 11064,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10937,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11008,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10993,
											"end": 10996,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10989,
											"end": 11009,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 10987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 11010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11033,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11034,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11053,
											"end": 11057,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11050,
											"end": 11051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11058,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11069,
											"end": 11196,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 11069,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11130,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11125,
											"end": 11128,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11121,
											"end": 11141,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11165,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11151,
											"end": 11166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11185,
											"end": 11189,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11328,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11201,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11262,
											"end": 11272,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11257,
											"end": 11260,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11253,
											"end": 11273,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11250,
											"end": 11251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11293,
											"end": 11297,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11290,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11321,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11314,
											"end": 11315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11333,
											"end": 11460,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 11333,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11394,
											"end": 11404,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11389,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11385,
											"end": 11405,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11425,
											"end": 11429,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 11422,
											"end": 11423,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11415,
											"end": 11430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11449,
											"end": 11453,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11454,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11465,
											"end": 11644,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11465,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11500,
											"end": 11503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11543,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11524,
											"end": 11540,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11544,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11638,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 11518,
											"end": 11638,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11589,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11585,
											"end": 11586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11583,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11590,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11625,
											"end": 11626,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11619,
											"end": 11627,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11614,
											"end": 11617,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 11465,
											"end": 11644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11465,
											"end": 11644,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11712,
											"end": 11728,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11709,
											"end": 11735,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11706,
											"end": 11745,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11706,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11706,
											"end": 11745,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11706,
											"end": 11745,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11706,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11766,
											"end": 11775,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11837,
											"end": 11853,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11766,
											"end": 11775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11859,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11888,
											"end": 11892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11882,
											"end": 11893,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11965,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12018,
											"end": 12020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12015,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12003,
											"end": 12009,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12021,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 11993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 11994,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11977,
											"end": 12022,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 12032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11974,
											"end": 12032,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12025,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12025,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12025,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12025,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12025,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11974,
											"end": 12032,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11974,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12056,
											"end": 12060,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12052,
											"end": 12069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12069,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12092,
											"end": 12102,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12125,
											"end": 12127,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12128,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12138,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 12111,
											"end": 12138,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12111,
											"end": 12138,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 12111,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12212,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12166,
											"end": 12172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12161,
											"end": 12164,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12157,
											"end": 12173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12150,
											"end": 12219,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12147,
											"end": 12229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12147,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12147,
											"end": 12229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12147,
											"end": 12229,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12147,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12238,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 12289,
											"end": 12293,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12258,
											"end": 12262,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12238,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 12238,
											"end": 12295,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12238,
											"end": 12295,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 12238,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12311,
											"end": 12314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12314,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11649,
											"end": 12320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12325,
											"end": 12456,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 12325,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12400,
											"end": 12431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12431,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12432,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12380,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12380,
											"end": 12450,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12446,
											"end": 12447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12443,
											"end": 12444,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12436,
											"end": 12448,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12380,
											"end": 12450,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12380,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12325,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12325,
											"end": 12456,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ContractBalance()": "3b668059",
							"CryptoRandomMint(address)": "3d65df70",
							"FiatRandomMint(address)": "32b61b4c",
							"IsPaused()": "1309a563",
							"Owner()": "b4a99a4e",
							"checkMintedCategoryWise()": "60daa851",
							"checkTotalMinted()": "0390c11c",
							"openDropsite()": "15460259",
							"returnOwner(address)": "fd6c3b1b",
							"stopDropsite()": "aa90c726",
							"withDraw(address)": "0a67d2c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"CryptoRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"FiatRandomMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMintedCategoryWise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkTotalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"returnOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopDropsite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dropsite.sol\":\"Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"Dropsite.sol\":{\"keccak256\":\"0x7693114f4073c2aee83fb97cc7bd95f11f7590169ffb4f485b44aa01af5d1aa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2be100823b47a06b2d8e7fd4dd07f1eb2f5d9d915d484498505050c16e46f0ff\",\"dweb:/ipfs/QmQJkkJBUbxCZctoXJXPG4L6ZWA2KiBEqQFggAUmut29QN\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x5dfb07a5226b29aa22b048f5c22ba440e8a2d96bf9222fdcba0a5790fd983149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b8817b7265760276c67a1b98420b973f8d871106f5dff958e0604c28a6c96\",\"dweb:/ipfs/QmQgPUje4qFjR1ZbJT6YnYAy6yKms8xi2FP4kBFLuz86Zp\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]},\"Strings.sol\":{\"keccak256\":\"0x9b07ef0960de9137c24d6b8f1c6dab797b2c3a1503d8120900fe1cd662c5d46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52e859a9d10dfeda997d2d2d64e4ff824053adf96e016062c1c4249975180ba\",\"dweb:/ipfs/QmSzMC9dpXpD83GXyVU84zYqSDu88RteVEKuqa3N8wTLKW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155_Dropsite.sol": {
				"ERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155_Dropsite.sol\":490:2542  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155_Dropsite.sol\":490:2542  contract ERC1155_Dropsite is Context, IERC1155_Dropsite  {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD MOD CALLDATALOAD 0x2F PUSH4 0xC21B9306 DUP11 SHL ADDMOD SWAP2 SWAP3 EQ 0x29 MSTORE8 0x5D PUSH9 0xEC2E4E4A144170B793 SELFDESTRUCT 0x26 SLT 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:2052:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD MOD CALLDATALOAD 0x2F PUSH4 0xC21B9306 DUP11 SHL ADDMOD SWAP2 SWAP3 EQ 0x29 MSTORE8 0x5D PUSH9 0xEC2E4E4A144170B793 SELFDESTRUCT 0x26 SLT 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:2052:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,string memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,string memory)": "infinite",
								"_mint(address,uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2542,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200706352f63c21b93068a1b0891921429535d68ec2e4e4a144170b793ff26122864736f6c63430008070033",
									".code": [
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 2542,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155_Dropsite.sol\":\"ERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x319d92b11370e4d8d67b46b5e3c9440780e7ab534900dda6c4d50df6c281c67f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f422b0f947eb48dc5a9ae8aaf16bdbf038dfddf3ae84af9e68b928802b83d85\",\"dweb:/ipfs/QmZeYZ6wN1W3h4R5X3s3bj4zMrxgs3aay5fsvCLa1AaWHx\"]},\"Context.sol\":{\"keccak256\":\"0xb1f2346e979ad24141da4cb0466bd1ec05ad3d823e806deaf9fff9ad7ef24fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://515e9c2dcf6643fdee022160ba0f3d0146db9a335ae3a5387449c724074c8515\",\"dweb:/ipfs/QmT2hrjXKFroYhu3jtfU3Fi6n8W6mTsFsDoxgU9G7vdUo4\"]},\"ERC1155_Dropsite.sol\":{\"keccak256\":\"0x5dfb07a5226b29aa22b048f5c22ba440e8a2d96bf9222fdcba0a5790fd983149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b8817b7265760276c67a1b98420b973f8d871106f5dff958e0604c28a6c96\",\"dweb:/ipfs/QmQgPUje4qFjR1ZbJT6YnYAy6yKms8xi2FP4kBFLuz86Zp\"]},\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165_Dropsite.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165_Dropsite.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165_Dropsite.sol\":{\"keccak256\":\"0xac4083993fda4e1dbd53bdbfb56b46abcd5b93f2851db7e17b992aecedfb3eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db96c5f138bfc20039a9a4a0074c58bb2482a5daabf8046520bc0541703f8de7\",\"dweb:/ipfs/QmVfWJ9999FnUAoLcVvvufBuMFfS1P72b71CBcBGC5jPUw\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver_Dropsite.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "data",
									"type": "string"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,string)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,string)": "ae89a248"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,string)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver_Dropsite.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver_Dropsite.sol\":{\"keccak256\":\"0xe4f9e905983017b16f15bd27921ef2532aaff6e3acbada60864446f37d17c878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d2f4104be37d39ab9bb89efe463b49cf4e587111a22c4962a1c612cd0f7c00\",\"dweb:/ipfs/QmY356PjomTD3w8xVT6tC59CyZ8fixhxCusVnMnAb98fTq\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155_Dropsite.sol": {
				"IERC1155_Dropsite": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155_Dropsite.sol\":\"IERC1155_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155_Dropsite.sol\":{\"keccak256\":\"0xadf886d9147e0bed64e31a2d7e07bdaa5e5f12aa8d671727c44b958c7f406dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce9838c1c9bb383c55192e0a2be3db3399701e5fe4b539df371a26e0e6751bd\",\"dweb:/ipfs/QmWvHb9V2WRZcATTtDuMWdWU4iQ1vkuXd6XxZwTWHDYhbe\"]},\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165_Dropsite.sol": {
				"IERC165_Dropsite": {
					"abi": [],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165_Dropsite.sol\":\"IERC165_Dropsite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165_Dropsite.sol\":{\"keccak256\":\"0x80b1b785b4a630bb16e4d9874f4e4546c35e8c94877bb4a2a30730d3b254b87c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f679d3a8c9210da1ec4e4dc28e4ecbad6225dff4e5667a18eb76ff0601f55ada\",\"dweb:/ipfs/QmezejwTuLL7MhMv5Yosrpz4aYa5AidU8sqb3iBBP68CKb\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.;",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Strings.sol\":147:2032  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Strings.sol\":147:2032  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xCC AND 0x4C ADDMOD PUSH19 0xC87321ACDEAA92D5B52750F63A4F5EF2A91363 BYTE 0x5F 0x2C STOP PUSH25 0x341864736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "147:1885:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;147:1885:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xCC AND 0x4C ADDMOD PUSH19 0xC87321ACDEAA92D5B52750F63A4F5EF2A91363 BYTE 0x5F 0x2C STOP PUSH25 0x341864736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "147:1885:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0cc164c0872c87321acdeaa92d5b52750f63a4f5ef2a913631a5f2c0078341864736f6c63430008070033",
									".code": [
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.;\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Strings.sol\":{\"keccak256\":\"0x9b07ef0960de9137c24d6b8f1c6dab797b2c3a1503d8120900fe1cd662c5d46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52e859a9d10dfeda997d2d2d64e4ff824053adf96e016062c1c4249975180ba\",\"dweb:/ipfs/QmSzMC9dpXpD83GXyVU84zYqSDu88RteVEKuqa3N8wTLKW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Address",
							"nameLocation": "187:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "837:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1056:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1126:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 296,
									"src": "771:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2136:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2084:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 296,
									"src": "2065:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3208:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3218:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3194:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:0"
									},
									"scope": 296,
									"src": "3119:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3661:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3671:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3569:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3647:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:0"
									},
									"scope": 296,
									"src": "3514:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 296,
									"src": "4099:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4780:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$296",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4994:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5042:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5035:58:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4692:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4715:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4766:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:0"
									},
									"scope": 296,
									"src": "4601:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5377:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5387:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5321:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:0"
									},
									"scope": 296,
									"src": "5277:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5816:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5905:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5919:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6024:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5986:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5979:58:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5802:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:0"
									},
									"scope": 296,
									"src": "5658:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6320:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6330:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:0"
									},
									"scope": 296,
									"src": "6223:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6762:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6974:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6929:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6748:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:0"
									},
									"scope": 296,
									"src": "6607:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7374:532:0",
										"statements": [
											{
												"condition": {
													"id": 276,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7445:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 280,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "7529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 290,
																"nodeType": "Block",
																"src": "7837:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 287,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "7862:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 286,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:0"
																	}
																]
															},
															"id": 291,
															"nodeType": "IfStatement",
															"src": "7525:365:0",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "7552:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 269,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 284,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7384:516:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "7397:42:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7418:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 275,
															"id": 278,
															"nodeType": "Return",
															"src": "7411:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7271:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7304:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:0"
									},
									"scope": 296,
									"src": "7214:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "179:7729:0",
							"usedErrors": []
						}
					],
					"src": "86:7822:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 318,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 318,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"Dropsite.sol": {
				"ast": {
					"absolutePath": "Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"Dropsite": [
							876
						],
						"ERC1155_Dropsite": [
							1087
						],
						"ERC165": [
							1110
						],
						"IERC1155Receiver": [
							1151
						],
						"IERC1155_Dropsite": [
							1171
						],
						"IERC165_Dropsite": [
							1175
						],
						"Strings": [
							1378
						]
					},
					"id": 877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:2"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "54:33:2"
						},
						{
							"absolutePath": "ERC1155_Dropsite.sol",
							"file": "./ERC1155_Dropsite.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 877,
							"sourceUnit": 1088,
							"src": "88:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Strings.sol",
							"file": "./Strings.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 877,
							"sourceUnit": 1379,
							"src": "122:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "ERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "167:16:2"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "167:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 876,
							"linearizedBaseContracts": [
								876,
								1087,
								1171,
								1175,
								318
							],
							"name": "Dropsite",
							"nameLocation": "155:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 328,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "249:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "241:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 326,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "241:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "255:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "nums",
									"nameLocation": "458:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "440:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint8_$20_storage",
										"typeString": "uint8[20]"
									},
									"typeName": {
										"baseType": {
											"id": 329,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "440:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"id": 331,
										"length": {
											"hexValue": "3230",
											"id": 330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "446:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20_by_1",
												"typeString": "int_const 20"
											},
											"value": "20"
										},
										"nodeType": "ArrayTypeName",
										"src": "440:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_storage_ptr",
											"typeString": "uint8[20]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 332,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "466:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 333,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "468:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "470:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "32",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "472:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "474:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 337,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "476:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 338,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "478:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "480:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 340,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "482:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "484:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "486:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "488:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 344,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "490:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 345,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "492:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 346,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "494:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 347,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "496:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "498:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "500:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 350,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "502:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "32",
												"id": 351,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											}
										],
										"id": 352,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "465:41:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$20_memory_ptr",
											"typeString": "uint8[20] memory"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "TotalNFTsMinted",
									"nameLocation": "523:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "518:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "518:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "numOfCopies",
									"nameLocation": "566:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "561:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "561:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "Diamond",
									"nameLocation": "652:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "647:12:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "647:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 361,
									"mutability": "mutable",
									"name": "Gold",
									"nameLocation": "682:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "677:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "677:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "697:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "692:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "692:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Dropsite.nft_Owner",
									"id": 367,
									"members": [
										{
											"constant": false,
											"id": 366,
											"mutability": "mutable",
											"name": "owned_Dropsite_NFTs",
											"nameLocation": "802:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 367,
											"src": "795:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 365,
												"nodeType": "ArrayTypeName",
												"src": "795:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "nft_Owner",
									"nameLocation": "776:9:2",
									"nodeType": "StructDefinition",
									"scope": 876,
									"src": "769:59:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "dropsite_NFT_Owner",
									"nameLocation": "863:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "833:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$367_storage_$",
										"typeString": "mapping(address => struct Dropsite.nft_Owner)"
									},
									"typeName": {
										"id": 371,
										"keyType": {
											"id": 368,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "833:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$367_storage_$",
											"typeString": "mapping(address => struct Dropsite.nft_Owner)"
										},
										"valueType": {
											"id": 370,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 369,
												"name": "nft_Owner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "851:9:2"
											},
											"referencedDeclaration": 367,
											"src": "851:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_nft_Owner_$367_storage_ptr",
												"typeString": "struct Dropsite.nft_Owner"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1000:68:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 380,
															"name": "dropsite_NFT_Owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1017:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$367_storage_$",
																"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
															}
														},
														"id": 382,
														"indexExpression": {
															"id": 381,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1036:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1017:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_nft_Owner_$367_storage",
															"typeString": "struct Dropsite.nft_Owner storage ref"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owned_Dropsite_NFTs",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 366,
													"src": "1017:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 379,
												"id": 384,
												"nodeType": "Return",
												"src": "1010:51:2"
											}
										]
									},
									"functionSelector": "fd6c3b1b",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnOwner",
									"nameLocation": "939:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "959:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "951:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:14:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "986:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 376,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "986:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 377,
													"nodeType": "ArrayTypeName",
													"src": "986:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:15:2"
									},
									"scope": 876,
									"src": "930:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "1124:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "1098:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 389,
										"keyType": {
											"id": 387,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1107:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1098:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 388,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1118:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "1155:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 393,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1173:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1173:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 395,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1189:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1173:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204e46542d4553204f776e65722063616e20416363657373",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															},
															"value": "Only NFT-ES Owner can Access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3cb80bc43eaf0e89fef9b05bb34f1310daa2b2c1e2ca9c2f221243145f93dd3",
																"typeString": "literal_string \"Only NFT-ES Owner can Access\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1165:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1165:62:2"
											},
											{
												"id": 400,
												"nodeType": "PlaceholderStatement",
												"src": "1237:1:2"
											}
										]
									},
									"id": 402,
									"name": "OnlyOwner",
									"nameLocation": "1145:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:2"
									},
									"src": "1136:109:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1323:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1342:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1354:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1342:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f7073697465206973206e6f74204f70656e6564205965742e",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1361:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															},
															"value": "Dropsite is not Opened Yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbbc8bbb9f31b74dab0815b3743da2eecd57a018068bbbdd893564a8ec7e67fa",
																"typeString": "literal_string \"Dropsite is not Opened Yet.\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1333:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1333:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "1333:59:2"
											},
											{
												"id": 411,
												"nodeType": "PlaceholderStatement",
												"src": "1402:1:2"
											}
										]
									},
									"id": 413,
									"name": "contractIsNotPaused",
									"nameLocation": "1302:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:2"
									},
									"src": "1293:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1309a563",
									"id": 416,
									"mutability": "mutable",
									"name": "IsPaused",
									"nameLocation": "1429:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "1417:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 414,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1417:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1440:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 418,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "1474:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "1450:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 417,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1450:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 420,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1500:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "1485:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 419,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1485:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "1543:243:2",
										"statements": [
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1553:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 426,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "1561:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1553:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1553:12:2"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1575:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 432,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1591:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1591:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1583:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 430,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1583:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1583:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1575:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1575:27:2"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1613:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1629:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1613:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "1613:17:2"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "numOfCopies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1664:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1676:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1664:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "1664:13:2"
											},
											{
												"expression": {
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 445,
														"name": "Diamond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1724:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1732:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1724:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "1724:9:2"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 449,
														"name": "Gold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1755:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1755:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1755:6:2"
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 453,
														"name": "Silver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1771:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1778:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1771:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1771:8:2"
											}
										]
									},
									"id": 458,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1538:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1524:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1524:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:20:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1543:0:2"
									},
									"scope": 876,
									"src": "1511:275:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1920:47:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 469,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1939:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 470,
															"name": "Gold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1947:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 471,
															"name": "Silver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "1952:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 472,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1938:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 468,
												"id": 473,
												"nodeType": "Return",
												"src": "1931:28:2"
											}
										]
									},
									"functionSelector": "60daa851",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 460,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "1887:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1887:9:2"
										}
									],
									"name": "checkMintedCategoryWise",
									"nameLocation": "1849:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1872:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1905:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1910:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1910:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1915:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1915:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:16:2"
									},
									"scope": 876,
									"src": "1840:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2070:41:2",
										"statements": [
											{
												"expression": {
													"id": 482,
													"name": "TotalNFTsMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 355,
													"src": "2088:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "2081:22:2"
											}
										]
									},
									"functionSelector": "0390c11c",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "2047:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2047:9:2"
										}
									],
									"name": "checkTotalMinted",
									"nameLocation": "2016:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2065:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2065:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:6:2"
									},
									"scope": 876,
									"src": "2007:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2157:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "2175:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2185:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2175:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792053746f70706564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															},
															"value": "Dropsite is already Stopped"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69472f4a8b5382aff028f9f4e86a946424290f8924d040bc887b803232ae8c8f",
																"typeString": "literal_string \"Dropsite is already Stopped\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2167:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2167:55:2"
											},
											{
												"expression": {
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 497,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2232:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2241:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2232:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "2232:13:2"
											}
										]
									},
									"functionSelector": "aa90c726",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 487,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "2148:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2148:9:2"
										}
									],
									"name": "stopDropsite",
									"nameLocation": "2126:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:0:2"
									},
									"scope": 876,
									"src": "2117:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "2300:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 508,
																"name": "IsPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "2318:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2328:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2318:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44726f707369746520697320616c72656164792052756e6e696e67",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2334:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															},
															"value": "Dropsite is already Running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4898c1dfd200ba7bf25ad942ccf0bad1de039d462cf344548e72a77a9edfb8a3",
																"typeString": "literal_string \"Dropsite is already Running\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2310:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2310:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "2310:54:2"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "IsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2383:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2374:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "2374:14:2"
											}
										]
									},
									"functionSelector": "15460259",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "2290:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2290:9:2"
										}
									],
									"name": "openDropsite",
									"nameLocation": "2268:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:0:2"
									},
									"scope": 876,
									"src": "2259:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "2553:151:2",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "Balance",
														"nameLocation": "2568:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "2563:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 530,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2586:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$876",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$876",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2578:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 528,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2578:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2578:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2578:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2563:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "Balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "2617:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2627:5:2",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2617:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f7221204e6f2042616c616e636520746f207769746864726177",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2634:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															},
															"value": "Error! No Balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e0d6cdfc9718ee866a601e2a04f53ab7b30040e254c152ba683ae01eb2f62c",
																"typeString": "literal_string \"Error! No Balance to withdraw\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2609:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2609:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "2609:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "2677:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2677:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2677:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "2677:20:2"
											}
										]
									},
									"functionSelector": "0a67d2c7",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 523,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "2543:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2543:9:2"
										}
									],
									"name": "withDraw",
									"nameLocation": "2499:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2524:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2508:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2508:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:20:2"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:2"
									},
									"scope": 876,
									"src": "2490:214:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "2820:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 557,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2845:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Dropsite_$876",
																	"typeString": "contract Dropsite"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Dropsite_$876",
																	"typeString": "contract Dropsite"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2837:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2837:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2837:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2837:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 560,
												"nodeType": "Return",
												"src": "2830:28:2"
											}
										]
									},
									"functionSelector": "3b668059",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 550,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "2796:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2796:9:2"
										}
									],
									"name": "ContractBalance",
									"nameLocation": "2766:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2781:2:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "2815:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2815:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:6:2"
									},
									"scope": 876,
									"src": "2757:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "2988:149:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "randomnumber",
														"nameLocation": "3023:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "3018:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 567,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3018:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 574,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3070:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3070:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 576,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3087:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3087:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 572,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3053:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3053:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3053:45:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 571,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3043:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3043:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3038:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 569,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3038:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3038:62:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3230",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3103:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "3038:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3018:87:2"
											},
											{
												"expression": {
													"id": 584,
													"name": "randomnumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "3118:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 566,
												"id": 585,
												"nodeType": "Return",
												"src": "3111:19:2"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "2950:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:2:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2982:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2982:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:6:2"
									},
									"scope": 876,
									"src": "2941:196:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "3393:1517:2",
										"statements": [
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3407:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "3402:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 594,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3402:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 596,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3415:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3415:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3402:21:2"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "3438:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "3433:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3433:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"baseExpression": {
														"id": 601,
														"name": "nums",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3446:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$20_storage",
															"typeString": "uint8[20] storage ref"
														}
													},
													"id": 603,
													"indexExpression": {
														"id": 602,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3451:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3446:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3433:24:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 605,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3554:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3563:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3554:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 608,
															"name": "Diamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3568:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3530",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3578:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "3568:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3554:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "3843:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3852:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3843:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "Gold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "3857:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "313030",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3864:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3857:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3843:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 659,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "4113:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4122:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4113:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 662,
																	"name": "Silver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "4127:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "383530",
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4137:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_850_by_1",
																		"typeString": "int_const 850"
																	},
																	"value": "850"
																},
																"src": "4127:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4113:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 740,
															"nodeType": "Block",
															"src": "4314:591:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 688,
																			"name": "Gold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "4480:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4487:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "4480:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 738,
																		"nodeType": "Block",
																		"src": "4693:203:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 715,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "4711:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4719:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "4711:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 718,
																				"nodeType": "ExpressionStatement",
																				"src": "4711:9:2"
																			},
																			{
																				"expression": {
																					"id": 720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4738:9:2",
																					"subExpression": {
																						"id": 719,
																						"name": "Diamond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 359,
																						"src": "4738:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 721,
																				"nodeType": "ExpressionStatement",
																				"src": "4738:9:2"
																			},
																			{
																				"expression": {
																					"id": 734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 722,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "4765:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "4469616d6f6e645f",
																										"id": 727,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4796:10:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																											"typeString": "literal_string \"Diamond_\""
																										},
																										"value": "Diamond_"
																									},
																									{
																										"arguments": [
																											{
																												"id": 730,
																												"name": "Diamond",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 359,
																												"src": "4824:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 728,
																												"name": "Strings",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1378,
																												"src": "4807:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_Strings_$1378_$",
																													"typeString": "type(library Strings)"
																												}
																											},
																											"id": 729,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "toString",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1260,
																											"src": "4807:16:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																												"typeString": "function (uint256) pure returns (string memory)"
																											}
																										},
																										"id": 731,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4807:25:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																											"typeString": "literal_string \"Diamond_\""
																										},
																										{
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									],
																									"expression": {
																										"id": 725,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "4779:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 726,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "4779:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 732,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4779:54:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4772:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 723,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "4772:6:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4772:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "4765:69:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				},
																				"id": 735,
																				"nodeType": "ExpressionStatement",
																				"src": "4765:69:2"
																			},
																			{
																				"expression": {
																					"id": 736,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 600,
																					"src": "4876:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 593,
																				"id": 737,
																				"nodeType": "Return",
																				"src": "4869:12:2"
																			}
																		]
																	},
																	"id": 739,
																	"nodeType": "IfStatement",
																	"src": "4477:419:2",
																	"trueBody": {
																		"id": 714,
																		"nodeType": "Block",
																		"src": "4492:195:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 691,
																						"name": "nftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "4510:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4518:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4510:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 694,
																				"nodeType": "ExpressionStatement",
																				"src": "4510:9:2"
																			},
																			{
																				"expression": {
																					"id": 696,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4537:6:2",
																					"subExpression": {
																						"id": 695,
																						"name": "Gold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 361,
																						"src": "4537:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 697,
																				"nodeType": "ExpressionStatement",
																				"src": "4537:6:2"
																			},
																			{
																				"expression": {
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 698,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "4561:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "476f6c645f",
																										"id": 703,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4592:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																											"typeString": "literal_string \"Gold_\""
																										},
																										"value": "Gold_"
																									},
																									{
																										"arguments": [
																											{
																												"id": 706,
																												"name": "Gold",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 361,
																												"src": "4617:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 704,
																												"name": "Strings",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1378,
																												"src": "4600:7:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_Strings_$1378_$",
																													"typeString": "type(library Strings)"
																												}
																											},
																											"id": 705,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "toString",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1260,
																											"src": "4600:16:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																												"typeString": "function (uint256) pure returns (string memory)"
																											}
																										},
																										"id": 707,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4600:22:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																											"typeString": "literal_string \"Gold_\""
																										},
																										{
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									],
																									"expression": {
																										"id": 701,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "4575:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 702,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encodePacked",
																									"nodeType": "MemberAccess",
																									"src": "4575:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 708,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4575:48:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 700,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4568:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 699,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "4568:6:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 709,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4568:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "4561:63:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				},
																				"id": 711,
																				"nodeType": "ExpressionStatement",
																				"src": "4561:63:2"
																			},
																			{
																				"expression": {
																					"id": 712,
																					"name": "nftId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 600,
																					"src": "4667:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 593,
																				"id": 713,
																				"nodeType": "Return",
																				"src": "4660:12:2"
																			}
																		]
																	}
																}
															]
														},
														"id": 741,
														"nodeType": "IfStatement",
														"src": "4110:795:2",
														"trueBody": {
															"id": 687,
															"nodeType": "Block",
															"src": "4142:158:2",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4156:8:2",
																		"subExpression": {
																			"id": 666,
																			"name": "Silver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "4156:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "4156:8:2"
																},
																{
																	"expression": {
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 669,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "4178:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 670,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "4183:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "53696c7665725f",
																								"id": 675,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4214:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																									"typeString": "literal_string \"Silver_\""
																								},
																								"value": "Silver_"
																							},
																							{
																								"arguments": [
																									{
																										"id": 678,
																										"name": "Silver",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 363,
																										"src": "4241:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 676,
																										"name": "Strings",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1378,
																										"src": "4224:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_Strings_$1378_$",
																											"typeString": "type(library Strings)"
																										}
																									},
																									"id": 677,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "toString",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1260,
																									"src": "4224:16:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																										"typeString": "function (uint256) pure returns (string memory)"
																									}
																								},
																								"id": 679,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4224:24:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_d49e7c9c5109c9b6a95acdecd950146400b41de5f13813a9fc044a616d2e10ca",
																									"typeString": "literal_string \"Silver_\""
																								},
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							],
																							"expression": {
																								"id": 673,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "4197:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 674,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "4197:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 680,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4197:52:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4190:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 671,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "4190:6:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4190:60:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"src": "4183:67:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"src": "4178:72:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"id": 684,
																	"nodeType": "ExpressionStatement",
																	"src": "4178:72:2"
																},
																{
																	"expression": {
																		"id": 685,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "4284:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 593,
																	"id": 686,
																	"nodeType": "Return",
																	"src": "4277:12:2"
																}
															]
														}
													},
													"id": 742,
													"nodeType": "IfStatement",
													"src": "3840:1065:2",
													"trueBody": {
														"id": 658,
														"nodeType": "Block",
														"src": "3869:235:2",
														"statements": [
															{
																"expression": {
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3883:6:2",
																	"subExpression": {
																		"id": 639,
																		"name": "Gold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "3883:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 641,
																"nodeType": "ExpressionStatement",
																"src": "3883:6:2"
															},
															{
																"expression": {
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 642,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "3903:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "476f6c645f",
																						"id": 647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3934:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																							"typeString": "literal_string \"Gold_\""
																						},
																						"value": "Gold_"
																					},
																					{
																						"arguments": [
																							{
																								"id": 650,
																								"name": "Gold",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 361,
																								"src": "3959:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 648,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1378,
																								"src": "3942:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1378_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 649,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1260,
																							"src": "3942:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) pure returns (string memory)"
																							}
																						},
																						"id": 651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3942:22:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_2f4eb6ac35a9c5be6000794426199587e7562388d401342335230f0173088e09",
																							"typeString": "literal_string \"Gold_\""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 645,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3917:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3917:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3917:48:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3910:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 643,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3910:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3910:56:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"src": "3903:63:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 655,
																"nodeType": "ExpressionStatement",
																"src": "3903:63:2"
															},
															{
																"expression": {
																	"id": 656,
																	"name": "nftId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "3987:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 593,
																"id": 657,
																"nodeType": "Return",
																"src": "3980:12:2"
															}
														]
													}
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "3551:1354:2",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "3582:252:2",
													"statements": [
														{
															"expression": {
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3597:9:2",
																"subExpression": {
																	"id": 612,
																	"name": "Diamond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "3597:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 614,
															"nodeType": "ExpressionStatement",
															"src": "3597:9:2"
														},
														{
															"expression": {
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 615,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "3620:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "4469616d6f6e645f",
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3651:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																						"typeString": "literal_string \"Diamond_\""
																					},
																					"value": "Diamond_"
																				},
																				{
																					"arguments": [
																						{
																							"id": 623,
																							"name": "Diamond",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 359,
																							"src": "3679:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 621,
																							"name": "Strings",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1378,
																							"src": "3662:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Strings_$1378_$",
																								"typeString": "type(library Strings)"
																							}
																						},
																						"id": 622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1260,
																						"src": "3662:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3662:25:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_1cf4bf0ff402c56b3e1ac3d9d988e1f2ba845bec0b9c4ced37279ceb7fa14500",
																						"typeString": "literal_string \"Diamond_\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 618,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3634:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3634:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3634:54:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3627:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 616,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "3627:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3627:62:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3620:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "3620:69:2"
														},
														{
															"expression": {
																"id": 629,
																"name": "nftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "3723:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 593,
															"id": 630,
															"nodeType": "Return",
															"src": "3716:12:2"
														}
													]
												}
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 590,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 589,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "3359:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3359:19:2"
										}
									],
									"name": "updateConditions",
									"nameLocation": "3331:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:2:2"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "3387:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3387:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:6:2"
									},
									"scope": 876,
									"src": "3322:1588:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "5066:337:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5081:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5097:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "5081:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5103:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "5073:58:2"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "5199:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "5194:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5194:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 767,
														"name": "updateConditions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5207:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5207:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5194:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "user_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5237:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 773,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5255:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5268:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 770,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "5231:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5231:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "5231:42:2"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5279:17:2",
													"subExpression": {
														"id": 777,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5279:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "5279:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5357:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 780,
																	"name": "dropsite_NFT_Owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "5302:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$367_storage_$",
																		"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
																	}
																},
																"id": 782,
																"indexExpression": {
																	"id": 781,
																	"name": "user_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "5321:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5302:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_nft_Owner_$367_storage",
																	"typeString": "struct Dropsite.nft_Owner storage ref"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "owned_Dropsite_NFTs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "5302:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5302:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5302:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "5302:61:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 788,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 791,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "5390:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5383:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 789,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "5383:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5383:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string storage pointer"
															}
														}
													],
													"id": 793,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5376:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_ptr_$",
														"typeString": "tuple(uint256,string storage pointer)"
													}
												},
												"functionReturnParameters": 757,
												"id": 794,
												"nodeType": "Return",
												"src": "5369:27:2"
											}
										]
									},
									"functionSelector": "32b61b4c",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 750,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 749,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 402,
												"src": "5000:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5000:9:2"
										},
										{
											"id": 752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 751,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "5010:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5010:19:2"
										}
									],
									"name": "FiatRandomMint",
									"nameLocation": "4966:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "4989:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4981:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4980:19:2"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "5046:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5046:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "5051:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 755,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5045:20:2"
									},
									"scope": 876,
									"src": "4957:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "5516:51:2",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 803,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5526:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 805,
														"indexExpression": {
															"id": 804,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5535:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5526:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 806,
														"name": "amountToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5545:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5526:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "5526:34:2"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAmount",
									"nameLocation": "5457:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "5479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "amountToDeposit",
												"nameLocation": "5490:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5485:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5485:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5470:36:2"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5516:0:2"
									},
									"scope": 876,
									"src": "5448:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "5730:478:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "TotalNFTsMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5745:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5761:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "5745:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204d696e74696e67204c696d69742072656163686564",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5767:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															},
															"value": "Max Minting Limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc1f25cc5a1a166fcde3330737b7db4f825039b7c7362e92c61c8a4b77aad058",
																"typeString": "literal_string \"Max Minting Limit reached\""
															}
														],
														"id": 821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5737:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "5737:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 829,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5810:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5810:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"hexValue": "3235303030303030303030303030303030303030",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5824:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_25000000000000000000_by_1",
																			"typeString": "int_const 25000000000000000000"
																		},
																		"value": "25000000000000000000"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5823:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_25000000000000000000_by_1",
																	"typeString": "int_const 25000000000000000000"
																}
															},
															"src": "5810:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616c616e6365206d757374206265203235204d6174696373",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583",
																"typeString": "literal_string \"Balance must be 25 Matics\""
															},
															"value": "Balance must be 25 Matics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_302186d8513c5eef7108163b058d7169380dbb9e6ed9f510e78d730d145a4583",
																"typeString": "literal_string \"Balance must be 25 Matics\""
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5802:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5802:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "5802:73:2"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "nftId",
														"nameLocation": "5960:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "5955:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5955:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 839,
														"name": "updateConditions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5968:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5955:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "user_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "5998:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6009:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 845,
															"name": "numOfCopies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "6016:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 846,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6029:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 842,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "5992:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "5992:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 850,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "6054:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6054:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 852,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6068:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6068:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "depositAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "6040:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6040:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "6040:38:2"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6084:17:2",
													"subExpression": {
														"id": 856,
														"name": "TotalNFTsMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "6084:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "6084:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 864,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6162:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 859,
																	"name": "dropsite_NFT_Owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6107:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_nft_Owner_$367_storage_$",
																		"typeString": "mapping(address => struct Dropsite.nft_Owner storage ref)"
																	}
																},
																"id": 861,
																"indexExpression": {
																	"id": 860,
																	"name": "user_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "6126:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6107:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_nft_Owner_$367_storage",
																	"typeString": "struct Dropsite.nft_Owner storage ref"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "owned_Dropsite_NFTs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "6107:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6107:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6107:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "6107:61:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 867,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6182:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 870,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "6195:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6188:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 868,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "6188:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6188:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string storage pointer"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6181:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_ptr_$",
														"typeString": "tuple(uint256,string storage pointer)"
													}
												},
												"functionReturnParameters": 820,
												"id": 873,
												"nodeType": "Return",
												"src": "6174:27:2"
											}
										]
									},
									"functionSelector": "3d65df70",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 815,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 814,
												"name": "contractIsNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "5666:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5666:19:2"
										}
									],
									"name": "CryptoRandomMint",
									"nameLocation": "5629:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "user_addr",
												"nameLocation": "5654:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5646:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5645:19:2"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5710:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5710:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5715:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5715:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:20:2"
									},
									"scope": 876,
									"src": "5620:588:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 877,
							"src": "146:6064:2",
							"usedErrors": []
						}
					],
					"src": "30:6180:2"
				},
				"id": 2
			},
			"ERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC1155_Dropsite.sol",
					"exportedSymbols": {
						"Address": [
							296
						],
						"Context": [
							318
						],
						"ERC1155_Dropsite": [
							1087
						],
						"ERC165": [
							1110
						],
						"IERC1155Receiver": [
							1151
						],
						"IERC1155_Dropsite": [
							1171
						],
						"IERC165_Dropsite": [
							1175
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"absolutePath": "IERC1155_Dropsite.sol",
							"file": "./IERC1155_Dropsite.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 1172,
							"src": "119:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver_Dropsite.sol",
							"file": "./IERC1155Receiver_Dropsite.sol",
							"id": 880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 1152,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 297,
							"src": "195:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 319,
							"src": "219:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165_Dropsite.sol",
							"file": "./ERC165_Dropsite.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 1111,
							"src": "243:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "519:7:3"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "519:7:3"
								},
								{
									"baseName": {
										"id": 887,
										"name": "IERC1155_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1171,
										"src": "528:17:3"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "528:17:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "275:214:3",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1087,
							"linearizedBaseContracts": [
								1087,
								1171,
								1175,
								318
							],
							"name": "ERC1155_Dropsite",
							"nameLocation": "499:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 891,
									"libraryName": {
										"id": 889,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "559:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "553:26:3",
									"typeName": {
										"id": 890,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 897,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "691:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1087,
									"src": "634:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 896,
										"keyType": {
											"id": 892,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "642:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "634:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 895,
											"keyType": {
												"id": 893,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "661:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "653:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 894,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 903,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "810:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1087,
									"src": "757:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 902,
										"keyType": {
											"id": 898,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "757:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 901,
											"keyType": {
												"id": 899,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "776:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 900,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "795:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "965:422:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 915,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "983:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "989:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 916,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "989:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "989:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "983:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "975:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "975:62:3"
											},
											{
												"assignments": [
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "1056:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "1048:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 924,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 926,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1067:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 930,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "1111:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1129:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1121:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1121:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1133:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 937,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1155:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 936,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1137:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1137:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 940,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "1178:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 939,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1160:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1160:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 929,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1090:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,string memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1090:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "1090:102:3"
											},
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 945,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "1202:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 948,
															"indexExpression": {
																"id": 946,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "1212:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1202:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 949,
														"indexExpression": {
															"id": 947,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1216:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1202:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 950,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "1223:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1202:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "1202:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 954,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "1259:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1277:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1269:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1269:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1269:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1281:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "1285:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 961,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1289:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "1244:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "EmitStatement",
												"src": "1239:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "1337:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1355:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1347:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 966,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1347:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1359:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "1363:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 972,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1367:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 973,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1375:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 964,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1306:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,string memory)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "1306:74:3"
											}
										]
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "844:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "867:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "859:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "887:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "879:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "907:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "923:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "923:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:98:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:3"
									},
									"scope": 1087,
									"src": "835:552:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "1607:2:3",
										"statements": []
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1403:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1441:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1433:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1467:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1489:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1481:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1518:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1501:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 984,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1501:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 985,
													"nodeType": "ArrayTypeName",
													"src": "1501:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1548:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1531:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 987,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1531:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 988,
													"nodeType": "ArrayTypeName",
													"src": "1531:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1579:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1565:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:166:3"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:0:3"
									},
									"scope": 1087,
									"src": "1394:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1809:532:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1823:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1823:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "1819:516:3",
												"trueBody": {
													"id": 1055,
													"nodeType": "Block",
													"src": "1840:495:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1037,
																		"nodeType": "Block",
																		"src": "1957:184:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1026,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1024,
																						"src": "1979:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1027,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1151,
																								"src": "1991:16:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1151_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1028,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1132,
																							"src": "1991:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,string calldata) returns (bytes4)"
																							}
																						},
																						"id": 1029,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1991:43:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1979:55:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1036,
																				"nodeType": "IfStatement",
																				"src": "1975:152:3",
																				"trueBody": {
																					"id": 1035,
																					"nodeType": "Block",
																					"src": "2036:91:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1032,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2065:42:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1031,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "2058:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1033,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2058:50:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1034,
																							"nodeType": "ExpressionStatement",
																							"src": "2058:50:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1038,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1025,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1024,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "1947:8:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1038,
																				"src": "1940:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1023,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1940:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1939:17:3"
																	},
																	"src": "1931:210:3"
																},
																{
																	"block": {
																		"id": 1046,
																		"nodeType": "Block",
																		"src": "2176:47:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1043,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1040,
																							"src": "2201:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1042,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2194:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2194:14:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1045,
																				"nodeType": "ExpressionStatement",
																				"src": "2194:14:3"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1047,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1041,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1040,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "2168:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1047,
																				"src": "2154:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1039,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2154:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2153:22:3"
																	},
																	"src": "2142:81:3"
																},
																{
																	"block": {
																		"id": 1052,
																		"nodeType": "Block",
																		"src": "2230:95:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1049,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2255:54:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1048,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "2248:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2248:62:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1051,
																				"nodeType": "ExpressionStatement",
																				"src": "2248:62:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1053,
																	"nodeType": "TryCatchClause",
																	"src": "2224:101:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "1897:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1018,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "1907:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1019,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "1913:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1020,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "1917:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1021,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "1925:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1014,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "1875:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1013,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "1858:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1151_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1858:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1151",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1132,
																	"src": "1858:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,string memory) external returns (bytes4)"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1858:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1054,
															"nodeType": "TryStatement",
															"src": "1854:471:3"
														}
													]
												}
											}
										]
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "1624:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1672:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1664:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1690:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1720:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1712:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1740:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1732:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1760:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1752:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1790:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1776:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:146:3"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:0:3"
									},
									"scope": 1087,
									"src": "1615:726:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "2431:109:3",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "2458:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1085,
														"src": "2441:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1068,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2441:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1069,
															"nodeType": "ArrayTypeName",
															"src": "2441:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2480:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2466:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1071,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2470:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1072,
															"nodeType": "ArrayTypeName",
															"src": "2470:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:41:3"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1077,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2492:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1079,
														"indexExpression": {
															"hexValue": "30",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2498:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2492:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1080,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "2503:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2492:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2492:18:3"
											},
											{
												"expression": {
													"id": 1083,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1070,
													"src": "2528:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1084,
												"nodeType": "Return",
												"src": "2521:12:3"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "2356:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "2382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:17:3"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2413:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1062,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2413:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1063,
													"nodeType": "ArrayTypeName",
													"src": "2413:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:18:3"
									},
									"scope": 1087,
									"src": "2347:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1088,
							"src": "490:2052:3",
							"usedErrors": []
						}
					],
					"src": "94:2448:3"
				},
				"id": 3
			},
			"ERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "ERC165_Dropsite.sol",
					"exportedSymbols": {
						"ERC165": [
							1110
						],
						"IERC165_Dropsite": [
							1175
						]
					},
					"id": 1111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1111,
							"sourceUnit": 1176,
							"src": "124:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1092,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1175,
										"src": "763:16:4"
									},
									"id": 1093,
									"nodeType": "InheritanceSpecifier",
									"src": "763:16:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1091,
								"nodeType": "StructuredDocumentation",
								"src": "158:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1110,
							"linearizedBaseContracts": [
								1110,
								1175
							],
							"name": "ERC165",
							"nameLocation": "753:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "930:73:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1101,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "947:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1103,
																	"name": "IERC165_Dropsite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1175_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_Dropsite_$1175_$",
																		"typeString": "type(contract IERC165_Dropsite)"
																	}
																],
																"id": 1102,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "962:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_Dropsite_$1175",
																"typeString": "type(contract IERC165_Dropsite)"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "962:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "947:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1107,
												"nodeType": "Return",
												"src": "940:56:4"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "786:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "856:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "881:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "874:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:20:4"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "924:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:4"
									},
									"scope": 1110,
									"src": "847:156:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1111,
							"src": "735:270:4",
							"usedErrors": []
						}
					],
					"src": "99:906:4"
				},
				"id": 4
			},
			"IERC1155Receiver_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1151
						],
						"IERC165_Dropsite": [
							1175
						]
					},
					"id": 1152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1176,
							"src": "127:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1115,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1175,
										"src": "231:16:5"
									},
									"id": 1116,
									"nodeType": "InheritanceSpecifier",
									"src": "231:16:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1114,
								"nodeType": "StructuredDocumentation",
								"src": "161:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1151,
							"linearizedBaseContracts": [
								1151,
								1175
							],
							"name": "IERC1155Receiver",
							"nameLocation": "211:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "254:826:5",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "ae89a248",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1094:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1129:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1121:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1155:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1147:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1177:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1169:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1189:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1228:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1212:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1212:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:127:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1257:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:8:5"
									},
									"scope": 1151,
									"src": "1085:180:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "1271:994:5",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2279:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2319:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2311:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2345:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2337:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2378:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2359:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2359:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "2359:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2410:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2391:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1141,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2391:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1142,
													"nodeType": "ArrayTypeName",
													"src": "2391:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2441:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2426:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2426:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:150:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2470:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2470:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:8:5"
									},
									"scope": 1151,
									"src": "2270:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1152,
							"src": "201:2279:5",
							"usedErrors": []
						}
					],
					"src": "103:2377:5"
				},
				"id": 5
			},
			"IERC1155_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC1155_Dropsite.sol",
					"exportedSymbols": {
						"IERC1155_Dropsite": [
							1171
						],
						"IERC165_Dropsite": [
							1175
						]
					},
					"id": 1172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"absolutePath": "IERC165_Dropsite.sol",
							"file": "./IERC165_Dropsite.sol",
							"id": 1154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 1176,
							"src": "171:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1156,
										"name": "IERC165_Dropsite",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1175,
										"src": "403:16:6"
									},
									"id": 1157,
									"nodeType": "InheritanceSpecifier",
									"src": "403:16:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1155,
								"nodeType": "StructuredDocumentation",
								"src": "205:165:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1171,
							"linearizedBaseContracts": [
								1171,
								1175
							],
							"name": "IERC1155_Dropsite",
							"nameLocation": "381:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "426:121:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1170,
									"name": "TransferSingle",
									"nameLocation": "558:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "589:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "573:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "615:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "599:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "637:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "621:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "641:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "661:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "653:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:95:6"
									},
									"src": "552:116:6"
								}
							],
							"scope": 1172,
							"src": "371:2545:6",
							"usedErrors": []
						}
					],
					"src": "95:2821:6"
				},
				"id": 6
			},
			"IERC165_Dropsite.sol": {
				"ast": {
					"absolutePath": "IERC165_Dropsite.sol",
					"exportedSymbols": {
						"IERC165_Dropsite": [
							1175
						]
					},
					"id": 1176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1174,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": true,
							"id": 1175,
							"linearizedBaseContracts": [
								1175
							],
							"name": "IERC165_Dropsite",
							"nameLocation": "415:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1176,
							"src": "405:458:7",
							"usedErrors": []
						}
					],
					"src": "100:763:7"
				},
				"id": 7
			},
			"Strings.sol": {
				"ast": {
					"absolutePath": "Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1378
						]
					},
					"id": 1379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "111:35:8",
								"text": " @dev String operations.;"
							},
							"fullyImplemented": true,
							"id": 1378,
							"linearizedBaseContracts": [
								1378
							],
							"name": "Strings",
							"nameLocation": "155:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1181,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "194:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "169:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1179,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1180,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "400:632:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1189,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "602:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "611:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "602:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "598:51:8",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "614:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1188,
															"id": 1193,
															"nodeType": "Return",
															"src": "628:10:8"
														}
													]
												}
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "666:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "658:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "658:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"id": 1198,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "658:20:8"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "696:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "688:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "688:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"nodeType": "VariableDeclarationStatement",
												"src": "688:14:8"
											},
											{
												"body": {
													"id": 1213,
													"nodeType": "Block",
													"src": "730:57:8",
													"statements": [
														{
															"expression": {
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "744:8:8",
																"subExpression": {
																	"id": 1206,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "744:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1208,
															"nodeType": "ExpressionStatement",
															"src": "744:8:8"
														},
														{
															"expression": {
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "766:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "774:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "766:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "766:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "719:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "727:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "719:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "WhileStatement",
												"src": "712:75:8"
											},
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "809:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "796:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1215,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "796:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"id": 1219,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "828:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "818:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1217,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "796:39:8"
											},
											{
												"body": {
													"id": 1252,
													"nodeType": "Block",
													"src": "864:131:8",
													"statements": [
														{
															"expression": {
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1225,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "878:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "888:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "878:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1228,
															"nodeType": "ExpressionStatement",
															"src": "878:11:8"
														},
														{
															"expression": {
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1229,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "903:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1231,
																	"indexExpression": {
																		"id": 1230,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "910:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "903:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1243,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1236,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "933:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1241,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1239,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1184,
																									"src": "946:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1240,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "954:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "946:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1238,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "938:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1237,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "938:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1242,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "938:19:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "933:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "927:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1234,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "927:5:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "927:31:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "920:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1232,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "920:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "920:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "903:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "903:56:8"
														},
														{
															"expression": {
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "973:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "982:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "973:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1251,
															"nodeType": "ExpressionStatement",
															"src": "973:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1222,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "852:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "861:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "852:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1253,
												"nodeType": "WhileStatement",
												"src": "845:150:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1018:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1011:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1254,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1011:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1011:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1258,
												"nodeType": "Return",
												"src": "1004:21:8"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "234:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "338:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "355:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "347:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:15:8"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "385:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "385:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:15:8"
									},
									"scope": 1378,
									"src": "329:703:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "1211:255:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1268,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "1225:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1234:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1225:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "1221:54:8",
												"trueBody": {
													"id": 1273,
													"nodeType": "Block",
													"src": "1237:38:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1258:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1267,
															"id": 1272,
															"nodeType": "Return",
															"src": "1251:13:8"
														}
													]
												}
											},
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1292:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "1284:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1278,
												"initialValue": {
													"id": 1277,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1263,
													"src": "1299:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1284:20:8"
											},
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1322:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "1314:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1314:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"hexValue": "30",
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1331:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1314:18:8"
											},
											{
												"body": {
													"id": 1293,
													"nodeType": "Block",
													"src": "1360:57:8",
													"statements": [
														{
															"expression": {
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1374:8:8",
																"subExpression": {
																	"id": 1286,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "1374:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1288,
															"nodeType": "ExpressionStatement",
															"src": "1374:8:8"
														},
														{
															"expression": {
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1289,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "1396:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1405:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1396:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1292,
															"nodeType": "ExpressionStatement",
															"src": "1396:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1283,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "1349:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1357:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1349:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1294,
												"nodeType": "WhileStatement",
												"src": "1342:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "1445:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1297,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "1452:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1295,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1301,
															1377
														],
														"referencedDeclaration": 1377,
														"src": "1433:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1299,
												"nodeType": "Return",
												"src": "1426:33:8"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "1038:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1146:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1166:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1158:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:15:8"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1196:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:15:8"
									},
									"scope": 1378,
									"src": "1137:329:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "1679:351:8",
										"statements": [
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1702:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "1689:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1311,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1689:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1721:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1316,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "1725:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1721:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1721:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1711:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1313,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1715:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1689:47:8"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1322,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "1746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1324,
														"indexExpression": {
															"hexValue": "30",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1746:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1758:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1746:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "1746:15:8"
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1328,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "1771:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1330,
														"indexExpression": {
															"hexValue": "31",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1778:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1771:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1783:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1771:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "1771:15:8"
											},
											{
												"body": {
													"id": 1362,
													"nodeType": "Block",
													"src": "1841:87:8",
													"statements": [
														{
															"expression": {
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1348,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "1855:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1350,
																	"indexExpression": {
																		"id": 1349,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "1862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1855:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1351,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "1867:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1355,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1304,
																			"src": "1880:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1888:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1880:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1867:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1855:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1357,
															"nodeType": "ExpressionStatement",
															"src": "1855:37:8"
														},
														{
															"expression": {
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "1906:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1916:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1906:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1361,
															"nodeType": "ExpressionStatement",
															"src": "1906:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1342,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "1829:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1833:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1829:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"initializationExpression": {
													"assignments": [
														1335
													],
													"declarations": [
														{
															"constant": false,
															"id": 1335,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1809:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1363,
															"src": "1801:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1334,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1801:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1341,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1337,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "1817:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1813:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1826:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1813:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1801:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1836:3:8",
														"subExpression": {
															"id": 1345,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "1838:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1347,
													"nodeType": "ExpressionStatement",
													"src": "1836:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1796:132:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "1945:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1954:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1945:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1957:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1937:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "1937:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1373,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2016:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2009:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1371,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2009:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1310,
												"id": 1375,
												"nodeType": "Return",
												"src": "2002:21:8"
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "1472:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1598:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1618:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1610:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1633:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1625:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:31:8"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1664:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1664:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:15:8"
									},
									"scope": 1378,
									"src": "1589:441:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1379,
							"src": "147:1885:8",
							"usedErrors": []
						}
					],
					"src": "86:1946:8"
				},
				"id": 8
			}
		}
	}
}